#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3615
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EyouSoft.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="bbldb")]
	public partial class EyouSoftTBL : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSMSAccount(SMSAccount instance);
    partial void UpdateSMSAccount(SMSAccount instance);
    partial void DeleteSMSAccount(SMSAccount instance);
    partial void InsertSMSCommonWordClass(SMSCommonWordClass instance);
    partial void UpdateSMSCommonWordClass(SMSCommonWordClass instance);
    partial void DeleteSMSCommonWordClass(SMSCommonWordClass instance);
    partial void InsertSMSCommonWords(SMSCommonWords instance);
    partial void UpdateSMSCommonWords(SMSCommonWords instance);
    partial void DeleteSMSCommonWords(SMSCommonWords instance);
    partial void InsertSMSCustomerClass(SMSCustomerClass instance);
    partial void UpdateSMSCustomerClass(SMSCustomerClass instance);
    partial void DeleteSMSCustomerClass(SMSCustomerClass instance);
    partial void InsertSMSCustomerList(SMSCustomerList instance);
    partial void UpdateSMSCustomerList(SMSCustomerList instance);
    partial void DeleteSMSCustomerList(SMSCustomerList instance);
    partial void InsertSMSPayMoney(SMSPayMoney instance);
    partial void UpdateSMSPayMoney(SMSPayMoney instance);
    partial void DeleteSMSPayMoney(SMSPayMoney instance);
    partial void InsertSMSSendDetail(SMSSendDetail instance);
    partial void UpdateSMSSendDetail(SMSSendDetail instance);
    partial void DeleteSMSSendDetail(SMSSendDetail instance);
    partial void InsertSMSSendPlan(SMSSendPlan instance);
    partial void UpdateSMSSendPlan(SMSSendPlan instance);
    partial void DeleteSMSSendPlan(SMSSendPlan instance);
    partial void InsertSMSSendTotal(SMSSendTotal instance);
    partial void UpdateSMSSendTotal(SMSSendTotal instance);
    partial void DeleteSMSSendTotal(SMSSendTotal instance);
    partial void InsertSMSTempFeeTake(SMSTempFeeTake instance);
    partial void UpdateSMSTempFeeTake(SMSTempFeeTake instance);
    partial void DeleteSMSTempFeeTake(SMSTempFeeTake instance);
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertAttendanceInfo(AttendanceInfo instance);
    partial void UpdateAttendanceInfo(AttendanceInfo instance);
    partial void DeleteAttendanceInfo(AttendanceInfo instance);
    partial void InsertCashierRegister(CashierRegister instance);
    partial void UpdateCashierRegister(CashierRegister instance);
    partial void DeleteCashierRegister(CashierRegister instance);
    partial void InsertCompanyAccount(CompanyAccount instance);
    partial void UpdateCompanyAccount(CompanyAccount instance);
    partial void DeleteCompanyAccount(CompanyAccount instance);
    partial void InsertCompanyBrands(CompanyBrands instance);
    partial void UpdateCompanyBrands(CompanyBrands instance);
    partial void DeleteCompanyBrands(CompanyBrands instance);
    partial void InsertCompanyCash(CompanyCash instance);
    partial void UpdateCompanyCash(CompanyCash instance);
    partial void DeleteCompanyCash(CompanyCash instance);
    partial void InsertCompanyCashFlow(CompanyCashFlow instance);
    partial void UpdateCompanyCashFlow(CompanyCashFlow instance);
    partial void DeleteCompanyCashFlow(CompanyCashFlow instance);
    partial void InsertCompanyCity(CompanyCity instance);
    partial void UpdateCompanyCity(CompanyCity instance);
    partial void DeleteCompanyCity(CompanyCity instance);
    partial void InsertCompanyCustomStand(CompanyCustomStand instance);
    partial void UpdateCompanyCustomStand(CompanyCustomStand instance);
    partial void DeleteCompanyCustomStand(CompanyCustomStand instance);
    partial void InsertCompanyDepartment(CompanyDepartment instance);
    partial void UpdateCompanyDepartment(CompanyDepartment instance);
    partial void DeleteCompanyDepartment(CompanyDepartment instance);
    partial void InsertCompanyInfo(CompanyInfo instance);
    partial void UpdateCompanyInfo(CompanyInfo instance);
    partial void DeleteCompanyInfo(CompanyInfo instance);
    partial void InsertCompanyPriceStand(CompanyPriceStand instance);
    partial void UpdateCompanyPriceStand(CompanyPriceStand instance);
    partial void DeleteCompanyPriceStand(CompanyPriceStand instance);
    partial void InsertCompanyProvince(CompanyProvince instance);
    partial void UpdateCompanyProvince(CompanyProvince instance);
    partial void DeleteCompanyProvince(CompanyProvince instance);
    partial void InsertCompanySetting(CompanySetting instance);
    partial void UpdateCompanySetting(CompanySetting instance);
    partial void DeleteCompanySetting(CompanySetting instance);
    partial void InsertCompanySupplier(CompanySupplier instance);
    partial void UpdateCompanySupplier(CompanySupplier instance);
    partial void DeleteCompanySupplier(CompanySupplier instance);
    partial void InsertCompanyTemplates(CompanyTemplates instance);
    partial void UpdateCompanyTemplates(CompanyTemplates instance);
    partial void DeleteCompanyTemplates(CompanyTemplates instance);
    partial void InsertCompanyUser(CompanyUser instance);
    partial void UpdateCompanyUser(CompanyUser instance);
    partial void DeleteCompanyUser(CompanyUser instance);
    partial void InsertContractInfo(ContractInfo instance);
    partial void UpdateContractInfo(ContractInfo instance);
    partial void DeleteContractInfo(ContractInfo instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerCallBack(CustomerCallBack instance);
    partial void UpdateCustomerCallBack(CustomerCallBack instance);
    partial void DeleteCustomerCallBack(CustomerCallBack instance);
    partial void InsertCustomerCallBackResult(CustomerCallBackResult instance);
    partial void UpdateCustomerCallBackResult(CustomerCallBackResult instance);
    partial void DeleteCustomerCallBackResult(CustomerCallBackResult instance);
    partial void InsertCustomerCarefor(CustomerCarefor instance);
    partial void UpdateCustomerCarefor(CustomerCarefor instance);
    partial void DeleteCustomerCarefor(CustomerCarefor instance);
    partial void InsertCustomerContactInfo(CustomerContactInfo instance);
    partial void UpdateCustomerContactInfo(CustomerContactInfo instance);
    partial void DeleteCustomerContactInfo(CustomerContactInfo instance);
    partial void InsertCustomerMarketing(CustomerMarketing instance);
    partial void UpdateCustomerMarketing(CustomerMarketing instance);
    partial void DeleteCustomerMarketing(CustomerMarketing instance);
    partial void InsertCustomerQuote(CustomerQuote instance);
    partial void UpdateCustomerQuote(CustomerQuote instance);
    partial void DeleteCustomerQuote(CustomerQuote instance);
    partial void InsertCustomerQuoteClaim(CustomerQuoteClaim instance);
    partial void UpdateCustomerQuoteClaim(CustomerQuoteClaim instance);
    partial void DeleteCustomerQuoteClaim(CustomerQuoteClaim instance);
    partial void InsertCustomerQuotePrice(CustomerQuotePrice instance);
    partial void UpdateCustomerQuotePrice(CustomerQuotePrice instance);
    partial void DeleteCustomerQuotePrice(CustomerQuotePrice instance);
    partial void InsertCustomerRefund(CustomerRefund instance);
    partial void UpdateCustomerRefund(CustomerRefund instance);
    partial void DeleteCustomerRefund(CustomerRefund instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDutyManager(DutyManager instance);
    partial void UpdateDutyManager(DutyManager instance);
    partial void DeleteDutyManager(DutyManager instance);
    partial void InsertFinancialPayInfo(FinancialPayInfo instance);
    partial void UpdateFinancialPayInfo(FinancialPayInfo instance);
    partial void DeleteFinancialPayInfo(FinancialPayInfo instance);
    partial void InsertFixedAsset(FixedAsset instance);
    partial void UpdateFixedAsset(FixedAsset instance);
    partial void DeleteFixedAsset(FixedAsset instance);
    partial void InsertMeetingInfo(MeetingInfo instance);
    partial void UpdateMeetingInfo(MeetingInfo instance);
    partial void DeleteMeetingInfo(MeetingInfo instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertMessageReply(MessageReply instance);
    partial void UpdateMessageReply(MessageReply instance);
    partial void DeleteMessageReply(MessageReply instance);
    partial void InsertNews(News instance);
    partial void UpdateNews(News instance);
    partial void DeleteNews(News instance);
    partial void InsertNewsAccept(NewsAccept instance);
    partial void UpdateNewsAccept(NewsAccept instance);
    partial void DeleteNewsAccept(NewsAccept instance);
    partial void InsertPersonalHistory(PersonalHistory instance);
    partial void UpdatePersonalHistory(PersonalHistory instance);
    partial void DeletePersonalHistory(PersonalHistory instance);
    partial void InsertPersonnelInfo(PersonnelInfo instance);
    partial void UpdatePersonnelInfo(PersonnelInfo instance);
    partial void DeletePersonnelInfo(PersonnelInfo instance);
    partial void InsertPlanLocalAgency(PlanLocalAgency instance);
    partial void UpdatePlanLocalAgency(PlanLocalAgency instance);
    partial void DeletePlanLocalAgency(PlanLocalAgency instance);
    partial void InsertPlanLocalAgencyPrice(PlanLocalAgencyPrice instance);
    partial void UpdatePlanLocalAgencyPrice(PlanLocalAgencyPrice instance);
    partial void DeletePlanLocalAgencyPrice(PlanLocalAgencyPrice instance);
    partial void InsertPlanLocalAgencyTourPlan(PlanLocalAgencyTourPlan instance);
    partial void UpdatePlanLocalAgencyTourPlan(PlanLocalAgencyTourPlan instance);
    partial void DeletePlanLocalAgencyTourPlan(PlanLocalAgencyTourPlan instance);
    partial void InsertPlanSingle(PlanSingle instance);
    partial void UpdatePlanSingle(PlanSingle instance);
    partial void DeletePlanSingle(PlanSingle instance);
    partial void InsertPlanTicket(PlanTicket instance);
    partial void UpdatePlanTicket(PlanTicket instance);
    partial void DeletePlanTicket(PlanTicket instance);
    partial void InsertPlanTicketFlight(PlanTicketFlight instance);
    partial void UpdatePlanTicketFlight(PlanTicketFlight instance);
    partial void DeletePlanTicketFlight(PlanTicketFlight instance);
    partial void InsertPlanTicketKind(PlanTicketKind instance);
    partial void UpdatePlanTicketKind(PlanTicketKind instance);
    partial void DeletePlanTicketKind(PlanTicketKind instance);
    partial void InsertPlanTicketOut(PlanTicketOut instance);
    partial void UpdatePlanTicketOut(PlanTicketOut instance);
    partial void DeletePlanTicketOut(PlanTicketOut instance);
    partial void InsertPlanTicketOutCustomer(PlanTicketOutCustomer instance);
    partial void UpdatePlanTicketOutCustomer(PlanTicketOutCustomer instance);
    partial void DeletePlanTicketOutCustomer(PlanTicketOutCustomer instance);
    partial void InsertQuote(Quote instance);
    partial void UpdateQuote(Quote instance);
    partial void DeleteQuote(Quote instance);
    partial void InsertReceiveRefund(ReceiveRefund instance);
    partial void UpdateReceiveRefund(ReceiveRefund instance);
    partial void DeleteReceiveRefund(ReceiveRefund instance);
    partial void InsertRoute(Route instance);
    partial void UpdateRoute(Route instance);
    partial void DeleteRoute(Route instance);
    partial void InsertRouteFastPlan(RouteFastPlan instance);
    partial void UpdateRouteFastPlan(RouteFastPlan instance);
    partial void DeleteRouteFastPlan(RouteFastPlan instance);
    partial void InsertRouteFile(RouteFile instance);
    partial void UpdateRouteFile(RouteFile instance);
    partial void DeleteRouteFile(RouteFile instance);
    partial void InsertRouteQuote(RouteQuote instance);
    partial void UpdateRouteQuote(RouteQuote instance);
    partial void DeleteRouteQuote(RouteQuote instance);
    partial void InsertRouteQuoteList(RouteQuoteList instance);
    partial void UpdateRouteQuoteList(RouteQuoteList instance);
    partial void DeleteRouteQuoteList(RouteQuoteList instance);
    partial void InsertRouteService(RouteService instance);
    partial void UpdateRouteService(RouteService instance);
    partial void DeleteRouteService(RouteService instance);
    partial void InsertRouteStandardPlan(RouteStandardPlan instance);
    partial void UpdateRouteStandardPlan(RouteStandardPlan instance);
    partial void DeleteRouteStandardPlan(RouteStandardPlan instance);
    partial void InsertRuleInfo(RuleInfo instance);
    partial void UpdateRuleInfo(RuleInfo instance);
    partial void DeleteRuleInfo(RuleInfo instance);
    partial void InsertSchoolInfo(SchoolInfo instance);
    partial void UpdateSchoolInfo(SchoolInfo instance);
    partial void DeleteSchoolInfo(SchoolInfo instance);
    partial void InsertSite(Site instance);
    partial void UpdateSite(Site instance);
    partial void DeleteSite(Site instance);
    partial void InsertSiteAttach(SiteAttach instance);
    partial void UpdateSiteAttach(SiteAttach instance);
    partial void DeleteSiteAttach(SiteAttach instance);
    partial void InsertSiteFriendLink(SiteFriendLink instance);
    partial void UpdateSiteFriendLink(SiteFriendLink instance);
    partial void DeleteSiteFriendLink(SiteFriendLink instance);
    partial void InsertSiteTicketPolicy(SiteTicketPolicy instance);
    partial void UpdateSiteTicketPolicy(SiteTicketPolicy instance);
    partial void DeleteSiteTicketPolicy(SiteTicketPolicy instance);
    partial void InsertStatAllIncome(StatAllIncome instance);
    partial void UpdateStatAllIncome(StatAllIncome instance);
    partial void DeleteStatAllIncome(StatAllIncome instance);
    partial void InsertStatAllOut(StatAllOut instance);
    partial void UpdateStatAllOut(StatAllOut instance);
    partial void DeleteStatAllOut(StatAllOut instance);
    partial void InsertSupplierAccessory(SupplierAccessory instance);
    partial void UpdateSupplierAccessory(SupplierAccessory instance);
    partial void DeleteSupplierAccessory(SupplierAccessory instance);
    partial void InsertSupplierCarInfo(SupplierCarInfo instance);
    partial void UpdateSupplierCarInfo(SupplierCarInfo instance);
    partial void DeleteSupplierCarInfo(SupplierCarInfo instance);
    partial void InsertSupplierContact(SupplierContact instance);
    partial void UpdateSupplierContact(SupplierContact instance);
    partial void DeleteSupplierContact(SupplierContact instance);
    partial void InsertSupplierHotel(SupplierHotel instance);
    partial void UpdateSupplierHotel(SupplierHotel instance);
    partial void DeleteSupplierHotel(SupplierHotel instance);
    partial void InsertSupplierHotelRoomType(SupplierHotelRoomType instance);
    partial void UpdateSupplierHotelRoomType(SupplierHotelRoomType instance);
    partial void DeleteSupplierHotelRoomType(SupplierHotelRoomType instance);
    partial void InsertSupplierRestaurant(SupplierRestaurant instance);
    partial void UpdateSupplierRestaurant(SupplierRestaurant instance);
    partial void DeleteSupplierRestaurant(SupplierRestaurant instance);
    partial void InsertSupplierShopping(SupplierShopping instance);
    partial void UpdateSupplierShopping(SupplierShopping instance);
    partial void DeleteSupplierShopping(SupplierShopping instance);
    partial void InsertSupplierSpot(SupplierSpot instance);
    partial void UpdateSupplierSpot(SupplierSpot instance);
    partial void DeleteSupplierSpot(SupplierSpot instance);
    partial void InsertSys(Sys instance);
    partial void UpdateSys(Sys instance);
    partial void DeleteSys(Sys instance);
    partial void InsertSysCity(SysCity instance);
    partial void UpdateSysCity(SysCity instance);
    partial void DeleteSysCity(SysCity instance);
    partial void InsertSysDeletedFileQue(SysDeletedFileQue instance);
    partial void UpdateSysDeletedFileQue(SysDeletedFileQue instance);
    partial void DeleteSysDeletedFileQue(SysDeletedFileQue instance);
    partial void InsertSysDomain(SysDomain instance);
    partial void UpdateSysDomain(SysDomain instance);
    partial void DeleteSysDomain(SysDomain instance);
    partial void InsertSysExceptionLog(SysExceptionLog instance);
    partial void UpdateSysExceptionLog(SysExceptionLog instance);
    partial void DeleteSysExceptionLog(SysExceptionLog instance);
    partial void InsertSysHandleLogs(SysHandleLogs instance);
    partial void UpdateSysHandleLogs(SysHandleLogs instance);
    partial void DeleteSysHandleLogs(SysHandleLogs instance);
    partial void InsertSysLoginLog(SysLoginLog instance);
    partial void UpdateSysLoginLog(SysLoginLog instance);
    partial void DeleteSysLoginLog(SysLoginLog instance);
    partial void InsertSysPermissionCategory(SysPermissionCategory instance);
    partial void UpdateSysPermissionCategory(SysPermissionCategory instance);
    partial void DeleteSysPermissionCategory(SysPermissionCategory instance);
    partial void InsertSysPermissionClass(SysPermissionClass instance);
    partial void UpdateSysPermissionClass(SysPermissionClass instance);
    partial void DeleteSysPermissionClass(SysPermissionClass instance);
    partial void InsertSysPermissionList(SysPermissionList instance);
    partial void UpdateSysPermissionList(SysPermissionList instance);
    partial void DeleteSysPermissionList(SysPermissionList instance);
    partial void InsertSysPermissionType(SysPermissionType instance);
    partial void UpdateSysPermissionType(SysPermissionType instance);
    partial void DeleteSysPermissionType(SysPermissionType instance);
    partial void InsertSysPluging(SysPluging instance);
    partial void UpdateSysPluging(SysPluging instance);
    partial void DeleteSysPluging(SysPluging instance);
    partial void InsertSysPlugingSetting(SysPlugingSetting instance);
    partial void UpdateSysPlugingSetting(SysPlugingSetting instance);
    partial void DeleteSysPlugingSetting(SysPlugingSetting instance);
    partial void InsertSysProvince(SysProvince instance);
    partial void UpdateSysProvince(SysProvince instance);
    partial void DeleteSysProvince(SysProvince instance);
    partial void InsertSysRoleManage(SysRoleManage instance);
    partial void UpdateSysRoleManage(SysRoleManage instance);
    partial void DeleteSysRoleManage(SysRoleManage instance);
    partial void InsertSystemUser(SystemUser instance);
    partial void UpdateSystemUser(SystemUser instance);
    partial void DeleteSystemUser(SystemUser instance);
    partial void InsertTemplateUseRange(TemplateUseRange instance);
    partial void UpdateTemplateUseRange(TemplateUseRange instance);
    partial void DeleteTemplateUseRange(TemplateUseRange instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertTourAttach(TourAttach instance);
    partial void UpdateTourAttach(TourAttach instance);
    partial void DeleteTourAttach(TourAttach instance);
    partial void InsertTourCity(TourCity instance);
    partial void UpdateTourCity(TourCity instance);
    partial void DeleteTourCity(TourCity instance);
    partial void InsertTourCreateRule(TourCreateRule instance);
    partial void UpdateTourCreateRule(TourCreateRule instance);
    partial void DeleteTourCreateRule(TourCreateRule instance);
    partial void InsertTourEveryday(TourEveryday instance);
    partial void UpdateTourEveryday(TourEveryday instance);
    partial void DeleteTourEveryday(TourEveryday instance);
    partial void InsertTourEverydayApply(TourEverydayApply instance);
    partial void UpdateTourEverydayApply(TourEverydayApply instance);
    partial void DeleteTourEverydayApply(TourEverydayApply instance);
    partial void InsertTourEverydayApplyTraveller(TourEverydayApplyTraveller instance);
    partial void UpdateTourEverydayApplyTraveller(TourEverydayApplyTraveller instance);
    partial void DeleteTourEverydayApplyTraveller(TourEverydayApplyTraveller instance);
    partial void InsertTourEverydayAttach(TourEverydayAttach instance);
    partial void UpdateTourEverydayAttach(TourEverydayAttach instance);
    partial void DeleteTourEverydayAttach(TourEverydayAttach instance);
    partial void InsertTourEverydayPlan(TourEverydayPlan instance);
    partial void UpdateTourEverydayPlan(TourEverydayPlan instance);
    partial void DeleteTourEverydayPlan(TourEverydayPlan instance);
    partial void InsertTourEverydayPrice(TourEverydayPrice instance);
    partial void UpdateTourEverydayPrice(TourEverydayPrice instance);
    partial void DeleteTourEverydayPrice(TourEverydayPrice instance);
    partial void InsertTourEverydayQuickPlan(TourEverydayQuickPlan instance);
    partial void UpdateTourEverydayQuickPlan(TourEverydayQuickPlan instance);
    partial void DeleteTourEverydayQuickPlan(TourEverydayQuickPlan instance);
    partial void InsertTourEverydayService(TourEverydayService instance);
    partial void UpdateTourEverydayService(TourEverydayService instance);
    partial void DeleteTourEverydayService(TourEverydayService instance);
    partial void InsertTourLocalAgency(TourLocalAgency instance);
    partial void UpdateTourLocalAgency(TourLocalAgency instance);
    partial void DeleteTourLocalAgency(TourLocalAgency instance);
    partial void InsertTourOperator(TourOperator instance);
    partial void UpdateTourOperator(TourOperator instance);
    partial void DeleteTourOperator(TourOperator instance);
    partial void InsertTourOrder(TourOrder instance);
    partial void UpdateTourOrder(TourOrder instance);
    partial void DeleteTourOrder(TourOrder instance);
    partial void InsertTourOrderCustomer(TourOrderCustomer instance);
    partial void UpdateTourOrderCustomer(TourOrderCustomer instance);
    partial void DeleteTourOrderCustomer(TourOrderCustomer instance);
    partial void InsertTourOrderPlus(TourOrderPlus instance);
    partial void UpdateTourOrderPlus(TourOrderPlus instance);
    partial void DeleteTourOrderPlus(TourOrderPlus instance);
    partial void InsertTourOtherCost(TourOtherCost instance);
    partial void UpdateTourOtherCost(TourOtherCost instance);
    partial void DeleteTourOtherCost(TourOtherCost instance);
    partial void InsertTourPlan(TourPlan instance);
    partial void UpdateTourPlan(TourPlan instance);
    partial void DeleteTourPlan(TourPlan instance);
    partial void InsertTourPrice(TourPrice instance);
    partial void UpdateTourPrice(TourPrice instance);
    partial void DeleteTourPrice(TourPrice instance);
    partial void InsertTourQuickPlan(TourQuickPlan instance);
    partial void UpdateTourQuickPlan(TourQuickPlan instance);
    partial void DeleteTourQuickPlan(TourQuickPlan instance);
    partial void InsertTourSentTask(TourSentTask instance);
    partial void UpdateTourSentTask(TourSentTask instance);
    partial void DeleteTourSentTask(TourSentTask instance);
    partial void InsertTourService(TourService instance);
    partial void UpdateTourService(TourService instance);
    partial void DeleteTourService(TourService instance);
    partial void InsertTourShare(TourShare instance);
    partial void UpdateTourShare(TourShare instance);
    partial void DeleteTourShare(TourShare instance);
    partial void InsertTourTeamPrice(TourTeamPrice instance);
    partial void UpdateTourTeamPrice(TourTeamPrice instance);
    partial void DeleteTourTeamPrice(TourTeamPrice instance);
    partial void InsertTrainPlan(TrainPlan instance);
    partial void UpdateTrainPlan(TrainPlan instance);
    partial void DeleteTrainPlan(TrainPlan instance);
    partial void InsertUserArea(UserArea instance);
    partial void UpdateUserArea(UserArea instance);
    partial void DeleteUserArea(UserArea instance);
    partial void InsertWorkExchange(WorkExchange instance);
    partial void UpdateWorkExchange(WorkExchange instance);
    partial void DeleteWorkExchange(WorkExchange instance);
    partial void InsertWorkExchangeAccept(WorkExchangeAccept instance);
    partial void UpdateWorkExchangeAccept(WorkExchangeAccept instance);
    partial void DeleteWorkExchangeAccept(WorkExchangeAccept instance);
    partial void InsertWorkExchangeReply(WorkExchangeReply instance);
    partial void UpdateWorkExchangeReply(WorkExchangeReply instance);
    partial void DeleteWorkExchangeReply(WorkExchangeReply instance);
    partial void InsertWorkPlan(WorkPlan instance);
    partial void UpdateWorkPlan(WorkPlan instance);
    partial void DeleteWorkPlan(WorkPlan instance);
    partial void InsertWorkPlanAccept(WorkPlanAccept instance);
    partial void UpdateWorkPlanAccept(WorkPlanAccept instance);
    partial void DeleteWorkPlanAccept(WorkPlanAccept instance);
    partial void InsertWorkReport(WorkReport instance);
    partial void UpdateWorkReport(WorkReport instance);
    partial void DeleteWorkReport(WorkReport instance);
    #endregion
		
		public EyouSoftTBL() : 
				base("Data Source=192.168.1.254;Initial Catalog=bbldb;Persist Security Info=True;User I" +
						"D=sa;Password=enow", mappingSource)
		{
			OnCreated();
		}
		
		public EyouSoftTBL(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EyouSoftTBL(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EyouSoftTBL(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EyouSoftTBL(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SMSAccount> SMSAccount
		{
			get
			{
				return this.GetTable<SMSAccount>();
			}
		}
		
		public System.Data.Linq.Table<SMSCommonWordClass> SMSCommonWordClass
		{
			get
			{
				return this.GetTable<SMSCommonWordClass>();
			}
		}
		
		public System.Data.Linq.Table<SMSCommonWords> SMSCommonWords
		{
			get
			{
				return this.GetTable<SMSCommonWords>();
			}
		}
		
		public System.Data.Linq.Table<SMSCustomerClass> SMSCustomerClass
		{
			get
			{
				return this.GetTable<SMSCustomerClass>();
			}
		}
		
		public System.Data.Linq.Table<SMSCustomerList> SMSCustomerList
		{
			get
			{
				return this.GetTable<SMSCustomerList>();
			}
		}
		
		public System.Data.Linq.Table<SMSPayMoney> SMSPayMoney
		{
			get
			{
				return this.GetTable<SMSPayMoney>();
			}
		}
		
		public System.Data.Linq.Table<SMSSendDetail> SMSSendDetail
		{
			get
			{
				return this.GetTable<SMSSendDetail>();
			}
		}
		
		public System.Data.Linq.Table<SMSSendPlan> SMSSendPlan
		{
			get
			{
				return this.GetTable<SMSSendPlan>();
			}
		}
		
		public System.Data.Linq.Table<SMSSendTotal> SMSSendTotal
		{
			get
			{
				return this.GetTable<SMSSendTotal>();
			}
		}
		
		public System.Data.Linq.Table<SMSTempFeeTake> SMSTempFeeTake
		{
			get
			{
				return this.GetTable<SMSTempFeeTake>();
			}
		}
		
		public System.Data.Linq.Table<Area> Area
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<AttendanceInfo> AttendanceInfo
		{
			get
			{
				return this.GetTable<AttendanceInfo>();
			}
		}
		
		public System.Data.Linq.Table<CashierRegister> CashierRegister
		{
			get
			{
				return this.GetTable<CashierRegister>();
			}
		}
		
		public System.Data.Linq.Table<CompanyAccount> CompanyAccount
		{
			get
			{
				return this.GetTable<CompanyAccount>();
			}
		}
		
		public System.Data.Linq.Table<CompanyBrands> CompanyBrands
		{
			get
			{
				return this.GetTable<CompanyBrands>();
			}
		}
		
		public System.Data.Linq.Table<CompanyCash> CompanyCash
		{
			get
			{
				return this.GetTable<CompanyCash>();
			}
		}
		
		public System.Data.Linq.Table<CompanyCashFlow> CompanyCashFlow
		{
			get
			{
				return this.GetTable<CompanyCashFlow>();
			}
		}
		
		public System.Data.Linq.Table<CompanyCity> CompanyCity
		{
			get
			{
				return this.GetTable<CompanyCity>();
			}
		}
		
		public System.Data.Linq.Table<CompanyCustomStand> CompanyCustomStand
		{
			get
			{
				return this.GetTable<CompanyCustomStand>();
			}
		}
		
		public System.Data.Linq.Table<CompanyDepartment> CompanyDepartment
		{
			get
			{
				return this.GetTable<CompanyDepartment>();
			}
		}
		
		public System.Data.Linq.Table<CompanyInfo> CompanyInfo
		{
			get
			{
				return this.GetTable<CompanyInfo>();
			}
		}
		
		public System.Data.Linq.Table<CompanyPriceStand> CompanyPriceStand
		{
			get
			{
				return this.GetTable<CompanyPriceStand>();
			}
		}
		
		public System.Data.Linq.Table<CompanyProvince> CompanyProvince
		{
			get
			{
				return this.GetTable<CompanyProvince>();
			}
		}
		
		public System.Data.Linq.Table<CompanySetting> CompanySetting
		{
			get
			{
				return this.GetTable<CompanySetting>();
			}
		}
		
		public System.Data.Linq.Table<CompanySupplier> CompanySupplier
		{
			get
			{
				return this.GetTable<CompanySupplier>();
			}
		}
		
		public System.Data.Linq.Table<CompanyTemplates> CompanyTemplates
		{
			get
			{
				return this.GetTable<CompanyTemplates>();
			}
		}
		
		public System.Data.Linq.Table<CompanyUser> CompanyUser
		{
			get
			{
				return this.GetTable<CompanyUser>();
			}
		}
		
		public System.Data.Linq.Table<ContractInfo> ContractInfo
		{
			get
			{
				return this.GetTable<ContractInfo>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCallBack> CustomerCallBack
		{
			get
			{
				return this.GetTable<CustomerCallBack>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCallBackResult> CustomerCallBackResult
		{
			get
			{
				return this.GetTable<CustomerCallBackResult>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCarefor> CustomerCarefor
		{
			get
			{
				return this.GetTable<CustomerCarefor>();
			}
		}
		
		public System.Data.Linq.Table<CustomerContactInfo> CustomerContactInfo
		{
			get
			{
				return this.GetTable<CustomerContactInfo>();
			}
		}
		
		public System.Data.Linq.Table<CustomerLeague> CustomerLeague
		{
			get
			{
				return this.GetTable<CustomerLeague>();
			}
		}
		
		public System.Data.Linq.Table<CustomerMarketing> CustomerMarketing
		{
			get
			{
				return this.GetTable<CustomerMarketing>();
			}
		}
		
		public System.Data.Linq.Table<CustomerQuote> CustomerQuote
		{
			get
			{
				return this.GetTable<CustomerQuote>();
			}
		}
		
		public System.Data.Linq.Table<CustomerQuoteAsk> CustomerQuoteAsk
		{
			get
			{
				return this.GetTable<CustomerQuoteAsk>();
			}
		}
		
		public System.Data.Linq.Table<CustomerQuoteClaim> CustomerQuoteClaim
		{
			get
			{
				return this.GetTable<CustomerQuoteClaim>();
			}
		}
		
		public System.Data.Linq.Table<CustomerQuotePrice> CustomerQuotePrice
		{
			get
			{
				return this.GetTable<CustomerQuotePrice>();
			}
		}
		
		public System.Data.Linq.Table<CustomerRefund> CustomerRefund
		{
			get
			{
				return this.GetTable<CustomerRefund>();
			}
		}
		
		public System.Data.Linq.Table<CustomerSpecialService> CustomerSpecialService
		{
			get
			{
				return this.GetTable<CustomerSpecialService>();
			}
		}
		
		public System.Data.Linq.Table<Document> Document
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<DutyManager> DutyManager
		{
			get
			{
				return this.GetTable<DutyManager>();
			}
		}
		
		public System.Data.Linq.Table<EraseAccount> EraseAccount
		{
			get
			{
				return this.GetTable<EraseAccount>();
			}
		}
		
		public System.Data.Linq.Table<FinancialPayInfo> FinancialPayInfo
		{
			get
			{
				return this.GetTable<FinancialPayInfo>();
			}
		}
		
		public System.Data.Linq.Table<FixedAsset> FixedAsset
		{
			get
			{
				return this.GetTable<FixedAsset>();
			}
		}
		
		public System.Data.Linq.Table<MeetingInfo> MeetingInfo
		{
			get
			{
				return this.GetTable<MeetingInfo>();
			}
		}
		
		public System.Data.Linq.Table<Message> Message
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<MessageReply> MessageReply
		{
			get
			{
				return this.GetTable<MessageReply>();
			}
		}
		
		public System.Data.Linq.Table<News> News
		{
			get
			{
				return this.GetTable<News>();
			}
		}
		
		public System.Data.Linq.Table<NewsAccept> NewsAccept
		{
			get
			{
				return this.GetTable<NewsAccept>();
			}
		}
		
		public System.Data.Linq.Table<PersonalHistory> PersonalHistory
		{
			get
			{
				return this.GetTable<PersonalHistory>();
			}
		}
		
		public System.Data.Linq.Table<PersonnelInfo> PersonnelInfo
		{
			get
			{
				return this.GetTable<PersonnelInfo>();
			}
		}
		
		public System.Data.Linq.Table<PlanLocalAgency> PlanLocalAgency
		{
			get
			{
				return this.GetTable<PlanLocalAgency>();
			}
		}
		
		public System.Data.Linq.Table<PlanLocalAgencyPrice> PlanLocalAgencyPrice
		{
			get
			{
				return this.GetTable<PlanLocalAgencyPrice>();
			}
		}
		
		public System.Data.Linq.Table<PlanLocalAgencyTourPlan> PlanLocalAgencyTourPlan
		{
			get
			{
				return this.GetTable<PlanLocalAgencyTourPlan>();
			}
		}
		
		public System.Data.Linq.Table<PlanSingle> PlanSingle
		{
			get
			{
				return this.GetTable<PlanSingle>();
			}
		}
		
		public System.Data.Linq.Table<PlanTicket> PlanTicket
		{
			get
			{
				return this.GetTable<PlanTicket>();
			}
		}
		
		public System.Data.Linq.Table<PlanTicketFlight> PlanTicketFlight
		{
			get
			{
				return this.GetTable<PlanTicketFlight>();
			}
		}
		
		public System.Data.Linq.Table<PlanTicketKind> PlanTicketKind
		{
			get
			{
				return this.GetTable<PlanTicketKind>();
			}
		}
		
		public System.Data.Linq.Table<PlanTicketOut> PlanTicketOut
		{
			get
			{
				return this.GetTable<PlanTicketOut>();
			}
		}
		
		public System.Data.Linq.Table<PlanTicketOutCustomer> PlanTicketOutCustomer
		{
			get
			{
				return this.GetTable<PlanTicketOutCustomer>();
			}
		}
		
		public System.Data.Linq.Table<Quote> Quote
		{
			get
			{
				return this.GetTable<Quote>();
			}
		}
		
		public System.Data.Linq.Table<ReceiveRefund> ReceiveRefund
		{
			get
			{
				return this.GetTable<ReceiveRefund>();
			}
		}
		
		public System.Data.Linq.Table<Route> Route
		{
			get
			{
				return this.GetTable<Route>();
			}
		}
		
		public System.Data.Linq.Table<RouteFastPlan> RouteFastPlan
		{
			get
			{
				return this.GetTable<RouteFastPlan>();
			}
		}
		
		public System.Data.Linq.Table<RouteFile> RouteFile
		{
			get
			{
				return this.GetTable<RouteFile>();
			}
		}
		
		public System.Data.Linq.Table<RouteQuote> RouteQuote
		{
			get
			{
				return this.GetTable<RouteQuote>();
			}
		}
		
		public System.Data.Linq.Table<RouteQuoteAsk> RouteQuoteAsk
		{
			get
			{
				return this.GetTable<RouteQuoteAsk>();
			}
		}
		
		public System.Data.Linq.Table<RouteQuoteList> RouteQuoteList
		{
			get
			{
				return this.GetTable<RouteQuoteList>();
			}
		}
		
		public System.Data.Linq.Table<RouteService> RouteService
		{
			get
			{
				return this.GetTable<RouteService>();
			}
		}
		
		public System.Data.Linq.Table<RouteStandardPlan> RouteStandardPlan
		{
			get
			{
				return this.GetTable<RouteStandardPlan>();
			}
		}
		
		public System.Data.Linq.Table<RuleInfo> RuleInfo
		{
			get
			{
				return this.GetTable<RuleInfo>();
			}
		}
		
		public System.Data.Linq.Table<SchoolInfo> SchoolInfo
		{
			get
			{
				return this.GetTable<SchoolInfo>();
			}
		}
		
		public System.Data.Linq.Table<Site> Site
		{
			get
			{
				return this.GetTable<Site>();
			}
		}
		
		public System.Data.Linq.Table<SiteAttach> SiteAttach
		{
			get
			{
				return this.GetTable<SiteAttach>();
			}
		}
		
		public System.Data.Linq.Table<SiteFriendLink> SiteFriendLink
		{
			get
			{
				return this.GetTable<SiteFriendLink>();
			}
		}
		
		public System.Data.Linq.Table<SiteTicketPolicy> SiteTicketPolicy
		{
			get
			{
				return this.GetTable<SiteTicketPolicy>();
			}
		}
		
		public System.Data.Linq.Table<StatAllIncome> StatAllIncome
		{
			get
			{
				return this.GetTable<StatAllIncome>();
			}
		}
		
		public System.Data.Linq.Table<StatAllOut> StatAllOut
		{
			get
			{
				return this.GetTable<StatAllOut>();
			}
		}
		
		public System.Data.Linq.Table<SupplierAccessory> SupplierAccessory
		{
			get
			{
				return this.GetTable<SupplierAccessory>();
			}
		}
		
		public System.Data.Linq.Table<SupplierCarInfo> SupplierCarInfo
		{
			get
			{
				return this.GetTable<SupplierCarInfo>();
			}
		}
		
		public System.Data.Linq.Table<SupplierContact> SupplierContact
		{
			get
			{
				return this.GetTable<SupplierContact>();
			}
		}
		
		public System.Data.Linq.Table<SupplierHotel> SupplierHotel
		{
			get
			{
				return this.GetTable<SupplierHotel>();
			}
		}
		
		public System.Data.Linq.Table<SupplierHotelRoomType> SupplierHotelRoomType
		{
			get
			{
				return this.GetTable<SupplierHotelRoomType>();
			}
		}
		
		public System.Data.Linq.Table<SupplierRestaurant> SupplierRestaurant
		{
			get
			{
				return this.GetTable<SupplierRestaurant>();
			}
		}
		
		public System.Data.Linq.Table<SupplierShopping> SupplierShopping
		{
			get
			{
				return this.GetTable<SupplierShopping>();
			}
		}
		
		public System.Data.Linq.Table<SupplierSpot> SupplierSpot
		{
			get
			{
				return this.GetTable<SupplierSpot>();
			}
		}
		
		public System.Data.Linq.Table<Sys> Sys
		{
			get
			{
				return this.GetTable<Sys>();
			}
		}
		
		public System.Data.Linq.Table<SysCity> SysCity
		{
			get
			{
				return this.GetTable<SysCity>();
			}
		}
		
		public System.Data.Linq.Table<SysDeletedFileQue> SysDeletedFileQue
		{
			get
			{
				return this.GetTable<SysDeletedFileQue>();
			}
		}
		
		public System.Data.Linq.Table<SysDomain> SysDomain
		{
			get
			{
				return this.GetTable<SysDomain>();
			}
		}
		
		public System.Data.Linq.Table<SysExceptionLog> SysExceptionLog
		{
			get
			{
				return this.GetTable<SysExceptionLog>();
			}
		}
		
		public System.Data.Linq.Table<SysHandleLogs> SysHandleLogs
		{
			get
			{
				return this.GetTable<SysHandleLogs>();
			}
		}
		
		public System.Data.Linq.Table<SysLoginLog> SysLoginLog
		{
			get
			{
				return this.GetTable<SysLoginLog>();
			}
		}
		
		public System.Data.Linq.Table<SysPermissionCategory> SysPermissionCategory
		{
			get
			{
				return this.GetTable<SysPermissionCategory>();
			}
		}
		
		public System.Data.Linq.Table<SysPermissionClass> SysPermissionClass
		{
			get
			{
				return this.GetTable<SysPermissionClass>();
			}
		}
		
		public System.Data.Linq.Table<SysPermissionList> SysPermissionList
		{
			get
			{
				return this.GetTable<SysPermissionList>();
			}
		}
		
		public System.Data.Linq.Table<SysPermissionType> SysPermissionType
		{
			get
			{
				return this.GetTable<SysPermissionType>();
			}
		}
		
		public System.Data.Linq.Table<SysPluging> SysPluging
		{
			get
			{
				return this.GetTable<SysPluging>();
			}
		}
		
		public System.Data.Linq.Table<SysPlugingSetting> SysPlugingSetting
		{
			get
			{
				return this.GetTable<SysPlugingSetting>();
			}
		}
		
		public System.Data.Linq.Table<SysProvince> SysProvince
		{
			get
			{
				return this.GetTable<SysProvince>();
			}
		}
		
		public System.Data.Linq.Table<SysRoleManage> SysRoleManage
		{
			get
			{
				return this.GetTable<SysRoleManage>();
			}
		}
		
		public System.Data.Linq.Table<SystemUser> SystemUser
		{
			get
			{
				return this.GetTable<SystemUser>();
			}
		}
		
		public System.Data.Linq.Table<TemplateUseRange> TemplateUseRange
		{
			get
			{
				return this.GetTable<TemplateUseRange>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tour
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<TourAttach> TourAttach
		{
			get
			{
				return this.GetTable<TourAttach>();
			}
		}
		
		public System.Data.Linq.Table<TourCity> TourCity
		{
			get
			{
				return this.GetTable<TourCity>();
			}
		}
		
		public System.Data.Linq.Table<TourCreateRule> TourCreateRule
		{
			get
			{
				return this.GetTable<TourCreateRule>();
			}
		}
		
		public System.Data.Linq.Table<TourEveryday> TourEveryday
		{
			get
			{
				return this.GetTable<TourEveryday>();
			}
		}
		
		public System.Data.Linq.Table<TourEverydayApply> TourEverydayApply
		{
			get
			{
				return this.GetTable<TourEverydayApply>();
			}
		}
		
		public System.Data.Linq.Table<TourEverydayApplyTraveller> TourEverydayApplyTraveller
		{
			get
			{
				return this.GetTable<TourEverydayApplyTraveller>();
			}
		}
		
		public System.Data.Linq.Table<TourEverydayAttach> TourEverydayAttach
		{
			get
			{
				return this.GetTable<TourEverydayAttach>();
			}
		}
		
		public System.Data.Linq.Table<TourEverydayPlan> TourEverydayPlan
		{
			get
			{
				return this.GetTable<TourEverydayPlan>();
			}
		}
		
		public System.Data.Linq.Table<TourEverydayPrice> TourEverydayPrice
		{
			get
			{
				return this.GetTable<TourEverydayPrice>();
			}
		}
		
		public System.Data.Linq.Table<TourEverydayQuickPlan> TourEverydayQuickPlan
		{
			get
			{
				return this.GetTable<TourEverydayQuickPlan>();
			}
		}
		
		public System.Data.Linq.Table<TourEverydayService> TourEverydayService
		{
			get
			{
				return this.GetTable<TourEverydayService>();
			}
		}
		
		public System.Data.Linq.Table<TourLocalAgency> TourLocalAgency
		{
			get
			{
				return this.GetTable<TourLocalAgency>();
			}
		}
		
		public System.Data.Linq.Table<TourOperator> TourOperator
		{
			get
			{
				return this.GetTable<TourOperator>();
			}
		}
		
		public System.Data.Linq.Table<TourOrder> TourOrder
		{
			get
			{
				return this.GetTable<TourOrder>();
			}
		}
		
		public System.Data.Linq.Table<TourOrderCustomer> TourOrderCustomer
		{
			get
			{
				return this.GetTable<TourOrderCustomer>();
			}
		}
		
		public System.Data.Linq.Table<TourOrderPlus> TourOrderPlus
		{
			get
			{
				return this.GetTable<TourOrderPlus>();
			}
		}
		
		public System.Data.Linq.Table<TourOtherCost> TourOtherCost
		{
			get
			{
				return this.GetTable<TourOtherCost>();
			}
		}
		
		public System.Data.Linq.Table<TourPlan> TourPlan
		{
			get
			{
				return this.GetTable<TourPlan>();
			}
		}
		
		public System.Data.Linq.Table<TourPrice> TourPrice
		{
			get
			{
				return this.GetTable<TourPrice>();
			}
		}
		
		public System.Data.Linq.Table<TourQuickPlan> TourQuickPlan
		{
			get
			{
				return this.GetTable<TourQuickPlan>();
			}
		}
		
		public System.Data.Linq.Table<TourSendGuide> TourSendGuide
		{
			get
			{
				return this.GetTable<TourSendGuide>();
			}
		}
		
		public System.Data.Linq.Table<TourSentTask> TourSentTask
		{
			get
			{
				return this.GetTable<TourSentTask>();
			}
		}
		
		public System.Data.Linq.Table<TourService> TourService
		{
			get
			{
				return this.GetTable<TourService>();
			}
		}
		
		public System.Data.Linq.Table<TourShare> TourShare
		{
			get
			{
				return this.GetTable<TourShare>();
			}
		}
		
		public System.Data.Linq.Table<TourTeamPrice> TourTeamPrice
		{
			get
			{
				return this.GetTable<TourTeamPrice>();
			}
		}
		
		public System.Data.Linq.Table<TrainPlan> TrainPlan
		{
			get
			{
				return this.GetTable<TrainPlan>();
			}
		}
		
		public System.Data.Linq.Table<TrainPlanAccepts> TrainPlanAccepts
		{
			get
			{
				return this.GetTable<TrainPlanAccepts>();
			}
		}
		
		public System.Data.Linq.Table<UserArea> UserArea
		{
			get
			{
				return this.GetTable<UserArea>();
			}
		}
		
		public System.Data.Linq.Table<WorkExchange> WorkExchange
		{
			get
			{
				return this.GetTable<WorkExchange>();
			}
		}
		
		public System.Data.Linq.Table<WorkExchangeAccept> WorkExchangeAccept
		{
			get
			{
				return this.GetTable<WorkExchangeAccept>();
			}
		}
		
		public System.Data.Linq.Table<WorkExchangeReply> WorkExchangeReply
		{
			get
			{
				return this.GetTable<WorkExchangeReply>();
			}
		}
		
		public System.Data.Linq.Table<WorkPlan> WorkPlan
		{
			get
			{
				return this.GetTable<WorkPlan>();
			}
		}
		
		public System.Data.Linq.Table<WorkPlanAccept> WorkPlanAccept
		{
			get
			{
				return this.GetTable<WorkPlanAccept>();
			}
		}
		
		public System.Data.Linq.Table<WorkReport> WorkReport
		{
			get
			{
				return this.GetTable<WorkReport>();
			}
		}
		
		public System.Data.Linq.Table<ViewAceptNews> ViewAceptNews
		{
			get
			{
				return this.GetTable<ViewAceptNews>();
			}
		}
		
		public System.Data.Linq.Table<ViewAreaUserInfo> ViewAreaUserInfo
		{
			get
			{
				return this.GetTable<ViewAreaUserInfo>();
			}
		}
		
		public System.Data.Linq.Table<ViewAttendanceInfo> ViewAttendanceInfo
		{
			get
			{
				return this.GetTable<ViewAttendanceInfo>();
			}
		}
		
		public System.Data.Linq.Table<ViewDeptUser> ViewDeptUser
		{
			get
			{
				return this.GetTable<ViewDeptUser>();
			}
		}
		
		public System.Data.Linq.Table<ViewEarningsStatistic> ViewEarningsStatistic
		{
			get
			{
				return this.GetTable<ViewEarningsStatistic>();
			}
		}
		
		public System.Data.Linq.Table<ViewInayatStatistic> ViewInayatStatistic
		{
			get
			{
				return this.GetTable<ViewInayatStatistic>();
			}
		}
		
		public System.Data.Linq.Table<ViewPayRemindGetList> ViewPayRemindGetList
		{
			get
			{
				return this.GetTable<ViewPayRemindGetList>();
			}
		}
		
		public System.Data.Linq.Table<ViewPlanTicket> ViewPlanTicket
		{
			get
			{
				return this.GetTable<ViewPlanTicket>();
			}
		}
		
		public System.Data.Linq.Table<ViewReceiptRemindGetList> ViewReceiptRemindGetList
		{
			get
			{
				return this.GetTable<ViewReceiptRemindGetList>();
			}
		}
		
		public System.Data.Linq.Table<ViewSMSAllPayedCompany> ViewSMSAllPayedCompany
		{
			get
			{
				return this.GetTable<ViewSMSAllPayedCompany>();
			}
		}
		
		public System.Data.Linq.Table<ViewSMSCustomers> ViewSMSCustomers
		{
			get
			{
				return this.GetTable<ViewSMSCustomers>();
			}
		}
		
		public System.Data.Linq.Table<ViewSMSTemplate> ViewSMSTemplate
		{
			get
			{
				return this.GetTable<ViewSMSTemplate>();
			}
		}
		
		public System.Data.Linq.Table<ViewStatAllIncomeStatement> ViewStatAllIncomeStatement
		{
			get
			{
				return this.GetTable<ViewStatAllIncomeStatement>();
			}
		}
		
		public System.Data.Linq.Table<ViewSysHandleLogs> ViewSysHandleLogs
		{
			get
			{
				return this.GetTable<ViewSysHandleLogs>();
			}
		}
		
		public System.Data.Linq.Table<ViewTicketKind> ViewTicketKind
		{
			get
			{
				return this.GetTable<ViewTicketKind>();
			}
		}
		
		public System.Data.Linq.Table<ViewTicketOutStatisticDepart> ViewTicketOutStatisticDepart
		{
			get
			{
				return this.GetTable<ViewTicketOutStatisticDepart>();
			}
		}
		
		public System.Data.Linq.Table<ViewTravelAndTicketArrear> ViewTravelAndTicketArrear
		{
			get
			{
				return this.GetTable<ViewTravelAndTicketArrear>();
			}
		}
		
		[Function(Name="dbo.proc_AttendanceInfo_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcAttendanceInfoInsert([Parameter(Name="@AttendanceInfoXML", DbType="nvarchar(MAX)")] string attendanceInfoXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attendanceInfoXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TrainPlan_Delete")]
		[return: Parameter(DbType="int")]
		public int ProcTrainPlanDelete([Parameter(Name="@TrainPlanId", DbType="int")] System.Nullable<int> trainPlanId, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), trainPlanId, companyId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TrainPlan_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcTrainPlanInsert([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@PlanTitle", DbType="nvarchar(255)")] string planTitle, [Parameter(Name="@PlanContent", DbType="nvarchar(MAX)")] string planContent, [Parameter(Name="@TrainPlanFile", DbType="nvarchar(255)")] string trainPlanFile, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@OperatorName", DbType="nvarchar(50)")] string operatorName, [Parameter(Name="@TrainPlanAcceptXML", DbType="nvarchar(MAX)")] string trainPlanAcceptXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, planTitle, planContent, trainPlanFile, operatorId, operatorName, trainPlanAcceptXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TrainPlan_Update")]
		[return: Parameter(DbType="int")]
		public int ProcTrainPlanUpdate([Parameter(Name="@TrainPlanId", DbType="int")] System.Nullable<int> trainPlanId, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@PlanTitle", DbType="nvarchar(255)")] string planTitle, [Parameter(Name="@PlanContent", DbType="nvarchar(MAX)")] string planContent, [Parameter(Name="@TrainPlanFile", DbType="nvarchar(255)")] string trainPlanFile, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@OperatorName", DbType="nvarchar(50)")] string operatorName, [Parameter(Name="@IssueTime", DbType="datetime")] System.Nullable<System.DateTime> issueTime, [Parameter(Name="@TrainPlanAcceptXML", DbType="nvarchar(MAX)")] string trainPlanAcceptXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), trainPlanId, companyId, planTitle, planContent, trainPlanFile, operatorId, operatorName, issueTime, trainPlanAcceptXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(9)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_WorkExchange_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcWorkExchangeInsert([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@Title", DbType="nvarchar(255)")] string title, [Parameter(Name="@Description", DbType="nvarchar(MAX)")] string description, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@OperatorName", DbType="nvarchar(255)")] string operatorName, [Parameter(Name="@IsAnonymous", DbType="char(1)")] string isAnonymous, [Parameter(Name="@AcceptXML", DbType="nvarchar(MAX)")] string acceptXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, title, description, operatorId, operatorName, isAnonymous, acceptXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_WorkExchange_Update")]
		[return: Parameter(DbType="int")]
		public int ProcWorkExchangeUpdate([Parameter(Name="@ExchangeId", DbType="int")] System.Nullable<int> exchangeId, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@Title", DbType="nvarchar(255)")] string title, [Parameter(Name="@Description", DbType="nvarchar(MAX)")] string description, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@OperatorName", DbType="nvarchar(255)")] string operatorName, [Parameter(Name="@IsAnonymous", DbType="char(1)")] string isAnonymous, [Parameter(Name="@AcceptXML", DbType="nvarchar(MAX)")] string acceptXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), exchangeId, companyId, title, description, operatorId, operatorName, isAnonymous, acceptXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(8)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_WorkPlan_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcWorkPlanInsert([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@PlanNo", DbType="nvarchar(255)")] string planNo, [Parameter(Name="@Title", DbType="nvarchar(255)")] string title, [Parameter(Name="@Description", DbType="nvarchar(MAX)")] string description, [Parameter(Name="@FilePath", DbType="nvarchar(255)")] string filePath, [Parameter(Name="@Remark", DbType="nvarchar(MAX)")] string remark, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@OperatorName", DbType="nvarchar(255)")] string operatorName, [Parameter(Name="@ExpectedDate", DbType="datetime")] System.Nullable<System.DateTime> expectedDate, [Parameter(Name="@ActualDate", DbType="datetime")] System.Nullable<System.DateTime> actualDate, [Parameter(Name="@Status", DbType="tinyint")] System.Nullable<byte> status, [Parameter(Name="@AcceptXML", DbType="nvarchar(MAX)")] string acceptXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, planNo, title, description, filePath, remark, operatorId, operatorName, expectedDate, actualDate, status, acceptXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(12)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_WorkPlan_Update")]
		[return: Parameter(DbType="int")]
		public int ProcWorkPlanUpdate([Parameter(Name="@PlanId", DbType="int")] System.Nullable<int> planId, [Parameter(Name="@PlanNo", DbType="nvarchar(255)")] string planNo, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@Title", DbType="nvarchar(255)")] string title, [Parameter(Name="@Description", DbType="nvarchar(MAX)")] string description, [Parameter(Name="@FilePath", DbType="nvarchar(255)")] string filePath, [Parameter(Name="@Remark", DbType="nvarchar(MAX)")] string remark, [Parameter(Name="@ExpectedDate", DbType="datetime")] System.Nullable<System.DateTime> expectedDate, [Parameter(Name="@ActualDate", DbType="datetime")] System.Nullable<System.DateTime> actualDate, [Parameter(Name="@Status", DbType="tinyint")] System.Nullable<byte> status, [Parameter(Name="@AcceptXML", DbType="nvarchar(MAX)")] string acceptXML, [Parameter(Name="@DepartmentComment", DbType="nvarchar(MAX)")] string departmentComment, [Parameter(Name="@ManagerComment", DbType="nvarchar(MAX)")] string managerComment, [Parameter(Name="@LastTime", DbType="datetime")] System.Nullable<System.DateTime> lastTime, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), planId, planNo, companyId, title, description, filePath, remark, expectedDate, actualDate, status, acceptXML, departmentComment, managerComment, lastTime, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(14)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.T_StocPage")]
		public ISingleResult<TStocPageResult> TStocPage([Parameter(Name="@PageSize", DbType="int")] System.Nullable<int> pageSize, [Parameter(Name="@PageIndex", DbType="int")] System.Nullable<int> pageIndex, [Parameter(Name="@TableName", DbType="nvarchar(255)")] string tableName, [Parameter(Name="@IdentityColumnName", DbType="nvarchar(255)")] string identityColumnName, [Parameter(Name="@FieldsList", DbType="nvarchar(2000)")] string fieldsList, [Parameter(Name="@FieldSearchKey", DbType="nvarchar(2000)")] string fieldSearchKey, [Parameter(Name="@OrderString", DbType="nvarchar(1000)")] string orderString, [Parameter(Name="@IsGroupBy", DbType="char(1)")] string isGroupBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageSize, pageIndex, tableName, identityColumnName, fieldsList, fieldSearchKey, orderString, isGroupBy);
			return ((ISingleResult<TStocPageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.fn_GetTourServiceKey", IsComposable=true)]
		[return: Parameter(DbType="nvarchar(255)")]
		public string FnGetTourServiceKey([Parameter(Name="@ItemType", DbType="tinyint")] System.Nullable<byte> itemType)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemType).ReturnValue));
		}
		
		[Function(Name="dbo.fn_PadLeft", IsComposable=true)]
		[return: Parameter(DbType="nvarchar(50)")]
		public string FnPadLeft([Parameter(Name="@Input", DbType="nvarchar(50)")] string input, [Parameter(Name="@PaddingChar", DbType="char(1)")] string paddingChar, [Parameter(Name="@TotalWidth", DbType="int")] System.Nullable<int> totalWidth)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), input, paddingChar, totalWidth).ReturnValue));
		}
		
		[Function(Name="dbo.fn_split", IsComposable=true)]
		public IQueryable<FnSplitResult> FnSplit([Parameter(Name="@InputString", DbType="nvarchar(MAX)")] string inputString, [Parameter(Name="@Seprator", DbType="nvarchar(10)")] string seprator)
		{
			return this.CreateMethodCallQuery<FnSplitResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inputString, seprator);
		}
		
		[Function(Name="dbo.fn_TourOrder_CreateOrderNo", IsComposable=true)]
		[return: Parameter(DbType="nvarchar(200)")]
		public string FnTourOrderCreateOrderNo()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[Function(Name="dbo.proc_CashierRegister_CancelRegist")]
		[return: Parameter(DbType="int")]
		public int ProcCashierRegisterCancelRegist([Parameter(Name="@RegistId", DbType="int")] System.Nullable<int> registId, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@OperatorName", DbType="nvarchar(200)")] string operatorName, [Parameter(Name="@EraseAccountXML", DbType="nvarchar(MAX)")] string eraseAccountXML, [Parameter(Name="@ErrorValue", DbType="int")] ref System.Nullable<int> errorValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), registId, operatorId, operatorName, eraseAccountXML, errorValue);
			errorValue = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CompanyCashFlow_Add")]
		[return: Parameter(DbType="int")]
		public int ProcCompanyCashFlowAdd([Parameter(Name="@CashReserve", DbType="money")] System.Nullable<decimal> cashReserve, [Parameter(Name="@CashType", DbType="tinyint")] System.Nullable<byte> cashType, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cashReserve, cashType, companyId, operatorId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_PlanTravelAgency_Add")]
		[return: Parameter(DbType="int")]
		public int ProcPlanTravelAgencyAdd(
					[Parameter(Name="@ID", DbType="char(36)")] string id, 
					[Parameter(Name="@AddAmount", DbType="money")] System.Nullable<decimal> addAmount, 
					[Parameter(Name="@Commission", DbType="money")] System.Nullable<decimal> commission, 
					[Parameter(Name="@Contacter", DbType="nvarchar(50)")] string contacter, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(50)")] string contactTel, 
					[Parameter(Name="@DeliverTime", DbType="datetime")] System.Nullable<System.DateTime> deliverTime, 
					[Parameter(Name="@Fee", DbType="money")] System.Nullable<decimal> fee, 
					[Parameter(Name="@LocalTravelAgency", DbType="nvarchar(250)")] string localTravelAgency, 
					[Parameter(Name="@Notice", DbType="nvarchar(1000)")] string notice, 
					[Parameter(Name="@Operator", DbType="nvarchar(50)")] string @operator, 
					[Parameter(Name="@OperatorID", DbType="int")] System.Nullable<int> operatorID, 
					[Parameter(Name="@PayType", DbType="tinyint")] System.Nullable<byte> payType, 
					[Parameter(Name="@ReceiveTime", DbType="datetime")] System.Nullable<System.DateTime> receiveTime, 
					[Parameter(Name="@ReduceAmount", DbType="money")] System.Nullable<decimal> reduceAmount, 
					[Parameter(Name="@Remark", DbType="nvarchar(1000)")] string remark, 
					[Parameter(Name="@Settlement", DbType="money")] System.Nullable<decimal> settlement, 
					[Parameter(Name="@TotalAmount", DbType="money")] System.Nullable<decimal> totalAmount, 
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@TravelAgencyID", DbType="int")] System.Nullable<int> travelAgencyID, 
					[Parameter(Name="@PriceInfoListXML", DbType="nvarchar(MAX)")] string priceInfoListXML, 
					[Parameter(Name="@PlanInfoListXML", DbType="nvarchar(MAX)")] string planInfoListXML, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, addAmount, commission, contacter, contactTel, deliverTime, fee, localTravelAgency, notice, @operator, operatorID, payType, receiveTime, reduceAmount, remark, settlement, totalAmount, tourId, travelAgencyID, priceInfoListXML, planInfoListXML, companyId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(22)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_PlanTravelAgency_Update")]
		[return: Parameter(DbType="int")]
		public int ProcPlanTravelAgencyUpdate(
					[Parameter(Name="@ID", DbType="char(36)")] string id, 
					[Parameter(Name="@AddAmount", DbType="money")] System.Nullable<decimal> addAmount, 
					[Parameter(Name="@Commission", DbType="money")] System.Nullable<decimal> commission, 
					[Parameter(Name="@Contacter", DbType="nvarchar(50)")] string contacter, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(50)")] string contactTel, 
					[Parameter(Name="@DeliverTime", DbType="datetime")] System.Nullable<System.DateTime> deliverTime, 
					[Parameter(Name="@Fee", DbType="money")] System.Nullable<decimal> fee, 
					[Parameter(Name="@LocalTravelAgency", DbType="nvarchar(250)")] string localTravelAgency, 
					[Parameter(Name="@Notice", DbType="nvarchar(1000)")] string notice, 
					[Parameter(Name="@OperateTime", DbType="datetime")] System.Nullable<System.DateTime> operateTime, 
					[Parameter(Name="@Operator", DbType="nvarchar(50)")] string @operator, 
					[Parameter(Name="@OperatorID", DbType="int")] System.Nullable<int> operatorID, 
					[Parameter(Name="@PayType", DbType="tinyint")] System.Nullable<byte> payType, 
					[Parameter(Name="@ReceiveTime", DbType="datetime")] System.Nullable<System.DateTime> receiveTime, 
					[Parameter(Name="@ReduceAmount", DbType="money")] System.Nullable<decimal> reduceAmount, 
					[Parameter(Name="@Remark", DbType="nvarchar(1000)")] string remark, 
					[Parameter(Name="@Settlement", DbType="money")] System.Nullable<decimal> settlement, 
					[Parameter(Name="@TotalAmount", DbType="money")] System.Nullable<decimal> totalAmount, 
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@TravelAgencyID", DbType="int")] System.Nullable<int> travelAgencyID, 
					[Parameter(Name="@PriceInfoListXML", DbType="nvarchar(MAX)")] string priceInfoListXML, 
					[Parameter(Name="@PlanInfoListXML", DbType="nvarchar(MAX)")] string planInfoListXML, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, addAmount, commission, contacter, contactTel, deliverTime, fee, localTravelAgency, notice, operateTime, @operator, operatorID, payType, receiveTime, reduceAmount, remark, settlement, totalAmount, tourId, travelAgencyID, priceInfoListXML, planInfoListXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(22)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_ReceiveRefund_Delete")]
		[return: Parameter(DbType="int")]
		public int ProcReceiveRefundDelete([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@RefundId", DbType="char(36)")] string refundId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, refundId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_ReceiveRefund_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcReceiveRefundInsert([Parameter(Name="@ReceiveRefundXML", DbType="nvarchar(MAX)")] string receiveRefundXML, [Parameter(Name="@IsRecive", DbType="int")] System.Nullable<int> isRecive, [Parameter(Name="@OrderId", DbType="char(36)")] string orderId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), receiveRefundXML, isRecive, orderId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_ReceiveRefund_Update")]
		[return: Parameter(DbType="int")]
		public int ProcReceiveRefundUpdate([Parameter(Name="@ReceiveRefundXML", DbType="nvarchar(MAX)")] string receiveRefundXML, [Parameter(Name="@IsRecive", DbType="int")] System.Nullable<int> isRecive, [Parameter(Name="@OrderId", DbType="char(36)")] string orderId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), receiveRefundXML, isRecive, orderId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SetPermission")]
		[return: Parameter(DbType="int")]
		public int ProcSetPermission([Parameter(Name="@RoleId", DbType="int")] System.Nullable<int> roleId, [Parameter(Name="@PermissionId", DbType="int")] System.Nullable<int> permissionId, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@PermissionName", DbType="nvarchar(200)")] string permissionName, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleId, permissionId, companyId, permissionName, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SMS_CheckPayMoney")]
		[return: Parameter(DbType="int")]
		public int ProcSMSCheckPayMoney([Parameter(Name="@PayMoneyId", DbType="char(36)")] string payMoneyId, [Parameter(Name="@CheckStatus", DbType="int")] System.Nullable<int> checkStatus, [Parameter(Name="@CheckTime", DbType="datetime")] System.Nullable<System.DateTime> checkTime, [Parameter(Name="@CheckUserName", DbType="nvarchar(100)")] string checkUserName, [Parameter(Name="@CheckUserFullName", DbType="nvarchar(100)")] string checkUserFullName, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result, [Parameter(Name="@UseMoney", DbType="money")] System.Nullable<decimal> useMoney)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), payMoneyId, checkStatus, checkTime, checkUserName, checkUserFullName, result, useMoney);
			result = ((System.Nullable<int>)(result1.GetParameterValue(5)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SMS_DeductAccountMoney")]
		[return: Parameter(DbType="int")]
		public int ProcSMSDeductAccountMoney([Parameter(Name="@TempFeeTakeId", DbType="char(36)")] string tempFeeTakeId, [Parameter(Name="@CompanyId", DbType="char(36)")] string companyId, [Parameter(Name="@UserId", DbType="char(36)")] string userId, [Parameter(Name="@SendTotalId", DbType="char(36)")] string sendTotalId, [Parameter(Name="@Money", DbType="money")] System.Nullable<decimal> money, [Parameter(Name="@SMSNumber", DbType="int")] System.Nullable<int> sMSNumber, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tempFeeTakeId, companyId, userId, sendTotalId, money, sMSNumber, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(6)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SMS_InsertSendMessageInfo")]
		[return: Parameter(DbType="int")]
		public int ProcSMSInsertSendMessageInfo(
					[Parameter(Name="@SendTotalId", DbType="char(36)")] string sendTotalId, 
					[Parameter(Name="@CompanyId", DbType="char(36)")] string companyId, 
					[Parameter(Name="@CompanyName", DbType="nvarchar(250)")] string companyName, 
					[Parameter(Name="@UserId", DbType="char(36)")] string userId, 
					[Parameter(Name="@UserFullName", DbType="nvarchar(100)")] string userFullName, 
					[Parameter(Name="@SMSType", DbType="int")] System.Nullable<int> sMSType, 
					[Parameter(Name="@SMSContent", DbType="nvarchar(2000)")] string sMSContent, 
					[Parameter(Name="@UseMoeny", DbType="money")] System.Nullable<decimal> useMoeny, 
					[Parameter(Name="@SuccessCount", DbType="int")] System.Nullable<int> successCount, 
					[Parameter(Name="@ErrorCount", DbType="int")] System.Nullable<int> errorCount, 
					[Parameter(Name="@TimeoutCount", DbType="int")] System.Nullable<int> timeoutCount, 
					[Parameter(Name="@FactCount", DbType="int")] System.Nullable<int> factCount, 
					[Parameter(Name="@TempFeeTakeId", DbType="char(36)")] string tempFeeTakeId, 
					[Parameter(Name="@SendMessageTime", DbType="datetime")] System.Nullable<System.DateTime> sendMessageTime, 
					[Parameter(Name="@Mobiles", DbType="nvarchar(MAX)")] string mobiles, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result, 
					[Parameter(Name="@PHSSuccessCount", DbType="int")] System.Nullable<int> pHSSuccessCount, 
					[Parameter(Name="@PHSErrorCount", DbType="int")] System.Nullable<int> pHSErrorCount, 
					[Parameter(Name="@PHSTimeoutCount", DbType="int")] System.Nullable<int> pHSTimeoutCount, 
					[Parameter(Name="@PHSFactCount", DbType="int")] System.Nullable<int> pHSFactCount, 
					[Parameter(Name="@SendChannel", DbType="int")] System.Nullable<int> sendChannel)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sendTotalId, companyId, companyName, userId, userFullName, sMSType, sMSContent, useMoeny, successCount, errorCount, timeoutCount, factCount, tempFeeTakeId, sendMessageTime, mobiles, result, pHSSuccessCount, pHSErrorCount, pHSTimeoutCount, pHSFactCount, sendChannel);
			result = ((System.Nullable<int>)(result1.GetParameterValue(15)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_StatAllIncome_Add")]
		[return: Parameter(DbType="int")]
		public int ProcStatAllIncomeAdd([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@TourId", DbType="char(36)")] string tourId, [Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, [Parameter(Name="@TourType", DbType="tinyint")] System.Nullable<byte> tourType, [Parameter(Name="@ItemId", DbType="char(36)")] string itemId, [Parameter(Name="@ItemType", DbType="tinyint")] System.Nullable<byte> itemType, [Parameter(Name="@Amount", DbType="decimal(18,0)")] System.Nullable<decimal> amount, [Parameter(Name="@AddAmount", DbType="decimal(18,0)")] System.Nullable<decimal> addAmount, [Parameter(Name="@ReduceAmount", DbType="decimal(18,0)")] System.Nullable<decimal> reduceAmount, [Parameter(Name="@TotalAmount", DbType="decimal(18,0)")] System.Nullable<decimal> totalAmount, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@DepartmentId", DbType="int")] System.Nullable<int> departmentId, [Parameter(Name="@HasCheckAmount", DbType="decimal(18,0)")] System.Nullable<decimal> hasCheckAmount, [Parameter(Name="@NotCheckAmount", DbType="decimal(18,0)")] System.Nullable<decimal> notCheckAmount, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, tourId, areaId, tourType, itemId, itemType, amount, addAmount, reduceAmount, totalAmount, operatorId, departmentId, hasCheckAmount, notCheckAmount, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(14)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_StatAllOut_Add")]
		[return: Parameter(DbType="int")]
		public int ProcStatAllOutAdd(
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, 
					[Parameter(Name="@TourType", DbType="tinyint")] System.Nullable<byte> tourType, 
					[Parameter(Name="@ItemId", DbType="char(36)")] string itemId, 
					[Parameter(Name="@ItemType", DbType="tinyint")] System.Nullable<byte> itemType, 
					[Parameter(Name="@Amount", DbType="decimal(18,0)")] System.Nullable<decimal> amount, 
					[Parameter(Name="@AddAmount", DbType="decimal(18,0)")] System.Nullable<decimal> addAmount, 
					[Parameter(Name="@ReduceAmount", DbType="decimal(18,0)")] System.Nullable<decimal> reduceAmount, 
					[Parameter(Name="@TotalAmount", DbType="decimal(18,0)")] System.Nullable<decimal> totalAmount, 
					[Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, 
					[Parameter(Name="@DepartmentId", DbType="int")] System.Nullable<int> departmentId, 
					[Parameter(Name="@HasCheckAmount", DbType="decimal(18,0)")] System.Nullable<decimal> hasCheckAmount, 
					[Parameter(Name="@NotCheckAmount", DbType="decimal(18,0)")] System.Nullable<decimal> notCheckAmount, 
					[Parameter(Name="@SupplierId", DbType="int")] System.Nullable<int> supplierId, 
					[Parameter(Name="@SupplierName", DbType="nvarchar(255)")] string supplierName, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, tourId, areaId, tourType, itemId, itemType, amount, addAmount, reduceAmount, totalAmount, operatorId, departmentId, hasCheckAmount, notCheckAmount, supplierId, supplierName, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(16)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TicketOut_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcTicketOutInsert(
					[Parameter(Name="@TicketId", DbType="char(36)")] string ticketId, 
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@OrderId", DbType="char(36)")] string orderId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, 
					[Parameter(Name="@PNR", DbType="nvarchar(MAX)")] string pnr, 
					[Parameter(Name="@Total", DbType="money")] System.Nullable<decimal> total, 
					[Parameter(Name="@Notice", DbType="nvarchar(250)")] string notice, 
					[Parameter(Name="@TicketOffice", DbType="nvarchar(50)")] string ticketOffice, 
					[Parameter(Name="@TicketOfficeId", DbType="int")] System.Nullable<int> ticketOfficeId, 
					[Parameter(Name="@Saler", DbType="nvarchar(50)")] string saler, 
					[Parameter(Name="@TicketNum", DbType="nvarchar(50)")] string ticketNum, 
					[Parameter(Name="@PayType", DbType="nvarchar(50)")] string payType, 
					[Parameter(Name="@Remark", DbType="nvarchar(250)")] string remark, 
					[Parameter(Name="@TicketType", DbType="tinyint")] System.Nullable<byte> ticketType, 
					[Parameter(Name="@State", DbType="tinyint")] System.Nullable<byte> state, 
					[Parameter(Name="@Operator", DbType="nvarchar(250)")] string @operator, 
					[Parameter(Name="@OperateID", DbType="int")] System.Nullable<int> operateID, 
					[Parameter(Name="@CompanyID", DbType="int")] System.Nullable<int> companyID, 
					[Parameter(Name="@AddAmount", DbType="money")] System.Nullable<decimal> addAmount, 
					[Parameter(Name="@ReduceAmount", DbType="money")] System.Nullable<decimal> reduceAmount, 
					[Parameter(Name="@TotalAmount", DbType="money")] System.Nullable<decimal> totalAmount, 
					[Parameter(Name="@FRemark", DbType="nvarchar(250)")] string fRemark, 
					[Parameter(Name="@RegisterOperatorId", DbType="int")] System.Nullable<int> registerOperatorId, 
					[Parameter(Name="@CustomerXML", DbType="nvarchar(MAX)")] string customerXML, 
					[Parameter(Name="@FlightListXML", DbType="nvarchar(MAX)")] string flightListXML, 
					[Parameter(Name="@TicketKindXML", DbType="nvarchar(MAX)")] string ticketKindXML, 
					[Parameter(Name="@OutCustomerXML", DbType="nvarchar(MAX)")] string outCustomerXML, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketId, tourId, orderId, routeName, pnr, total, notice, ticketOffice, ticketOfficeId, saler, ticketNum, payType, remark, ticketType, state, @operator, operateID, companyID, addAmount, reduceAmount, totalAmount, fRemark, registerOperatorId, customerXML, flightListXML, ticketKindXML, outCustomerXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(27)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TicketOut_Update")]
		[return: Parameter(DbType="int")]
		public int ProcTicketOutUpdate(
					[Parameter(Name="@TicketId", DbType="char(36)")] string ticketId, 
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@OrderId", DbType="char(36)")] string orderId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, 
					[Parameter(Name="@PNR", DbType="nvarchar(MAX)")] string pnr, 
					[Parameter(Name="@Total", DbType="money")] System.Nullable<decimal> total, 
					[Parameter(Name="@Notice", DbType="nvarchar(250)")] string notice, 
					[Parameter(Name="@TicketOffice", DbType="nvarchar(50)")] string ticketOffice, 
					[Parameter(Name="@TicketOfficeId", DbType="int")] System.Nullable<int> ticketOfficeId, 
					[Parameter(Name="@Saler", DbType="nvarchar(50)")] string saler, 
					[Parameter(Name="@TicketNum", DbType="nvarchar(50)")] string ticketNum, 
					[Parameter(Name="@PayType", DbType="nvarchar(50)")] string payType, 
					[Parameter(Name="@Remark", DbType="nvarchar(250)")] string remark, 
					[Parameter(Name="@TicketType", DbType="tinyint")] System.Nullable<byte> ticketType, 
					[Parameter(Name="@State", DbType="tinyint")] System.Nullable<byte> state, 
					[Parameter(Name="@Operator", DbType="nvarchar(250)")] string @operator, 
					[Parameter(Name="@OperateID", DbType="int")] System.Nullable<int> operateID, 
					[Parameter(Name="@CompanyID", DbType="int")] System.Nullable<int> companyID, 
					[Parameter(Name="@AddAmount", DbType="money")] System.Nullable<decimal> addAmount, 
					[Parameter(Name="@ReduceAmount", DbType="money")] System.Nullable<decimal> reduceAmount, 
					[Parameter(Name="@TotalAmount", DbType="money")] System.Nullable<decimal> totalAmount, 
					[Parameter(Name="@FRemark", DbType="nvarchar(250)")] string fRemark, 
					[Parameter(Name="@TicketOutTime", DbType="datetime")] System.Nullable<System.DateTime> ticketOutTime, 
					[Parameter(Name="@CustomerXML", DbType="nvarchar(MAX)")] string customerXML, 
					[Parameter(Name="@FlightListXML", DbType="nvarchar(MAX)")] string flightListXML, 
					[Parameter(Name="@TicketKindXML", DbType="nvarchar(MAX)")] string ticketKindXML, 
					[Parameter(Name="@OutCustomerXML", DbType="nvarchar(MAX)")] string outCustomerXML, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketId, tourId, orderId, routeName, pnr, total, notice, ticketOffice, ticketOfficeId, saler, ticketNum, payType, remark, ticketType, state, @operator, operateID, companyID, addAmount, reduceAmount, totalAmount, fRemark, ticketOutTime, customerXML, flightListXML, ticketKindXML, outCustomerXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(27)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Tour_InsertTourInfo")]
		[return: Parameter(DbType="int")]
		public int ProcTourInsertTourInfo(
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@TourCode", DbType="nvarchar(50)")] string tourCode, 
					[Parameter(Name="@TourType", DbType="tinyint")] System.Nullable<byte> tourType, 
					[Parameter(Name="@Status", DbType="tinyint")] System.Nullable<byte> status, 
					[Parameter(Name="@TourDays", DbType="int")] System.Nullable<int> tourDays, 
					[Parameter(Name="@LDate", DbType="datetime")] System.Nullable<System.DateTime> lDate, 
					[Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, 
					[Parameter(Name="@PlanPeopleNumber", DbType="int")] System.Nullable<int> planPeopleNumber, 
					[Parameter(Name="@TicketStatus", DbType="tinyint")] System.Nullable<byte> ticketStatus, 
					[Parameter(Name="@ReleaseType", DbType="char(1)")] string releaseType, 
					[Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, 
					[Parameter(Name="@CreateTime", DbType="datetime")] System.Nullable<System.DateTime> createTime, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@LTraffic", DbType="nvarchar(255)")] string lTraffic, 
					[Parameter(Name="@RTraffic", DbType="nvarchar(255)")] string rTraffic, 
					[Parameter(Name="@Gather", DbType="nvarchar(255)")] string gather, 
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@LocalAgencys", DbType="nvarchar(MAX)")] string localAgencys, 
					[Parameter(Name="@Attachs", DbType="nvarchar(MAX)")] string attachs, 
					[Parameter(Name="@Plans", DbType="nvarchar(MAX)")] string plans, 
					[Parameter(Name="@QuickPrivate", DbType="nvarchar(MAX)")] string quickPrivate, 
					[Parameter(Name="@Service", DbType="nvarchar(MAX)")] string service, 
					[Parameter(Name="@NormalPrivate", DbType="nvarchar(MAX)")] string normalPrivate, 
					[Parameter(Name="@Childrens", DbType="nvarchar(MAX)")] string childrens, 
					[Parameter(Name="@TourPrice", DbType="nvarchar(MAX)")] string tourPrice, 
					[Parameter(Name="@ChildrenCreateRule", DbType="nvarchar(MAX)")] string childrenCreateRule, 
					[Parameter(Name="@SinglePrivate", DbType="nvarchar(MAX)")] string singlePrivate, 
					[Parameter(Name="@PlansSingle", DbType="nvarchar(MAX)")] string plansSingle, 
					[Parameter(Name="@TeamPrivate", DbType="nvarchar(MAX)")] string teamPrivate, 
					[Parameter(Name="@CustomerDisplayType", DbType="tinyint")] System.Nullable<byte> customerDisplayType, 
					[Parameter(Name="@Customers", DbType="nvarchar(MAX)")] string customers, 
					[Parameter(Name="@CustomerFilePath", DbType="nvarchar(255)")] string customerFilePath, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result, 
					[Parameter(Name="@CoordinatorId", DbType="int")] System.Nullable<int> coordinatorId, 
					[Parameter(Name="@GatheringTime", DbType="nvarchar(MAX)")] string gatheringTime, 
					[Parameter(Name="@GatheringPlace", DbType="nvarchar(MAX)")] string gatheringPlace, 
					[Parameter(Name="@GatheringSign", DbType="nvarchar(MAX)")] string gatheringSign, 
					[Parameter(Name="@SentPeoples", DbType="nvarchar(MAX)")] string sentPeoples, 
					[Parameter(Name="@TourCityId", DbType="int")] System.Nullable<int> tourCityId)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourId, tourCode, tourType, status, tourDays, lDate, areaId, routeName, planPeopleNumber, ticketStatus, releaseType, operatorId, createTime, companyId, lTraffic, rTraffic, gather, routeId, localAgencys, attachs, plans, quickPrivate, service, normalPrivate, childrens, tourPrice, childrenCreateRule, singlePrivate, plansSingle, teamPrivate, customerDisplayType, customers, customerFilePath, result, coordinatorId, gatheringTime, gatheringPlace, gatheringSign, sentPeoples, tourCityId);
			result = ((System.Nullable<int>)(result1.GetParameterValue(33)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Tour_UpdateTourInfo")]
		[return: Parameter(DbType="int")]
		public int ProcTourUpdateTourInfo(
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@TourCode", DbType="nvarchar(50)")] string tourCode, 
					[Parameter(Name="@TourType", DbType="tinyint")] System.Nullable<byte> tourType, 
					[Parameter(Name="@TourDays", DbType="int")] System.Nullable<int> tourDays, 
					[Parameter(Name="@LDate", DbType="datetime")] System.Nullable<System.DateTime> lDate, 
					[Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, 
					[Parameter(Name="@PlanPeopleNumber", DbType="int")] System.Nullable<int> planPeopleNumber, 
					[Parameter(Name="@ReleaseType", DbType="char(1)")] string releaseType, 
					[Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@LTraffic", DbType="nvarchar(255)")] string lTraffic, 
					[Parameter(Name="@RTraffic", DbType="nvarchar(255)")] string rTraffic, 
					[Parameter(Name="@Gather", DbType="nvarchar(255)")] string gather, 
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@LocalAgencys", DbType="nvarchar(MAX)")] string localAgencys, 
					[Parameter(Name="@Attachs", DbType="nvarchar(MAX)")] string attachs, 
					[Parameter(Name="@Plans", DbType="nvarchar(MAX)")] string plans, 
					[Parameter(Name="@QuickPrivate", DbType="nvarchar(MAX)")] string quickPrivate, 
					[Parameter(Name="@Service", DbType="nvarchar(MAX)")] string service, 
					[Parameter(Name="@NormalPrivate", DbType="nvarchar(MAX)")] string normalPrivate, 
					[Parameter(Name="@TourPrice", DbType="nvarchar(MAX)")] string tourPrice, 
					[Parameter(Name="@SinglePrivate", DbType="nvarchar(MAX)")] string singlePrivate, 
					[Parameter(Name="@PlansSingle", DbType="nvarchar(MAX)")] string plansSingle, 
					[Parameter(Name="@TeamPrivate", DbType="nvarchar(MAX)")] string teamPrivate, 
					[Parameter(Name="@CustomerDisplayType", DbType="tinyint")] System.Nullable<byte> customerDisplayType, 
					[Parameter(Name="@Customers", DbType="nvarchar(MAX)")] string customers, 
					[Parameter(Name="@CustomerFilePath", DbType="nvarchar(255)")] string customerFilePath, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result, 
					[Parameter(Name="@OrderId", DbType="char(36)")] ref string orderId, 
					[Parameter(Name="@CoordinatorId", DbType="int")] System.Nullable<int> coordinatorId, 
					[Parameter(Name="@GatheringTime", DbType="nvarchar(MAX)")] string gatheringTime, 
					[Parameter(Name="@GatheringPlace", DbType="nvarchar(MAX)")] string gatheringPlace, 
					[Parameter(Name="@GatheringSign", DbType="nvarchar(MAX)")] string gatheringSign, 
					[Parameter(Name="@SentPeoples", DbType="nvarchar(MAX)")] string sentPeoples, 
					[Parameter(Name="@TourCityId", DbType="int")] System.Nullable<int> tourCityId)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourId, tourCode, tourType, tourDays, lDate, areaId, routeName, planPeopleNumber, releaseType, operatorId, companyId, lTraffic, rTraffic, gather, routeId, localAgencys, attachs, plans, quickPrivate, service, normalPrivate, tourPrice, singlePrivate, plansSingle, teamPrivate, customerDisplayType, customers, customerFilePath, result, orderId, coordinatorId, gatheringTime, gatheringPlace, gatheringSign, sentPeoples, tourCityId);
			result = ((System.Nullable<int>)(result1.GetParameterValue(28)));
			orderId = ((string)(result1.GetParameterValue(29)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourOrder_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcTourOrderInsert(
					[Parameter(Name="@OrderID", DbType="char(36)")] string orderID, 
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, 
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(500)")] string routeName, 
					[Parameter(Name="@TourNo", DbType="nvarchar(100)")] string tourNo, 
					[Parameter(Name="@TourClassId", DbType="tinyint")] System.Nullable<byte> tourClassId, 
					[Parameter(Name="@LeaveDate", DbType="datetime")] System.Nullable<System.DateTime> leaveDate, 
					[Parameter(Name="@TourDays", DbType="int")] System.Nullable<int> tourDays, 
					[Parameter(Name="@LeaveTraffic", DbType="nvarchar(250)")] string leaveTraffic, 
					[Parameter(Name="@ReturnTraffic", DbType="nvarchar(250)")] string returnTraffic, 
					[Parameter(Name="@OrderType", DbType="tinyint")] System.Nullable<byte> orderType, 
					[Parameter(Name="@OrderState", DbType="tinyint")] System.Nullable<byte> orderState, 
					[Parameter(Name="@BuyCompanyID", DbType="int")] System.Nullable<int> buyCompanyID, 
					[Parameter(Name="@BuyCompanyName", DbType="nvarchar(250)")] string buyCompanyName, 
					[Parameter(Name="@ContactName", DbType="nvarchar(250)")] string contactName, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(250)")] string contactTel, 
					[Parameter(Name="@ContactMobile", DbType="nvarchar(100)")] string contactMobile, 
					[Parameter(Name="@ContactFax", DbType="nvarchar(100)")] string contactFax, 
					[Parameter(Name="@OperatorName", DbType="nvarchar(100)")] string operatorName, 
					[Parameter(Name="@OperatorID", DbType="int")] System.Nullable<int> operatorID, 
					[Parameter(Name="@PriceStandId", DbType="int")] System.Nullable<int> priceStandId, 
					[Parameter(Name="@PersonalPrice", DbType="money")] System.Nullable<decimal> personalPrice, 
					[Parameter(Name="@ChildPrice", DbType="money")] System.Nullable<decimal> childPrice, 
					[Parameter(Name="@MarketPrice", DbType="money")] System.Nullable<decimal> marketPrice, 
					[Parameter(Name="@AdultNumber", DbType="int")] System.Nullable<int> adultNumber, 
					[Parameter(Name="@ChildNumber", DbType="int")] System.Nullable<int> childNumber, 
					[Parameter(Name="@MarketNumber", DbType="int")] System.Nullable<int> marketNumber, 
					[Parameter(Name="@PeopleNumber", DbType="int")] System.Nullable<int> peopleNumber, 
					[Parameter(Name="@OtherPrice", DbType="money")] System.Nullable<decimal> otherPrice, 
					[Parameter(Name="@SaveSeatDate", DbType="datetime")] System.Nullable<System.DateTime> saveSeatDate, 
					[Parameter(Name="@OperatorContent", DbType="nvarchar(1000)")] string operatorContent, 
					[Parameter(Name="@SpecialContent", DbType="nvarchar(1000)")] string specialContent, 
					[Parameter(Name="@SumPrice", DbType="money")] System.Nullable<decimal> sumPrice, 
					[Parameter(Name="@SellCompanyName", DbType="nvarchar(100)")] string sellCompanyName, 
					[Parameter(Name="@SellCompanyId", DbType="int")] System.Nullable<int> sellCompanyId, 
					[Parameter(Name="@LastDate", DbType="datetime")] System.Nullable<System.DateTime> lastDate, 
					[Parameter(Name="@LastOperatorID", DbType="int")] System.Nullable<int> lastOperatorID, 
					[Parameter(Name="@ViewOperatorId", DbType="int")] System.Nullable<int> viewOperatorId, 
					[Parameter(Name="@CustomerDisplayType", DbType="tinyint")] System.Nullable<byte> customerDisplayType, 
					[Parameter(Name="@CustomerFilePath", DbType="nvarchar(500)")] string customerFilePath, 
					[Parameter(Name="@CustomerLevId", DbType="int")] System.Nullable<int> customerLevId, 
					[Parameter(Name="@IsTourOrderEdit", DbType="int")] System.Nullable<int> isTourOrderEdit, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result, 
					[Parameter(Name="@TourCustomerXML", DbType="nvarchar(MAX)")] string tourCustomerXML, 
					[Parameter(Name="@AmountPlus", DbType="nvarchar(MAX)")] string amountPlus)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID, tourId, areaId, routeId, routeName, tourNo, tourClassId, leaveDate, tourDays, leaveTraffic, returnTraffic, orderType, orderState, buyCompanyID, buyCompanyName, contactName, contactTel, contactMobile, contactFax, operatorName, operatorID, priceStandId, personalPrice, childPrice, marketPrice, adultNumber, childNumber, marketNumber, peopleNumber, otherPrice, saveSeatDate, operatorContent, specialContent, sumPrice, sellCompanyName, sellCompanyId, lastDate, lastOperatorID, viewOperatorId, customerDisplayType, customerFilePath, customerLevId, isTourOrderEdit, result, tourCustomerXML, amountPlus);
			result = ((System.Nullable<int>)(result1.GetParameterValue(43)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourOrder_Update")]
		[return: Parameter(DbType="int")]
		public int ProcTourOrderUpdate(
					[Parameter(Name="@OrderID", DbType="char(36)")] string orderID, 
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@OrderState", DbType="tinyint")] System.Nullable<byte> orderState, 
					[Parameter(Name="@BuyCompanyID", DbType="int")] System.Nullable<int> buyCompanyID, 
					[Parameter(Name="@PriceStandId", DbType="int")] System.Nullable<int> priceStandId, 
					[Parameter(Name="@PersonalPrice", DbType="money")] System.Nullable<decimal> personalPrice, 
					[Parameter(Name="@ChildPrice", DbType="money")] System.Nullable<decimal> childPrice, 
					[Parameter(Name="@MarketPrice", DbType="money")] System.Nullable<decimal> marketPrice, 
					[Parameter(Name="@AdultNumber", DbType="int")] System.Nullable<int> adultNumber, 
					[Parameter(Name="@ChildNumber", DbType="int")] System.Nullable<int> childNumber, 
					[Parameter(Name="@MarketNumber", DbType="int")] System.Nullable<int> marketNumber, 
					[Parameter(Name="@PeopleNumber", DbType="int")] System.Nullable<int> peopleNumber, 
					[Parameter(Name="@OtherPrice", DbType="decimal(10,4)")] System.Nullable<decimal> otherPrice, 
					[Parameter(Name="@SaveSeatDate", DbType="datetime")] System.Nullable<System.DateTime> saveSeatDate, 
					[Parameter(Name="@OperatorContent", DbType="nvarchar(1000)")] string operatorContent, 
					[Parameter(Name="@SpecialContent", DbType="nvarchar(1000)")] string specialContent, 
					[Parameter(Name="@SumPrice", DbType="money")] System.Nullable<decimal> sumPrice, 
					[Parameter(Name="@LastDate", DbType="datetime")] System.Nullable<System.DateTime> lastDate, 
					[Parameter(Name="@LastOperatorID", DbType="int")] System.Nullable<int> lastOperatorID, 
					[Parameter(Name="@CustomerDisplayType", DbType="tinyint")] System.Nullable<byte> customerDisplayType, 
					[Parameter(Name="@CustomerFilePath", DbType="nvarchar(500)")] string customerFilePath, 
					[Parameter(Name="@CustomerLevId", DbType="int")] System.Nullable<int> customerLevId, 
					[Parameter(Name="@ContactName", DbType="nvarchar(250)")] string contactName, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(250)")] string contactTel, 
					[Parameter(Name="@ContactMobile", DbType="nvarchar(100)")] string contactMobile, 
					[Parameter(Name="@ContactFax", DbType="nvarchar(100)")] string contactFax, 
					[Parameter(Name="@IsTourOrderEdit", DbType="int")] System.Nullable<int> isTourOrderEdit, 
					[Parameter(Name="@TourCustomerXML", DbType="nvarchar(MAX)")] string tourCustomerXML, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result, 
					[Parameter(Name="@AmountPlus", DbType="nvarchar(MAX)")] string amountPlus)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID, tourId, orderState, buyCompanyID, priceStandId, personalPrice, childPrice, marketPrice, adultNumber, childNumber, marketNumber, peopleNumber, otherPrice, saveSeatDate, operatorContent, specialContent, sumPrice, lastDate, lastOperatorID, customerDisplayType, customerFilePath, customerLevId, contactName, contactTel, contactMobile, contactFax, isTourOrderEdit, tourCustomerXML, result, amountPlus);
			result = ((System.Nullable<int>)(result1.GetParameterValue(28)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourOrderCustomer_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcTourOrderCustomerInsert([Parameter(Name="@TourCustomerXML", DbType="nvarchar(MAX)")] string tourCustomerXML, [Parameter(Name="@OrderId", DbType="char(36)")] string orderId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourCustomerXML, orderId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourOrderCustomer_Update")]
		[return: Parameter(DbType="int")]
		public int ProcTourOrderCustomerUpdate([Parameter(Name="@TourCustomerXML", DbType="nvarchar(MAX)")] string tourCustomerXML, [Parameter(Name="@OrderId", DbType="char(36)")] string orderId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourCustomerXML, orderId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_UpdateOrderAndTour")]
		[return: Parameter(DbType="int")]
		public int ProcUpdateOrderAndTour([Parameter(Name="@OrderId", DbType="char(36)")] string orderId, [Parameter(Name="@IsRecive", DbType="int")] System.Nullable<int> isRecive, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId, isRecive, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_UpdateTourCountOrVisitorCount")]
		[return: Parameter(DbType="int")]
		public int ProcUpdateTourCountOrVisitorCount([Parameter(Name="@RouteId", DbType="nvarchar(MAX)")] string routeId, [Parameter(Name="@UpdateTourType", DbType="int")] System.Nullable<int> updateTourType, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeId, updateTourType, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CompanyUser_GetUserByDepart")]
		public ISingleResult<ProcCompanyUserGetUserByDepartResult> ProcCompanyUserGetUserByDepart([Parameter(Name="@DepartId", DbType="int")] System.Nullable<int> departId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), departId);
			return ((ISingleResult<ProcCompanyUserGetUserByDepartResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Customer_Insert")]
		public ISingleResult<ProcCustomerInsertResult> ProcCustomerInsert(
					[Parameter(Name="@ProviceId", DbType="int")] System.Nullable<int> proviceId, 
					[Parameter(Name="@ProvinceName", DbType="nvarchar(255)")] string provinceName, 
					[Parameter(Name="@CityId", DbType="int")] System.Nullable<int> cityId, 
					[Parameter(Name="@CityName", DbType="nvarchar(255)")] string cityName, 
					[Parameter(Name="@Name", DbType="nvarchar(30)")] string name, 
					[Parameter(Name="@Licence", DbType="nvarchar(30)")] string licence, 
					[Parameter(Name="@Adress", DbType="nvarchar(50)")] string adress, 
					[Parameter(Name="@PostalCode", DbType="nvarchar(10)")] string postalCode, 
					[Parameter(Name="@BankAccount", DbType="nvarchar(255)")] string bankAccount, 
					[Parameter(Name="@MaxDebts", DbType="money")] System.Nullable<decimal> maxDebts, 
					[Parameter(Name="@PreDeposit", DbType="money")] System.Nullable<decimal> preDeposit, 
					[Parameter(Name="@CommissionCount", DbType="money")] System.Nullable<decimal> commissionCount, 
					[Parameter(Name="@Saler", DbType="nvarchar(50)")] string saler, 
					[Parameter(Name="@SaleId", DbType="int")] System.Nullable<int> saleId, 
					[Parameter(Name="@BrandId", DbType="int")] System.Nullable<int> brandId, 
					[Parameter(Name="@CustomerLev", DbType="int")] System.Nullable<int> customerLev, 
					[Parameter(Name="@CommissionType", DbType="tinyint")] System.Nullable<byte> commissionType, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@ContactName", DbType="nvarchar(255)")] string contactName, 
					[Parameter(Name="@Phone", DbType="nvarchar(20)")] string phone, 
					[Parameter(Name="@Mobile", DbType="nvarchar(20)")] string mobile, 
					[Parameter(Name="@Fax", DbType="nvarchar(20)")] string fax, 
					[Parameter(Name="@Remark", DbType="nvarchar(500)")] string remark, 
					[Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, 
					[Parameter(Name="@CustomerInfoXML", DbType="nvarchar(MAX)")] string customerInfoXML, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), proviceId, provinceName, cityId, cityName, name, licence, adress, postalCode, bankAccount, maxDebts, preDeposit, commissionCount, saler, saleId, brandId, customerLev, commissionType, companyId, contactName, phone, mobile, fax, remark, operatorId, customerInfoXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(25)));
			return ((ISingleResult<ProcCustomerInsertResult>)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Customer_Update")]
		public ISingleResult<ProcCustomerUpdateResult> ProcCustomerUpdate(
					[Parameter(Name="@CustomerId", DbType="int")] System.Nullable<int> customerId, 
					[Parameter(Name="@ProviceId", DbType="int")] System.Nullable<int> proviceId, 
					[Parameter(Name="@ProvinceName", DbType="nvarchar(255)")] string provinceName, 
					[Parameter(Name="@CityId", DbType="int")] System.Nullable<int> cityId, 
					[Parameter(Name="@CityName", DbType="nvarchar(255)")] string cityName, 
					[Parameter(Name="@Name", DbType="nvarchar(30)")] string name, 
					[Parameter(Name="@Licence", DbType="nvarchar(30)")] string licence, 
					[Parameter(Name="@Adress", DbType="nvarchar(50)")] string adress, 
					[Parameter(Name="@PostalCode", DbType="nvarchar(10)")] string postalCode, 
					[Parameter(Name="@BankAccount", DbType="nvarchar(255)")] string bankAccount, 
					[Parameter(Name="@MaxDebts", DbType="money")] System.Nullable<decimal> maxDebts, 
					[Parameter(Name="@PreDeposit", DbType="money")] System.Nullable<decimal> preDeposit, 
					[Parameter(Name="@CommissionCount", DbType="money")] System.Nullable<decimal> commissionCount, 
					[Parameter(Name="@Saler", DbType="nvarchar(50)")] string saler, 
					[Parameter(Name="@SaleId", DbType="int")] System.Nullable<int> saleId, 
					[Parameter(Name="@CustomerLev", DbType="int")] System.Nullable<int> customerLev, 
					[Parameter(Name="@CommissionType", DbType="tinyint")] System.Nullable<byte> commissionType, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@ContactName", DbType="nvarchar(255)")] string contactName, 
					[Parameter(Name="@Phone", DbType="nvarchar(20)")] string phone, 
					[Parameter(Name="@Mobile", DbType="nvarchar(20)")] string mobile, 
					[Parameter(Name="@Fax", DbType="nvarchar(20)")] string fax, 
					[Parameter(Name="@Remark", DbType="nvarchar(500)")] string remark, 
					[Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, 
					[Parameter(Name="@IsEnable", DbType="char(1)")] string isEnable, 
					[Parameter(Name="@IssueTime", DbType="datetime")] System.Nullable<System.DateTime> issueTime, 
					[Parameter(Name="@IsDelete", DbType="char(1)")] string isDelete, 
					[Parameter(Name="@BrandId", DbType="int")] System.Nullable<int> brandId, 
					[Parameter(Name="@CustomerInfoXML", DbType="nvarchar(MAX)")] string customerInfoXML, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerId, proviceId, provinceName, cityId, cityName, name, licence, adress, postalCode, bankAccount, maxDebts, preDeposit, commissionCount, saler, saleId, customerLev, commissionType, companyId, contactName, phone, mobile, fax, remark, operatorId, isEnable, issueTime, isDelete, brandId, customerInfoXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(29)));
			return ((ISingleResult<ProcCustomerUpdateResult>)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CustomerCallBack_Add")]
		[return: Parameter(DbType="int")]
		public int ProcCustomerCallBackAdd([Parameter(Name="@CustomerId", DbType="int")] System.Nullable<int> customerId, [Parameter(Name="@CustomerName", DbType="nvarchar(50)")] string customerName, [Parameter(Name="@CustomerUser", DbType="nvarchar(50)")] string customerUser, [Parameter(Name="@CallBackerId", DbType="int")] System.Nullable<int> callBackerId, [Parameter(Name="@CallBacker", DbType="nvarchar(50)")] string callBacker, [Parameter(Name="@CallResult", DbType="decimal(4,2)")] System.Nullable<decimal> callResult, [Parameter(Name="@Remark", DbType="nvarchar(100)")] string remark, [Parameter(Name="@IsCallBack", DbType="char(1)")] string isCallBack, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@CallBackResultXML", DbType="nvarchar(MAX)")] string callBackResultXML, [Parameter(Name="@ZResult", DbType="int")] ref System.Nullable<int> zResult)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerId, customerName, customerUser, callBackerId, callBacker, callResult, remark, isCallBack, companyId, callBackResultXML, zResult);
			zResult = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CustomerCarefor_GetWillSendList")]
		[return: Parameter(DbType="int")]
		public int ProcCustomerCareforGetWillSendList([Parameter(Name="@IsTime", DbType="int")] System.Nullable<int> isTime, [Parameter(Name="@CurrTime", DbType="datetime")] System.Nullable<System.DateTime> currTime, [Parameter(Name="@FixTypes", DbType="nvarchar(MAX)")] string fixTypes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isTime, currTime, fixTypes);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_PlanTravelAgency_Del")]
		[return: Parameter(DbType="int")]
		public int ProcPlanTravelAgencyDel([Parameter(Name="@TravelId", DbType="char(36)")] string travelId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), travelId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_ReceiveRefund_Check")]
		[return: Parameter(DbType="int")]
		public int ProcReceiveRefundCheck([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@RefundId", DbType="char(36)")] string refundId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, refundId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Route_GetRouteInfo")]
		[ResultType(typeof(ProcRouteGetRouteInfoResult1))]
		[ResultType(typeof(ProcRouteGetRouteInfoResult2))]
		[ResultType(typeof(ProcRouteGetRouteInfoResult3))]
		[ResultType(typeof(ProcRouteGetRouteInfoResult4))]
		[ResultType(typeof(ProcRouteGetRouteInfoResult5))]
		public IMultipleResults ProcRouteGetRouteInfo([Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeId);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Route_InsertRouteInfo")]
		[return: Parameter(DbType="int")]
		public int ProcRouteInsertRouteInfo([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@OperatorName", DbType="nvarchar(100)")] string operatorName, [Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, [Parameter(Name="@RouteName", DbType="nvarchar(250)")] string routeName, [Parameter(Name="@RouteDays", DbType="int")] System.Nullable<int> routeDays, [Parameter(Name="@ReleaseType", DbType="tinyint")] System.Nullable<byte> releaseType, [Parameter(Name="@RouteDepict", DbType="nvarchar(250)")] string routeDepict, [Parameter(Name="@Attachs", DbType="nvarchar(MAX)")] string attachs, [Parameter(Name="@QuickPrivate", DbType="nvarchar(MAX)")] string quickPrivate, [Parameter(Name="@Service", DbType="nvarchar(MAX)")] string service, [Parameter(Name="@OtherService", DbType="nvarchar(MAX)")] string otherService, [Parameter(Name="@Plans", DbType="nvarchar(MAX)")] string plans, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, operatorId, operatorName, areaId, routeName, routeDays, releaseType, routeDepict, attachs, quickPrivate, service, otherService, plans, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(13)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Route_UpdateRouteInfo")]
		[return: Parameter(DbType="int")]
		public int ProcRouteUpdateRouteInfo([Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@OperatorName", DbType="nvarchar(100)")] string operatorName, [Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, [Parameter(Name="@RouteName", DbType="nvarchar(250)")] string routeName, [Parameter(Name="@RouteDays", DbType="int")] System.Nullable<int> routeDays, [Parameter(Name="@ReleaseType", DbType="tinyint")] System.Nullable<byte> releaseType, [Parameter(Name="@RouteDepict", DbType="nvarchar(250)")] string routeDepict, [Parameter(Name="@Attachs", DbType="nvarchar(MAX)")] string attachs, [Parameter(Name="@QuickPrivate", DbType="nvarchar(MAX)")] string quickPrivate, [Parameter(Name="@Service", DbType="nvarchar(MAX)")] string service, [Parameter(Name="@OtherService", DbType="nvarchar(MAX)")] string otherService, [Parameter(Name="@Plans", DbType="nvarchar(MAX)")] string plans, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeId, companyId, operatorId, operatorName, areaId, routeName, routeDays, releaseType, routeDepict, attachs, quickPrivate, service, otherService, plans, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(14)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_RouteQuote_DeleteQuoteInfo")]
		[return: Parameter(DbType="int")]
		public int ProcRouteQuoteDeleteQuoteInfo([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_RouteQuote_InsertQuoteInfo")]
		[return: Parameter(DbType="int")]
		public int ProcRouteQuoteInsertQuoteInfo(
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@QuoteUnitsId", DbType="int")] System.Nullable<int> quoteUnitsId, 
					[Parameter(Name="@QuoteUnitsName", DbType="nvarchar(250)")] string quoteUnitsName, 
					[Parameter(Name="@ContactName", DbType="nvarchar(250)")] string contactName, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(250)")] string contactTel, 
					[Parameter(Name="@TmpLeaveDate", DbType="datetime")] System.Nullable<System.DateTime> tmpLeaveDate, 
					[Parameter(Name="@AdultNum", DbType="int")] System.Nullable<int> adultNum, 
					[Parameter(Name="@ChildNum", DbType="int")] System.Nullable<int> childNum, 
					[Parameter(Name="@PeopleNum", DbType="int")] System.Nullable<int> peopleNum, 
					[Parameter(Name="@LocalQuoteSum", DbType="money")] System.Nullable<decimal> localQuoteSum, 
					[Parameter(Name="@MyQuoteSum", DbType="money")] System.Nullable<decimal> myQuoteSum, 
					[Parameter(Name="@TicketAgio", DbType="decimal(8,6)")] System.Nullable<decimal> ticketAgio, 
					[Parameter(Name="@Remark", DbType="nvarchar(MAX)")] string remark, 
					[Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, 
					[Parameter(Name="@QuoteAskXML", DbType="nvarchar(MAX)")] string quoteAskXML, 
					[Parameter(Name="@QuoteListXML", DbType="nvarchar(MAX)")] string quoteListXML, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeId, quoteUnitsId, quoteUnitsName, contactName, contactTel, tmpLeaveDate, adultNum, childNum, peopleNum, localQuoteSum, myQuoteSum, ticketAgio, remark, operatorId, quoteAskXML, quoteListXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(16)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_RouteQuote_SelectQuoteInfo")]
		[ResultType(typeof(ProcRouteQuoteSelectQuoteInfoResult1))]
		[ResultType(typeof(ProcRouteQuoteSelectQuoteInfoResult2))]
		[ResultType(typeof(ProcRouteQuoteSelectQuoteInfoResult3))]
		public IMultipleResults ProcRouteQuoteSelectQuoteInfo([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_RouteQuote_UpdateQuoteInfo")]
		[return: Parameter(DbType="int")]
		public int ProcRouteQuoteUpdateQuoteInfo(
					[Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, 
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@QuoteUnitsId", DbType="int")] System.Nullable<int> quoteUnitsId, 
					[Parameter(Name="@QuoteUnitsName", DbType="nvarchar(250)")] string quoteUnitsName, 
					[Parameter(Name="@ContactName", DbType="nvarchar(250)")] string contactName, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(250)")] string contactTel, 
					[Parameter(Name="@TmpLeaveDate", DbType="datetime")] System.Nullable<System.DateTime> tmpLeaveDate, 
					[Parameter(Name="@AdultNum", DbType="int")] System.Nullable<int> adultNum, 
					[Parameter(Name="@ChildNum", DbType="int")] System.Nullable<int> childNum, 
					[Parameter(Name="@PeopleNum", DbType="int")] System.Nullable<int> peopleNum, 
					[Parameter(Name="@LocalQuoteSum", DbType="money")] System.Nullable<decimal> localQuoteSum, 
					[Parameter(Name="@MyQuoteSum", DbType="money")] System.Nullable<decimal> myQuoteSum, 
					[Parameter(Name="@TicketAgio", DbType="decimal(8,6)")] System.Nullable<decimal> ticketAgio, 
					[Parameter(Name="@Remark", DbType="nvarchar(MAX)")] string remark, 
					[Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, 
					[Parameter(Name="@QuoteAskXML", DbType="nvarchar(MAX)")] string quoteAskXML, 
					[Parameter(Name="@QuoteListXML", DbType="nvarchar(MAX)")] string quoteListXML, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, routeId, quoteUnitsId, quoteUnitsName, contactName, contactTel, tmpLeaveDate, adultNum, childNum, peopleNum, localQuoteSum, myQuoteSum, ticketAgio, remark, operatorId, quoteAskXML, quoteListXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(17)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SetUserPermission")]
		[return: Parameter(DbType="int")]
		public int ProcSetUserPermission([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@RoleId", DbType="int")] System.Nullable<int> roleId, [Parameter(Name="@PermissionList", DbType="varchar(MAX)")] string permissionList, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, roleId, permissionList, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Tour_CreateAutoTourCodes")]
		public ISingleResult<ProcTourCreateAutoTourCodesResult> ProcTourCreateAutoTourCodes([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@LDates", DbType="nvarchar(MAX)")] string lDates)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, lDates);
			return ((ISingleResult<ProcTourCreateAutoTourCodesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourOrder_UpdateFinanceExpense")]
		[return: Parameter(DbType="int")]
		public int ProcTourOrderUpdateFinanceExpense([Parameter(Name="@FinanceExpenseXML", DbType="nvarchar(MAX)")] string financeExpenseXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), financeExpenseXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourOrderCustomer_AddLeague")]
		[return: Parameter(DbType="int")]
		public int ProcTourOrderCustomerAddLeague([Parameter(Name="@CustormerId", DbType="char(36)")] string custormerId, [Parameter(Name="@OperatorName", DbType="nvarchar(250)")] string operatorName, [Parameter(Name="@OperatorID", DbType="int")] System.Nullable<int> operatorID, [Parameter(Name="@RefundReason", DbType="nvarchar(1000)")] string refundReason, [Parameter(Name="@RefundAmount", DbType="decimal(10,4)")] System.Nullable<decimal> refundAmount, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), custormerId, operatorName, operatorID, refundReason, refundAmount, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(5)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourOrderCustomer_AddRefund")]
		[return: Parameter(DbType="int")]
		public int ProcTourOrderCustomerAddRefund([Parameter(Name="@Id", DbType="char(36)")] string id, [Parameter(Name="@CustormerId", DbType="char(36)")] string custormerId, [Parameter(Name="@RouteName", DbType="nvarchar(250)")] string routeName, [Parameter(Name="@OperatorName", DbType="nvarchar(250)")] string operatorName, [Parameter(Name="@OperatorID", DbType="int")] System.Nullable<int> operatorID, [Parameter(Name="@FlightTime", DbType="datetime")] System.Nullable<System.DateTime> flightTime, [Parameter(Name="@SendPlace", DbType="nvarchar(250)")] string sendPlace, [Parameter(Name="@EndPlace", DbType="nvarchar(250)")] string endPlace, [Parameter(Name="@CustomerNum", DbType="int")] System.Nullable<int> customerNum, [Parameter(Name="@RefundAmount", DbType="decimal(10,4)")] System.Nullable<decimal> refundAmount, [Parameter(Name="@RefundNote", DbType="nvarchar(1000)")] string refundNote, [Parameter(Name="@OutTourId", DbType="char(36)")] ref string outTourId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, custormerId, routeName, operatorName, operatorID, flightTime, sendPlace, endPlace, customerNum, refundAmount, refundNote, outTourId);
			outTourId = ((string)(result.GetParameterValue(11)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_UpdateCheckMoney")]
		[return: Parameter(DbType="int")]
		public int ProcUpdateCheckMoney([Parameter(Name="@OrderId", DbType="varchar(2000)")] string orderId, [Parameter(Name="@IsReceive", DbType="int")] System.Nullable<int> isReceive, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId, isReceive, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_UpdateTotalIncome")]
		[return: Parameter(DbType="int")]
		public int ProcUpdateTotalIncome([Parameter(Name="@OrderId", DbType="char(36)")] string orderId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Utility_CalculationCashFlow")]
		[return: Parameter(DbType="int")]
		public int ProcUtilityCalculationCashFlow([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@CurrDate", DbType="datetime")] System.Nullable<System.DateTime> currDate, [Parameter(Name="@ErrorValue", DbType="int")] ref System.Nullable<int> errorValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, currDate, errorValue);
			errorValue = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Utility_CalculationCheckedOut")]
		[return: Parameter(DbType="int")]
		public int ProcUtilityCalculationCheckedOut([Parameter(Name="@FinancialPayId", DbType="nvarchar(MAX)")] string financialPayId, [Parameter(Name="@ErrorValue", DbType="int")] ref System.Nullable<int> errorValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), financialPayId, errorValue);
			errorValue = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Utility_CalculationTourIncome")]
		[return: Parameter(DbType="int")]
		public int ProcUtilityCalculationTourIncome([Parameter(Name="@TourId", DbType="char(36)")] string tourId, [Parameter(Name="@IncomeItemIdAndTypeXML", DbType="nvarchar(MAX)")] string incomeItemIdAndTypeXML, [Parameter(Name="@ErrorValue", DbType="int")] ref System.Nullable<int> errorValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourId, incomeItemIdAndTypeXML, errorValue);
			errorValue = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Utility_CalculationTourOut")]
		[return: Parameter(DbType="int")]
		public int ProcUtilityCalculationTourOut([Parameter(Name="@TourId", DbType="char(36)")] string tourId, [Parameter(Name="@ItemIdAndTypeXML", DbType="nvarchar(MAX)")] string itemIdAndTypeXML, [Parameter(Name="@ErrorValue", DbType="int")] ref System.Nullable<int> errorValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourId, itemIdAndTypeXML, errorValue);
			errorValue = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SqlPlan_CompanyCash_Init")]
		[return: Parameter(DbType="int")]
		public int SqlPlanCompanyCashInit()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SQLPlan_CustomerCarefor_UpdateIsSeded")]
		[return: Parameter(DbType="int")]
		public int SQLPlanCustomerCareforUpdateIsSeded()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SQLPlan_Tour")]
		[return: Parameter(DbType="int")]
		public int SQLPlanTour()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SQLPlan_TourOder_SaveSeatUpdate")]
		[return: Parameter(DbType="int")]
		public int SQLPlanTourOderSaveSeatUpdate()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.fn_ValidUserLevDepartManagers", IsComposable=true)]
		[return: Parameter(DbType="int")]
		public System.Nullable<int> FnValidUserLevDepartManagers([Parameter(Name="@CurrUserId", DbType="int")] System.Nullable<int> currUserId, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currUserId, operatorId).ReturnValue));
		}
		
		[Function(Name="dbo.proc_Area_GetAreaInfo")]
		[ResultType(typeof(ProcAreaGetAreaInfoResult1))]
		[ResultType(typeof(ProcAreaGetAreaInfoResult2))]
		public IMultipleResults ProcAreaGetAreaInfo([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Area_IsAreaPublish")]
		[return: Parameter(DbType="int")]
		public int ProcAreaIsAreaPublish([Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), areaId, companyId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_AttendanceInfo_Update")]
		[return: Parameter(DbType="int")]
		public int ProcAttendanceInfoUpdate([Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@AddDate", DbType="datetime")] System.Nullable<System.DateTime> addDate, [Parameter(Name="@AttendanceInfoXML", DbType="nvarchar(MAX)")] string attendanceInfoXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, addDate, attendanceInfoXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CompanyInfo_Update")]
		[return: Parameter(DbType="int")]
		public int ProcCompanyInfoUpdate([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@SystemId", DbType="int")] System.Nullable<int> systemId, [Parameter(Name="@CompanyEnglishName", DbType="nvarchar(500)")] string companyEnglishName, [Parameter(Name="@CompanyName", DbType="nvarchar(250)")] string companyName, [Parameter(Name="@CompanySiteUrl", DbType="nvarchar(100)")] string companySiteUrl, [Parameter(Name="@CompanyType", DbType="nvarchar(200)")] string companyType, [Parameter(Name="@CompanyZip", DbType="nvarchar(100)")] string companyZip, [Parameter(Name="@ContactFax", DbType="varchar(100)")] string contactFax, [Parameter(Name="@ContactMobile", DbType="varchar(100)")] string contactMobile, [Parameter(Name="@ContactName", DbType="nvarchar(100)")] string contactName, [Parameter(Name="@ContactTel", DbType="varchar(100)")] string contactTel, [Parameter(Name="@License", DbType="nvarchar(100)")] string license, [Parameter(Name="@CompanyAddress", DbType="nvarchar(100)")] string companyAddress, [Parameter(Name="@CompanyAccountXML", DbType="nvarchar(MAX)")] string companyAccountXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, systemId, companyEnglishName, companyName, companySiteUrl, companyType, companyZip, contactFax, contactMobile, contactName, contactTel, license, companyAddress, companyAccountXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(14)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CompanySupplier_Update")]
		public ISingleResult<ProcCompanySupplierUpdateResult> ProcCompanySupplierUpdate(
					[Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, 
					[Parameter(Name="@ProvinceId", DbType="int")] System.Nullable<int> provinceId, 
					[Parameter(Name="@ProvinceName", DbType="nvarchar(255)")] string provinceName, 
					[Parameter(Name="@CityId", DbType="int")] System.Nullable<int> cityId, 
					[Parameter(Name="@CityName", DbType="nvarchar(255)")] string cityName, 
					[Parameter(Name="@UnitName", DbType="nvarchar(255)")] string unitName, 
					[Parameter(Name="@SupplierType", DbType="tinyint")] System.Nullable<byte> supplierType, 
					[Parameter(Name="@UnitAddress", DbType="nvarchar(500)")] string unitAddress, 
					[Parameter(Name="@Commission", DbType="money")] System.Nullable<decimal> commission, 
					[Parameter(Name="@AgreementFile", DbType="nvarchar(255)")] string agreementFile, 
					[Parameter(Name="@TradeNum", DbType="int")] System.Nullable<int> tradeNum, 
					[Parameter(Name="@UnitPolicy", DbType="nvarchar(MAX)")] string unitPolicy, 
					[Parameter(Name="@Remark", DbType="nvarchar(MAX)")] string remark, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@IsDelete", DbType="char(1)")] string isDelete, 
					[Parameter(Name="@SupplierContactXML", DbType="nvarchar(MAX)")] string supplierContactXML, 
					[Parameter(Name="@ErrorValue", DbType="int")] ref System.Nullable<int> errorValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, provinceId, provinceName, cityId, cityName, unitName, supplierType, unitAddress, commission, agreementFile, tradeNum, unitPolicy, remark, companyId, isDelete, supplierContactXML, errorValue);
			errorValue = ((System.Nullable<int>)(result.GetParameterValue(16)));
			return ((ISingleResult<ProcCompanySupplierUpdateResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CustomerCallBack_Delete")]
		[return: Parameter(DbType="int")]
		public int ProcCustomerCallBackDelete([Parameter(Name="@id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CustomerCallResult_Update")]
		[return: Parameter(DbType="int")]
		public int ProcCustomerCallResultUpdate([Parameter(Name="@id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@CustomerCareforId", DbType="int")] System.Nullable<int> customerCareforId, [Parameter(Name="@RouteID", DbType="int")] System.Nullable<int> routeID, [Parameter(Name="@RouteName", DbType="nvarchar(100)")] string routeName, [Parameter(Name="@DepartureTime", DbType="datetime")] System.Nullable<System.DateTime> departureTime, [Parameter(Name="@Journey", DbType="tinyint")] System.Nullable<byte> journey, [Parameter(Name="@meals", DbType="tinyint")] System.Nullable<byte> meals, [Parameter(Name="@Hotel", DbType="tinyint")] System.Nullable<byte> hotel, [Parameter(Name="@Spot", DbType="tinyint")] System.Nullable<byte> spot, [Parameter(Name="@Guide", DbType="tinyint")] System.Nullable<byte> guide, [Parameter(Name="@Shopping", DbType="tinyint")] System.Nullable<byte> shopping, [Parameter(Name="@Car", DbType="tinyint")] System.Nullable<byte> car, [Parameter(Name="@Remark", DbType="nvarchar(255)")] string remark, [Parameter(Name="@CallResult", DbType="decimal(4,2)")] System.Nullable<decimal> callResult, [Parameter(Name="@Zresult", DbType="int")] ref System.Nullable<int> zresult)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, customerCareforId, routeID, routeName, departureTime, journey, meals, hotel, spot, guide, shopping, car, remark, callResult, zresult);
			zresult = ((System.Nullable<int>)(result.GetParameterValue(14)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_CustomerStatus_Return")]
		public ISingleResult<ProcCustomerStatusReturnResult> ProcCustomerStatusReturn([Parameter(Name="@CustomerId", DbType="char(36)")] string customerId, [Parameter(Name="@StatusMsg", DbType="int")] ref System.Nullable<int> statusMsg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerId, statusMsg);
			statusMsg = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((ISingleResult<ProcCustomerStatusReturnResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Financial_GetExpenseRegisterAmount")]
		public ISingleResult<ProcFinancialGetExpenseRegisterAmountResult> ProcFinancialGetExpenseRegisterAmount([Parameter(Name="@PlanId", DbType="char(36)")] string planId, [Parameter(Name="@PlanType", DbType="tinyint")] System.Nullable<byte> planType, [Parameter(Name="@RegisterId", DbType="char(36)")] string registerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), planId, planType, registerId);
			return ((ISingleResult<ProcFinancialGetExpenseRegisterAmountResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Inquire_InsertInquire")]
		[return: Parameter(DbType="int")]
		public int ProcInquireInsertInquire(
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, 
					[Parameter(Name="@CustomerId", DbType="int")] System.Nullable<int> customerId, 
					[Parameter(Name="@CustomerName", DbType="nvarchar(255)")] string customerName, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(255)")] string contactTel, 
					[Parameter(Name="@ContactName", DbType="nvarchar(255)")] string contactName, 
					[Parameter(Name="@AdultNumber", DbType="int")] System.Nullable<int> adultNumber, 
					[Parameter(Name="@ChildNumber", DbType="int")] System.Nullable<int> childNumber, 
					[Parameter(Name="@LeaveDate", DbType="datetime")] System.Nullable<System.DateTime> leaveDate, 
					[Parameter(Name="@SpecialClaim", DbType="nvarchar(MAX)")] string specialClaim, 
					[Parameter(Name="@XingCheng", DbType="nvarchar(MAX)")] string xingCheng, 
					[Parameter(Name="@ASK", DbType="nvarchar(MAX)")] string ask, 
					[Parameter(Name="@QuoteState", DbType="tinyint")] System.Nullable<byte> quoteState, 
					[Parameter(Name="@Remark", DbType="varchar(MAX)")] string remark, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, routeId, routeName, customerId, customerName, contactTel, contactName, adultNumber, childNumber, leaveDate, specialClaim, xingCheng, ask, quoteState, remark, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(15)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Inquire_UpdateInquire")]
		[return: Parameter(DbType="int")]
		public int ProcInquireUpdateInquire(
					[Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, 
					[Parameter(Name="@CustomerId", DbType="int")] System.Nullable<int> customerId, 
					[Parameter(Name="@CustomerName", DbType="nvarchar(255)")] string customerName, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(255)")] string contactTel, 
					[Parameter(Name="@ContactName", DbType="nvarchar(255)")] string contactName, 
					[Parameter(Name="@LeaveDate", DbType="datetime")] System.Nullable<System.DateTime> leaveDate, 
					[Parameter(Name="@AdultNumber", DbType="int")] System.Nullable<int> adultNumber, 
					[Parameter(Name="@ChildNumber", DbType="int")] System.Nullable<int> childNumber, 
					[Parameter(Name="@SpecialClaim", DbType="nvarchar(MAX)")] string specialClaim, 
					[Parameter(Name="@Remark", DbType="varchar(MAX)")] string remark, 
					[Parameter(Name="@QuoteState", DbType="tinyint")] System.Nullable<byte> quoteState, 
					[Parameter(Name="@XingCheng", DbType="nvarchar(MAX)")] string xingCheng, 
					[Parameter(Name="@QuoteInfo", DbType="nvarchar(MAX)")] string quoteInfo, 
					[Parameter(Name="@ASK", DbType="nvarchar(MAX)")] string ask, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, companyId, routeId, routeName, customerId, customerName, contactTel, contactName, leaveDate, adultNumber, childNumber, specialClaim, remark, quoteState, xingCheng, quoteInfo, ask, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(17)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Inquire_UpdateQuote")]
		[return: Parameter(DbType="int")]
		public int ProcInquireUpdateQuote(
					[Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, 
					[Parameter(Name="@ContactTel", DbType="nvarchar(255)")] string contactTel, 
					[Parameter(Name="@ContactName", DbType="nvarchar(255)")] string contactName, 
					[Parameter(Name="@AdultNumber", DbType="int")] System.Nullable<int> adultNumber, 
					[Parameter(Name="@ChildNumber", DbType="int")] System.Nullable<int> childNumber, 
					[Parameter(Name="@TicketAgio", DbType="decimal(18,0)")] System.Nullable<decimal> ticketAgio, 
					[Parameter(Name="@SpecialClaim", DbType="nvarchar(MAX)")] string specialClaim, 
					[Parameter(Name="@XingCheng", DbType="nvarchar(MAX)")] string xingCheng, 
					[Parameter(Name="@ASK", DbType="nvarchar(MAX)")] string ask, 
					[Parameter(Name="@QuoteInfo", DbType="nvarchar(MAX)")] string quoteInfo, 
					[Parameter(Name="@Remark", DbType="varchar(MAX)")] string remark, 
					[Parameter(Name="@QuoteState", DbType="int")] System.Nullable<int> quoteState, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, companyId, routeId, routeName, contactTel, contactName, adultNumber, childNumber, ticketAgio, specialClaim, xingCheng, ask, quoteInfo, remark, quoteState, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(15)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_InsertSupplierShopping")]
		[return: Parameter(DbType="int")]
		public int ProcInsertSupplierShopping([Parameter(Name="@companyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@operatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@pid", DbType="int")] System.Nullable<int> pid, [Parameter(Name="@cid", DbType="int")] System.Nullable<int> cid, [Parameter(Name="@provinceName", DbType="nvarchar(255)")] string provinceName, [Parameter(Name="@cityName", DbType="nvarchar(255)")] string cityName, [Parameter(Name="@supplierType", DbType="tinyint")] System.Nullable<byte> supplierType, [Parameter(Name="@unitName", DbType="nvarchar(255)")] string unitName, [Parameter(Name="@saleProduct", DbType="nvarchar(255)")] string saleProduct, [Parameter(Name="@agreementFile", DbType="nvarchar(255)")] string agreementFile, [Parameter(Name="@guideWord", DbType="nvarchar(MAX)")] string guideWord, [Parameter(Name="@remark", DbType="nvarchar(MAX)")] string remark, [Parameter(Name="@contactInfo", DbType="nvarchar(MAX)")] string contactInfo, [Parameter(Name="@result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, operatorId, pid, cid, provinceName, cityName, supplierType, unitName, saleProduct, agreementFile, guideWord, remark, contactInfo, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(13)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_JudgeCustomOrPriceStand")]
		[return: Parameter(DbType="int")]
		public int ProcJudgeCustomOrPriceStand([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@IsPriceStand", DbType="int")] System.Nullable<int> isPriceStand, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, companyId, isPriceStand, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_JudgePermission")]
		[return: Parameter(DbType="int")]
		public int ProcJudgePermission([Parameter(Name="@pubId", DbType="int")] System.Nullable<int> pubId, [Parameter(Name="@curId", DbType="int")] System.Nullable<int> curId, [Parameter(Name="@result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pubId, curId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_MessageReply_Add")]
		[return: Parameter(DbType="int")]
		public int ProcMessageReplyAdd([Parameter(Name="@CompanyID", DbType="int")] System.Nullable<int> companyID, [Parameter(Name="@MessageID", DbType="int")] System.Nullable<int> messageID, [Parameter(Name="@ReplyContent", DbType="nvarchar(MAX)")] string replyContent, [Parameter(Name="@ReplyPersonId", DbType="int")] System.Nullable<int> replyPersonId, [Parameter(Name="@ReplyState", DbType="int")] System.Nullable<int> replyState, [Parameter(Name="@ReplyPersonName", DbType="nvarchar(50)")] string replyPersonName, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyID, messageID, replyContent, replyPersonId, replyState, replyPersonName, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(6)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_MessageReply_Update")]
		[return: Parameter(DbType="int")]
		public int ProcMessageReplyUpdate([Parameter(Name="@CompanyID", DbType="int")] System.Nullable<int> companyID, [Parameter(Name="@ReplyId", DbType="int")] System.Nullable<int> replyId, [Parameter(Name="@MessageID", DbType="int")] System.Nullable<int> messageID, [Parameter(Name="@ReplyContent", DbType="nvarchar(MAX)")] string replyContent, [Parameter(Name="@ReplyPersonId", DbType="int")] System.Nullable<int> replyPersonId, [Parameter(Name="@ReplyState", DbType="int")] System.Nullable<int> replyState, [Parameter(Name="@ReplyPersonName", DbType="nvarchar(50)")] string replyPersonName, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyID, replyId, messageID, replyContent, replyPersonId, replyState, replyPersonName, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_PlanSingle_SetSingleAccounting")]
		[return: Parameter(DbType="int")]
		public int ProcPlanSingleSetSingleAccounting([Parameter(Name="@TourId", DbType="char(36)")] string tourId, [Parameter(Name="@PlansSingle", DbType="nvarchar(MAX)")] string plansSingle, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourId, plansSingle, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_ServerTradeCount")]
		[return: Parameter(DbType="int")]
		public int ProcServerTradeCount([Parameter(Name="@ServerId", DbType="int")] System.Nullable<int> serverId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serverId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_StatAllIncome_AboutDelete")]
		[return: Parameter(DbType="int")]
		public int ProcStatAllIncomeAboutDelete([Parameter(Name="@OrderId", DbType="char(36)")] string orderId, [Parameter(Name="@IsDelete", DbType="int")] System.Nullable<int> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId, isDelete);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Supplier_GetShopping")]
		[ResultType(typeof(ProcSupplierGetShoppingResult1))]
		[ResultType(typeof(ProcSupplierGetShoppingResult2))]
		public IMultipleResults ProcSupplierGetShopping([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SupplierContact_Update")]
		public ISingleResult<ProcSupplierContactUpdateResult> ProcSupplierContactUpdate([Parameter(Name="@SupplierInsuranceXML", DbType="nvarchar(MAX)")] string supplierInsuranceXML, [Parameter(Name="@SupplierId", DbType="int")] System.Nullable<int> supplierId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplierInsuranceXML, supplierId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((ISingleResult<ProcSupplierContactUpdateResult>)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SupplierInsurance_Insert")]
		[return: Parameter(DbType="int")]
		public int ProcSupplierInsuranceInsert([Parameter(Name="@ProvinceId", DbType="int")] System.Nullable<int> provinceId, [Parameter(Name="@ProvinceName", DbType="nvarchar(250)")] string provinceName, [Parameter(Name="@CityId", DbType="int")] System.Nullable<int> cityId, [Parameter(Name="@CityName", DbType="nvarchar(250)")] string cityName, [Parameter(Name="@UnitName", DbType="nvarchar(250)")] string unitName, [Parameter(Name="@SupplierType", DbType="tinyint")] System.Nullable<byte> supplierType, [Parameter(Name="@UnitAddress", DbType="nvarchar(500)")] string unitAddress, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@Remark", DbType="nvarchar(MAX)")] string remark, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@AgreementFile", DbType="nvarchar(500)")] string agreementFile, [Parameter(Name="@SupplierInsuranceXML", DbType="nvarchar(MAX)")] string supplierInsuranceXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), provinceId, provinceName, cityId, cityName, unitName, supplierType, unitAddress, companyId, remark, operatorId, agreementFile, supplierInsuranceXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(12)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SupplierInsurance_Update")]
		[return: Parameter(DbType="int")]
		public int ProcSupplierInsuranceUpdate([Parameter(Name="@ID", DbType="int")] System.Nullable<int> id, [Parameter(Name="@ProvinceId", DbType="int")] System.Nullable<int> provinceId, [Parameter(Name="@ProvinceName", DbType="nvarchar(250)")] string provinceName, [Parameter(Name="@CityId", DbType="int")] System.Nullable<int> cityId, [Parameter(Name="@CityName", DbType="nvarchar(250)")] string cityName, [Parameter(Name="@UnitName", DbType="nvarchar(250)")] string unitName, [Parameter(Name="@SupplierType", DbType="tinyint")] System.Nullable<byte> supplierType, [Parameter(Name="@UnitAddress", DbType="nvarchar(500)")] string unitAddress, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@Remark", DbType="nvarchar(MAX)")] string remark, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@AgreementFile", DbType="nvarchar(500)")] string agreementFile, [Parameter(Name="@SupplierInsuranceXML", DbType="nvarchar(MAX)")] string supplierInsuranceXML, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, provinceId, provinceName, cityId, cityName, unitName, supplierType, unitAddress, companyId, remark, operatorId, agreementFile, supplierInsuranceXML, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(13)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_SysRoleManage_Update")]
		[return: Parameter(DbType="int")]
		public int ProcSysRoleManageUpdate([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@RoleName", DbType="nvarchar(250)")] string roleName, [Parameter(Name="@RoleChilds", DbType="varchar(MAX)")] string roleChilds, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, companyId, roleName, roleChilds, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Ticket_Del")]
		[return: Parameter(DbType="int")]
		public int ProcTicketDel([Parameter(Name="@TicketOutId", DbType="char(36)")] string ticketOutId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketOutId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Ticket_GetModel")]
		[ResultType(typeof(ProcTicketGetModelResult1))]
		[ResultType(typeof(ProcTicketGetModelResult2))]
		public IMultipleResults ProcTicketGetModel([Parameter(Name="@TicketId", DbType="int")] System.Nullable<int> ticketId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketId);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Ticket_GetReturnModel")]
		public ISingleResult<ProcTicketGetReturnModelResult> ProcTicketGetReturnModel([Parameter(Name="@TicketId", DbType="int")] System.Nullable<int> ticketId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketId);
			return ((ISingleResult<ProcTicketGetReturnModelResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Ticket_GetTicketOutId")]
		[ResultType(typeof(ProcTicketGetTicketOutIdResult1))]
		[ResultType(typeof(ProcTicketGetTicketOutIdResult2))]
		public IMultipleResults ProcTicketGetTicketOutId([Parameter(Name="@TicketId", DbType="int")] System.Nullable<int> ticketId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketId);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Ticket_Return")]
		[return: Parameter(DbType="int")]
		public int ProcTicketReturn([Parameter(Name="@TicketId", DbType="int")] System.Nullable<int> ticketId, [Parameter(Name="@ReturnMoney", DbType="money")] System.Nullable<decimal> returnMoney, [Parameter(Name="@State", DbType="tinyint")] System.Nullable<byte> state, [Parameter(Name="@Remark", DbType="varchar(250)")] string remark, [Parameter(Name="@TourOrderCustomer", DbType="varchar(250)")] string tourOrderCustomer, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketId, returnMoney, state, remark, tourOrderCustomer, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(5)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_Tour_GetInquireQuote")]
		[ResultType(typeof(ProcTourGetInquireQuoteResult1))]
		[ResultType(typeof(ProcTourGetInquireQuoteResult2))]
		[ResultType(typeof(ProcTourGetInquireQuoteResult3))]
		[ResultType(typeof(ProcTourGetInquireQuoteResult4))]
		[ResultType(typeof(ProcTourGetInquireQuoteResult5))]
		[ResultType(typeof(ProcTourGetInquireQuoteResult6))]
		[ResultType(typeof(ProcTourGetInquireQuoteResult7))]
		[ResultType(typeof(ProcTourGetInquireQuoteResult8))]
		public IMultipleResults ProcTourGetInquireQuote([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@CustomerId", DbType="int")] System.Nullable<int> customerId, [Parameter(Name="@IsZhuTuan", DbType="varchar(1)")] string isZhuTuan)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, companyId, customerId, isZhuTuan);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourEveryday_Apply")]
		[return: Parameter(DbType="int")]
		public int ProcTourEverydayApply([Parameter(Name="@ApplyId", DbType="char(36)")] string applyId, [Parameter(Name="@TourId", DbType="char(36)")] string tourId, [Parameter(Name="@ApplyCompanyId", DbType="int")] System.Nullable<int> applyCompanyId, [Parameter(Name="@LDate", DbType="datetime")] System.Nullable<System.DateTime> lDate, [Parameter(Name="@AdultNumber", DbType="int")] System.Nullable<int> adultNumber, [Parameter(Name="@ChildrenNumber", DbType="int")] System.Nullable<int> childrenNumber, [Parameter(Name="@StandardId", DbType="int")] System.Nullable<int> standardId, [Parameter(Name="@LevelId", DbType="int")] System.Nullable<int> levelId, [Parameter(Name="@SpecialRequirement", DbType="nvarchar(MAX)")] string specialRequirement, [Parameter(Name="@TravellerDisplayType", DbType="tinyint")] System.Nullable<byte> travellerDisplayType, [Parameter(Name="@TravellerFilePath", DbType="nvarchar(255)")] string travellerFilePath, [Parameter(Name="@Travellers", DbType="nvarchar(MAX)")] string travellers, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@ApplyTime", DbType="datetime")] System.Nullable<System.DateTime> applyTime, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applyId, tourId, applyCompanyId, lDate, adultNumber, childrenNumber, standardId, levelId, specialRequirement, travellerDisplayType, travellerFilePath, travellers, operatorId, applyTime, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(14)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourEveryday_BuildTourFollow")]
		[return: Parameter(DbType="int")]
		public int ProcTourEverydayBuildTourFollow([Parameter(Name="@TourId", DbType="char(36)")] string tourId, [Parameter(Name="@EverydayTourId", DbType="char(36)")] string everydayTourId, [Parameter(Name="@EverydayTourApplyId", DbType="char(36)")] string everydayTourApplyId, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result, [Parameter(Name="@ApplyCompanyId", DbType="int")] ref System.Nullable<int> applyCompanyId)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourId, everydayTourId, everydayTourApplyId, result, applyCompanyId);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			applyCompanyId = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourEveryday_InsertInfo")]
		[return: Parameter(DbType="int")]
		public int ProcTourEverydayInsertInfo(
					[Parameter(Name="@TourId", DbType="char(36)")] string tourId, 
					[Parameter(Name="@CompanyId", DbType="int")] System.Nullable<int> companyId, 
					[Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, 
					[Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, 
					[Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, 
					[Parameter(Name="@TourDays", DbType="int")] System.Nullable<int> tourDays, 
					[Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, 
					[Parameter(Name="@CreateTime", DbType="datetime")] System.Nullable<System.DateTime> createTime, 
					[Parameter(Name="@Attachs", DbType="nvarchar(MAX)")] string attachs, 
					[Parameter(Name="@PriceStandards", DbType="nvarchar(MAX)")] string priceStandards, 
					[Parameter(Name="@QuickPrivate", DbType="nvarchar(MAX)")] string quickPrivate, 
					[Parameter(Name="@NormalPrivate", DbType="nvarchar(MAX)")] string normalPrivate, 
					[Parameter(Name="@NormalService", DbType="nvarchar(MAX)")] string normalService, 
					[Parameter(Name="@NormalPlans", DbType="nvarchar(MAX)")] string normalPlans, 
					[Parameter(Name="@ReleaseType", DbType="tinyint")] System.Nullable<byte> releaseType, 
					[Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourId, companyId, areaId, routeName, routeId, tourDays, operatorId, createTime, attachs, priceStandards, quickPrivate, normalPrivate, normalService, normalPlans, releaseType, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(15)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourEveryday_UpdateInfo")]
		[return: Parameter(DbType="int")]
		public int ProcTourEverydayUpdateInfo([Parameter(Name="@TourId", DbType="char(36)")] string tourId, [Parameter(Name="@AreaId", DbType="int")] System.Nullable<int> areaId, [Parameter(Name="@RouteName", DbType="nvarchar(255)")] string routeName, [Parameter(Name="@RouteId", DbType="int")] System.Nullable<int> routeId, [Parameter(Name="@TourDays", DbType="int")] System.Nullable<int> tourDays, [Parameter(Name="@OperatorId", DbType="int")] System.Nullable<int> operatorId, [Parameter(Name="@UpdateTime", DbType="datetime")] System.Nullable<System.DateTime> updateTime, [Parameter(Name="@Attachs", DbType="nvarchar(MAX)")] string attachs, [Parameter(Name="@PriceStandards", DbType="nvarchar(MAX)")] string priceStandards, [Parameter(Name="@QuickPrivate", DbType="nvarchar(MAX)")] string quickPrivate, [Parameter(Name="@NormalPrivate", DbType="nvarchar(MAX)")] string normalPrivate, [Parameter(Name="@NormalService", DbType="nvarchar(MAX)")] string normalService, [Parameter(Name="@NormalPlans", DbType="nvarchar(MAX)")] string normalPlans, [Parameter(Name="@ReleaseType", DbType="tinyint")] System.Nullable<byte> releaseType, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tourId, areaId, routeName, routeId, tourDays, operatorId, updateTime, attachs, priceStandards, quickPrivate, normalPrivate, normalService, normalPlans, releaseType, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(14)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_TourOrderCustomer_UpdateRefund")]
		[return: Parameter(DbType="int")]
		public int ProcTourOrderCustomerUpdateRefund([Parameter(Name="@Id", DbType="char(36)")] string id, [Parameter(Name="@CustormerId", DbType="char(36)")] string custormerId, [Parameter(Name="@RouteName", DbType="nvarchar(250)")] string routeName, [Parameter(Name="@OperatorName", DbType="nvarchar(250)")] string operatorName, [Parameter(Name="@OperatorID", DbType="int")] System.Nullable<int> operatorID, [Parameter(Name="@FlightTime", DbType="datetime")] System.Nullable<System.DateTime> flightTime, [Parameter(Name="@SendPlace", DbType="nvarchar(250)")] string sendPlace, [Parameter(Name="@EndPlace", DbType="nvarchar(250)")] string endPlace, [Parameter(Name="@CustomerNum", DbType="int")] System.Nullable<int> customerNum, [Parameter(Name="@RefundAmount", DbType="decimal(10,4)")] System.Nullable<decimal> refundAmount, [Parameter(Name="@RefundNote", DbType="nvarchar(1000)")] string refundNote, [Parameter(Name="@OutTourId", DbType="char(36)")] ref string outTourId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, custormerId, routeName, operatorName, operatorID, flightTime, sendPlace, endPlace, customerNum, refundAmount, refundNote, outTourId);
			outTourId = ((string)(result.GetParameterValue(11)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_UpdateSupplierShopping")]
		[return: Parameter(DbType="int")]
		public int ProcUpdateSupplierShopping([Parameter(Name="@supplierId", DbType="int")] System.Nullable<int> supplierId, [Parameter(Name="@companyId", DbType="int")] System.Nullable<int> companyId, [Parameter(Name="@pid", DbType="int")] System.Nullable<int> pid, [Parameter(Name="@cid", DbType="int")] System.Nullable<int> cid, [Parameter(Name="@provinceName", DbType="nvarchar(255)")] string provinceName, [Parameter(Name="@cityName", DbType="nvarchar(255)")] string cityName, [Parameter(Name="@supplierType", DbType="tinyint")] System.Nullable<byte> supplierType, [Parameter(Name="@unitName", DbType="nvarchar(255)")] string unitName, [Parameter(Name="@saleProduct", DbType="nvarchar(255)")] string saleProduct, [Parameter(Name="@agreementFile", DbType="nvarchar(255)")] string agreementFile, [Parameter(Name="@guideWord", DbType="nvarchar(MAX)")] string guideWord, [Parameter(Name="@remark", DbType="nvarchar(MAX)")] string remark, [Parameter(Name="@contactInfo", DbType="nvarchar(MAX)")] string contactInfo, [Parameter(Name="@result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplierId, companyId, pid, cid, provinceName, cityName, supplierType, unitName, saleProduct, agreementFile, guideWord, remark, contactInfo, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(13)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.proc_UserArea_Update")]
		[return: Parameter(DbType="int")]
		public int ProcUserAreaUpdate([Parameter(Name="@Id", DbType="int")] System.Nullable<int> id, [Parameter(Name="@AreaName", DbType="nvarchar(200)")] string areaName, [Parameter(Name="@UserAreaXml", DbType="nvarchar(MAX)")] string userAreaXml, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, areaName, userAreaXml, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateCompanyUserInfo")]
		[return: Parameter(DbType="int")]
		public int UpdateCompanyUserInfo([Parameter(Name="@UserId", DbType="int")] System.Nullable<int> userId, [Parameter(Name="@Tel", DbType="varchar(250)")] string tel, [Parameter(Name="@Mobile", DbType="varchar(250)")] string mobile, [Parameter(Name="@Result", DbType="int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, tel, mobile, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
	}
	
	[Table(Name="dbo.SMS_Account")]
	public partial class SMSAccount : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private decimal _accountMoney;
		
		private System.DateTime _issueTime;
		
		private int _accountSMSNumber;
		
		private string _isPayed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnAccountMoneyChanging(decimal value);
    partial void OnAccountMoneyChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnAccountSMSNumberChanging(int value);
    partial void OnAccountSMSNumberChanged();
    partial void OnIsPayedChanging(string value);
    partial void OnIsPayedChanged();
    #endregion
		
		public SMSAccount()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_accountMoney", DbType="money NOT NULL")]
		public decimal AccountMoney
		{
			get
			{
				return this._accountMoney;
			}
			set
			{
				if ((this._accountMoney != value))
				{
					this.OnAccountMoneyChanging(value);
					this.SendPropertyChanging();
					this._accountMoney = value;
					this.SendPropertyChanged("AccountMoney");
					this.OnAccountMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_accountSMSNumber", DbType="int NOT NULL")]
		public int AccountSMSNumber
		{
			get
			{
				return this._accountSMSNumber;
			}
			set
			{
				if ((this._accountSMSNumber != value))
				{
					this.OnAccountSMSNumberChanging(value);
					this.SendPropertyChanging();
					this._accountSMSNumber = value;
					this.SendPropertyChanged("AccountSMSNumber");
					this.OnAccountSMSNumberChanged();
				}
			}
		}
		
		[Column(Storage="_isPayed", DbType="char(1)")]
		public string IsPayed
		{
			get
			{
				return this._isPayed;
			}
			set
			{
				if ((this._isPayed != value))
				{
					this.OnIsPayedChanging(value);
					this.SendPropertyChanging();
					this._isPayed = value;
					this.SendPropertyChanged("IsPayed");
					this.OnIsPayedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SMS_CommonWordClass")]
	public partial class SMSCommonWordClass : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyID;
		
		private int _userID;
		
		private string _className;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public SMSCommonWordClass()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_className", DbType="nvarchar(50)")]
		public string ClassName
		{
			get
			{
				return this._className;
			}
			set
			{
				if ((this._className != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._className = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SMS_CommonWords")]
	public partial class SMSCommonWords : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private int _userID;
		
		private int _classID;
		
		private string _wordContent;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnWordContentChanging(string value);
    partial void OnWordContentChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public SMSCommonWords()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_classID", DbType="int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[Column(Storage="_wordContent", DbType="nvarchar(300)")]
		public string WordContent
		{
			get
			{
				return this._wordContent;
			}
			set
			{
				if ((this._wordContent != value))
				{
					this.OnWordContentChanging(value);
					this.SendPropertyChanging();
					this._wordContent = value;
					this.SendPropertyChanged("WordContent");
					this.OnWordContentChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SMS_CustomerClass")]
	public partial class SMSCustomerClass : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyID;
		
		private int _userID;
		
		private string _className;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public SMSCustomerClass()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_className", DbType="nvarchar(50)")]
		public string ClassName
		{
			get
			{
				return this._className;
			}
			set
			{
				if ((this._className != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._className = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SMS_CustomerList")]
	public partial class SMSCustomerList : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private int _userID;
		
		private string _customerCompanyName;
		
		private string _customerContactName;
		
		private int _classID;
		
		private string _reMark;
		
		private string _mobileNumber;
		
		private System.DateTime _issueTime;
		
		private int _provinceId;
		
		private int _cityId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCustomerCompanyNameChanging(string value);
    partial void OnCustomerCompanyNameChanged();
    partial void OnCustomerContactNameChanging(string value);
    partial void OnCustomerContactNameChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnReMarkChanging(string value);
    partial void OnReMarkChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnProvinceIdChanging(int value);
    partial void OnProvinceIdChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    #endregion
		
		public SMSCustomerList()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_customerCompanyName", DbType="nvarchar(250)")]
		public string CustomerCompanyName
		{
			get
			{
				return this._customerCompanyName;
			}
			set
			{
				if ((this._customerCompanyName != value))
				{
					this.OnCustomerCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._customerCompanyName = value;
					this.SendPropertyChanged("CustomerCompanyName");
					this.OnCustomerCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_customerContactName", DbType="nvarchar(100)")]
		public string CustomerContactName
		{
			get
			{
				return this._customerContactName;
			}
			set
			{
				if ((this._customerContactName != value))
				{
					this.OnCustomerContactNameChanging(value);
					this.SendPropertyChanging();
					this._customerContactName = value;
					this.SendPropertyChanged("CustomerContactName");
					this.OnCustomerContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_classID", DbType="int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[Column(Storage="_reMark", DbType="nvarchar(300)")]
		public string ReMark
		{
			get
			{
				return this._reMark;
			}
			set
			{
				if ((this._reMark != value))
				{
					this.OnReMarkChanging(value);
					this.SendPropertyChanging();
					this._reMark = value;
					this.SendPropertyChanged("ReMark");
					this.OnReMarkChanged();
				}
			}
		}
		
		[Column(Storage="_mobileNumber", DbType="nvarchar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._mobileNumber;
			}
			set
			{
				if ((this._mobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._mobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_provinceId", DbType="int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._provinceId;
			}
			set
			{
				if ((this._provinceId != value))
				{
					this.OnProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._provinceId = value;
					this.SendPropertyChanged("ProvinceId");
					this.OnProvinceIdChanged();
				}
			}
		}
		
		[Column(Storage="_cityId", DbType="int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._cityId;
			}
			set
			{
				if ((this._cityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._cityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SMS_PayMoney")]
	public partial class SMSPayMoney : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private string _companyName;
		
		private int _operatorID;
		
		private string _operatorName;
		
		private decimal _payMoney;
		
		private System.DateTime _payTime;
		
		private System.DateTime _operatorTime;
		
		private int _isChecked;
		
		private System.Nullable<System.DateTime> _checkTime;
		
		private string _checkUserName;
		
		private string _checkOperatorName;
		
		private string _operatorTel;
		
		private string _operatorMobile;
		
		private string _operatorMQId;
		
		private int _paySMSNumber;
		
		private decimal _useMoney;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnOperatorIDChanging(int value);
    partial void OnOperatorIDChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnPayMoneyChanging(decimal value);
    partial void OnPayMoneyChanged();
    partial void OnPayTimeChanging(System.DateTime value);
    partial void OnPayTimeChanged();
    partial void OnOperatorTimeChanging(System.DateTime value);
    partial void OnOperatorTimeChanged();
    partial void OnIsCheckedChanging(int value);
    partial void OnIsCheckedChanged();
    partial void OnCheckTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckTimeChanged();
    partial void OnCheckUserNameChanging(string value);
    partial void OnCheckUserNameChanged();
    partial void OnCheckOperatorNameChanging(string value);
    partial void OnCheckOperatorNameChanged();
    partial void OnOperatorTelChanging(string value);
    partial void OnOperatorTelChanged();
    partial void OnOperatorMobileChanging(string value);
    partial void OnOperatorMobileChanged();
    partial void OnOperatorMQIdChanging(string value);
    partial void OnOperatorMQIdChanged();
    partial void OnPaySMSNumberChanging(int value);
    partial void OnPaySMSNumberChanged();
    partial void OnUseMoneyChanging(decimal value);
    partial void OnUseMoneyChanged();
    #endregion
		
		public SMSPayMoney()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_companyName", DbType="nvarchar(250)")]
		public string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._operatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(100)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_payMoney", DbType="money NOT NULL")]
		public decimal PayMoney
		{
			get
			{
				return this._payMoney;
			}
			set
			{
				if ((this._payMoney != value))
				{
					this.OnPayMoneyChanging(value);
					this.SendPropertyChanging();
					this._payMoney = value;
					this.SendPropertyChanged("PayMoney");
					this.OnPayMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="datetime NOT NULL")]
		public System.DateTime PayTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnPayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("PayTime");
					this.OnPayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_operatorTime", DbType="datetime NOT NULL")]
		public System.DateTime OperatorTime
		{
			get
			{
				return this._operatorTime;
			}
			set
			{
				if ((this._operatorTime != value))
				{
					this.OnOperatorTimeChanging(value);
					this.SendPropertyChanging();
					this._operatorTime = value;
					this.SendPropertyChanged("OperatorTime");
					this.OnOperatorTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isChecked", DbType="int NOT NULL")]
		public int IsChecked
		{
			get
			{
				return this._isChecked;
			}
			set
			{
				if ((this._isChecked != value))
				{
					this.OnIsCheckedChanging(value);
					this.SendPropertyChanging();
					this._isChecked = value;
					this.SendPropertyChanged("IsChecked");
					this.OnIsCheckedChanged();
				}
			}
		}
		
		[Column(Storage="_checkTime", DbType="datetime")]
		public System.Nullable<System.DateTime> CheckTime
		{
			get
			{
				return this._checkTime;
			}
			set
			{
				if ((this._checkTime != value))
				{
					this.OnCheckTimeChanging(value);
					this.SendPropertyChanging();
					this._checkTime = value;
					this.SendPropertyChanged("CheckTime");
					this.OnCheckTimeChanged();
				}
			}
		}
		
		[Column(Storage="_checkUserName", DbType="nvarchar(100)")]
		public string CheckUserName
		{
			get
			{
				return this._checkUserName;
			}
			set
			{
				if ((this._checkUserName != value))
				{
					this.OnCheckUserNameChanging(value);
					this.SendPropertyChanging();
					this._checkUserName = value;
					this.SendPropertyChanged("CheckUserName");
					this.OnCheckUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_checkOperatorName", DbType="nvarchar(100)")]
		public string CheckOperatorName
		{
			get
			{
				return this._checkOperatorName;
			}
			set
			{
				if ((this._checkOperatorName != value))
				{
					this.OnCheckOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._checkOperatorName = value;
					this.SendPropertyChanged("CheckOperatorName");
					this.OnCheckOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_operatorTel", DbType="nvarchar(100)")]
		public string OperatorTel
		{
			get
			{
				return this._operatorTel;
			}
			set
			{
				if ((this._operatorTel != value))
				{
					this.OnOperatorTelChanging(value);
					this.SendPropertyChanging();
					this._operatorTel = value;
					this.SendPropertyChanged("OperatorTel");
					this.OnOperatorTelChanged();
				}
			}
		}
		
		[Column(Storage="_operatorMobile", DbType="nvarchar(100)")]
		public string OperatorMobile
		{
			get
			{
				return this._operatorMobile;
			}
			set
			{
				if ((this._operatorMobile != value))
				{
					this.OnOperatorMobileChanging(value);
					this.SendPropertyChanging();
					this._operatorMobile = value;
					this.SendPropertyChanged("OperatorMobile");
					this.OnOperatorMobileChanged();
				}
			}
		}
		
		[Column(Storage="_operatorMQId", DbType="varchar(20)")]
		public string OperatorMQId
		{
			get
			{
				return this._operatorMQId;
			}
			set
			{
				if ((this._operatorMQId != value))
				{
					this.OnOperatorMQIdChanging(value);
					this.SendPropertyChanging();
					this._operatorMQId = value;
					this.SendPropertyChanged("OperatorMQId");
					this.OnOperatorMQIdChanged();
				}
			}
		}
		
		[Column(Storage="_paySMSNumber", DbType="int NOT NULL")]
		public int PaySMSNumber
		{
			get
			{
				return this._paySMSNumber;
			}
			set
			{
				if ((this._paySMSNumber != value))
				{
					this.OnPaySMSNumberChanging(value);
					this.SendPropertyChanging();
					this._paySMSNumber = value;
					this.SendPropertyChanged("PaySMSNumber");
					this.OnPaySMSNumberChanged();
				}
			}
		}
		
		[Column(Storage="_useMoney", DbType="money NOT NULL")]
		public decimal UseMoney
		{
			get
			{
				return this._useMoney;
			}
			set
			{
				if ((this._useMoney != value))
				{
					this.OnUseMoneyChanging(value);
					this.SendPropertyChanging();
					this._useMoney = value;
					this.SendPropertyChanged("UseMoney");
					this.OnUseMoneyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SMS_SendDetail")]
	public partial class SMSSendDetail : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private int _userID;
		
		private string _sendTotalID;
		
		private int _sMSType;
		
		private string _mobileNumber;
		
		private string _sMSContent;
		
		private System.DateTime _sendTime;
		
		private int _returnResult;
		
		private string _returnMsg;
		
		private decimal _useMoeny;
		
		private int _sMSSplitCount;
		
		private System.DateTime _issueTime;
		
		private string _isEncrypt;
		
		private EntityRef<SMSSendTotal> _sendTotalSMSSendTotal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSendTotalIDChanging(string value);
    partial void OnSendTotalIDChanged();
    partial void OnSMSTypeChanging(int value);
    partial void OnSMSTypeChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnSMSContentChanging(string value);
    partial void OnSMSContentChanged();
    partial void OnSendTimeChanging(System.DateTime value);
    partial void OnSendTimeChanged();
    partial void OnReturnResultChanging(int value);
    partial void OnReturnResultChanged();
    partial void OnReturnMsgChanging(string value);
    partial void OnReturnMsgChanged();
    partial void OnUseMoenyChanging(decimal value);
    partial void OnUseMoenyChanged();
    partial void OnSMSSplitCountChanging(int value);
    partial void OnSMSSplitCountChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnIsEncryptChanging(string value);
    partial void OnIsEncryptChanged();
    #endregion
		
		public SMSSendDetail()
		{
			this._sendTotalSMSSendTotal = default(EntityRef<SMSSendTotal>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_sendTotalID", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string SendTotalID
		{
			get
			{
				return this._sendTotalID;
			}
			set
			{
				if ((this._sendTotalID != value))
				{
					if (this._sendTotalSMSSendTotal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSendTotalIDChanging(value);
					this.SendPropertyChanging();
					this._sendTotalID = value;
					this.SendPropertyChanged("SendTotalID");
					this.OnSendTotalIDChanged();
				}
			}
		}
		
		[Column(Storage="_sMSType", DbType="int NOT NULL")]
		public int SMSType
		{
			get
			{
				return this._sMSType;
			}
			set
			{
				if ((this._sMSType != value))
				{
					this.OnSMSTypeChanging(value);
					this.SendPropertyChanging();
					this._sMSType = value;
					this.SendPropertyChanged("SMSType");
					this.OnSMSTypeChanged();
				}
			}
		}
		
		[Column(Storage="_mobileNumber", DbType="nvarchar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._mobileNumber;
			}
			set
			{
				if ((this._mobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._mobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[Column(Storage="_sMSContent", DbType="nvarchar(2000)")]
		public string SMSContent
		{
			get
			{
				return this._sMSContent;
			}
			set
			{
				if ((this._sMSContent != value))
				{
					this.OnSMSContentChanging(value);
					this.SendPropertyChanging();
					this._sMSContent = value;
					this.SendPropertyChanged("SMSContent");
					this.OnSMSContentChanged();
				}
			}
		}
		
		[Column(Storage="_sendTime", DbType="datetime NOT NULL")]
		public System.DateTime SendTime
		{
			get
			{
				return this._sendTime;
			}
			set
			{
				if ((this._sendTime != value))
				{
					this.OnSendTimeChanging(value);
					this.SendPropertyChanging();
					this._sendTime = value;
					this.SendPropertyChanged("SendTime");
					this.OnSendTimeChanged();
				}
			}
		}
		
		[Column(Storage="_returnResult", DbType="int NOT NULL")]
		public int ReturnResult
		{
			get
			{
				return this._returnResult;
			}
			set
			{
				if ((this._returnResult != value))
				{
					this.OnReturnResultChanging(value);
					this.SendPropertyChanging();
					this._returnResult = value;
					this.SendPropertyChanged("ReturnResult");
					this.OnReturnResultChanged();
				}
			}
		}
		
		[Column(Storage="_returnMsg", DbType="nvarchar(300)")]
		public string ReturnMsg
		{
			get
			{
				return this._returnMsg;
			}
			set
			{
				if ((this._returnMsg != value))
				{
					this.OnReturnMsgChanging(value);
					this.SendPropertyChanging();
					this._returnMsg = value;
					this.SendPropertyChanged("ReturnMsg");
					this.OnReturnMsgChanged();
				}
			}
		}
		
		[Column(Storage="_useMoeny", DbType="money NOT NULL")]
		public decimal UseMoeny
		{
			get
			{
				return this._useMoeny;
			}
			set
			{
				if ((this._useMoeny != value))
				{
					this.OnUseMoenyChanging(value);
					this.SendPropertyChanging();
					this._useMoeny = value;
					this.SendPropertyChanged("UseMoeny");
					this.OnUseMoenyChanged();
				}
			}
		}
		
		[Column(Storage="_sMSSplitCount", DbType="int NOT NULL")]
		public int SMSSplitCount
		{
			get
			{
				return this._sMSSplitCount;
			}
			set
			{
				if ((this._sMSSplitCount != value))
				{
					this.OnSMSSplitCountChanging(value);
					this.SendPropertyChanging();
					this._sMSSplitCount = value;
					this.SendPropertyChanged("SMSSplitCount");
					this.OnSMSSplitCountChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isEncrypt", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsEncrypt
		{
			get
			{
				return this._isEncrypt;
			}
			set
			{
				if ((this._isEncrypt != value))
				{
					this.OnIsEncryptChanging(value);
					this.SendPropertyChanging();
					this._isEncrypt = value;
					this.SendPropertyChanged("IsEncrypt");
					this.OnIsEncryptChanged();
				}
			}
		}
		
		[Association(Name="SMSSendTotal_SMSSendDetail", Storage="_sendTotalSMSSendTotal", ThisKey="SendTotalID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SMSSendTotal SendTotalSMSSendTotal
		{
			get
			{
				return this._sendTotalSMSSendTotal.Entity;
			}
			set
			{
				SMSSendTotal previousValue = this._sendTotalSMSSendTotal.Entity;
				if (((previousValue != value) 
							|| (this._sendTotalSMSSendTotal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sendTotalSMSSendTotal.Entity = null;
						previousValue.SendTotalSMSSendDetailList.Remove(this);
					}
					this._sendTotalSMSSendTotal.Entity = value;
					if ((value != null))
					{
						value.SendTotalSMSSendDetailList.Add(this);
						this._sendTotalID = value.Id;
					}
					else
					{
						this._sendTotalID = default(string);
					}
					this.SendPropertyChanged("SendTotalSMSSendTotal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SMS_SendPlan")]
	public partial class SMSSendPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private string _companyName;
		
		private int _userID;
		
		private string _contactName;
		
		private int _sMSType;
		
		private string _sMSContent;
		
		private string _mobileList;
		
		private System.DateTime _issueTime;
		
		private System.DateTime _sendTime;
		
		private int _sendChannel;
		
		private string _sendState;
		
		private string _stateText;
		
		private System.Nullable<System.DateTime> _realSendTime;
		
		private string _encryptMobiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnSMSTypeChanging(int value);
    partial void OnSMSTypeChanged();
    partial void OnSMSContentChanging(string value);
    partial void OnSMSContentChanged();
    partial void OnMobileListChanging(string value);
    partial void OnMobileListChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnSendTimeChanging(System.DateTime value);
    partial void OnSendTimeChanged();
    partial void OnSendChannelChanging(int value);
    partial void OnSendChannelChanged();
    partial void OnSendStateChanging(string value);
    partial void OnSendStateChanged();
    partial void OnStateTextChanging(string value);
    partial void OnStateTextChanged();
    partial void OnRealSendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRealSendTimeChanged();
    partial void OnEncryptMobilesChanging(string value);
    partial void OnEncryptMobilesChanged();
    #endregion
		
		public SMSSendPlan()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_companyName", DbType="nvarchar(250)")]
		public string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_sMSType", DbType="int NOT NULL")]
		public int SMSType
		{
			get
			{
				return this._sMSType;
			}
			set
			{
				if ((this._sMSType != value))
				{
					this.OnSMSTypeChanging(value);
					this.SendPropertyChanging();
					this._sMSType = value;
					this.SendPropertyChanged("SMSType");
					this.OnSMSTypeChanged();
				}
			}
		}
		
		[Column(Storage="_sMSContent", DbType="nvarchar(2000)")]
		public string SMSContent
		{
			get
			{
				return this._sMSContent;
			}
			set
			{
				if ((this._sMSContent != value))
				{
					this.OnSMSContentChanging(value);
					this.SendPropertyChanging();
					this._sMSContent = value;
					this.SendPropertyChanged("SMSContent");
					this.OnSMSContentChanged();
				}
			}
		}
		
		[Column(Storage="_mobileList", DbType="varchar(MAX)")]
		public string MobileList
		{
			get
			{
				return this._mobileList;
			}
			set
			{
				if ((this._mobileList != value))
				{
					this.OnMobileListChanging(value);
					this.SendPropertyChanging();
					this._mobileList = value;
					this.SendPropertyChanged("MobileList");
					this.OnMobileListChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_sendTime", DbType="datetime NOT NULL")]
		public System.DateTime SendTime
		{
			get
			{
				return this._sendTime;
			}
			set
			{
				if ((this._sendTime != value))
				{
					this.OnSendTimeChanging(value);
					this.SendPropertyChanging();
					this._sendTime = value;
					this.SendPropertyChanged("SendTime");
					this.OnSendTimeChanged();
				}
			}
		}
		
		[Column(Storage="_sendChannel", DbType="int NOT NULL")]
		public int SendChannel
		{
			get
			{
				return this._sendChannel;
			}
			set
			{
				if ((this._sendChannel != value))
				{
					this.OnSendChannelChanging(value);
					this.SendPropertyChanging();
					this._sendChannel = value;
					this.SendPropertyChanged("SendChannel");
					this.OnSendChannelChanged();
				}
			}
		}
		
		[Column(Storage="_sendState", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string SendState
		{
			get
			{
				return this._sendState;
			}
			set
			{
				if ((this._sendState != value))
				{
					this.OnSendStateChanging(value);
					this.SendPropertyChanging();
					this._sendState = value;
					this.SendPropertyChanged("SendState");
					this.OnSendStateChanged();
				}
			}
		}
		
		[Column(Storage="_stateText", DbType="nvarchar(500)")]
		public string StateText
		{
			get
			{
				return this._stateText;
			}
			set
			{
				if ((this._stateText != value))
				{
					this.OnStateTextChanging(value);
					this.SendPropertyChanging();
					this._stateText = value;
					this.SendPropertyChanged("StateText");
					this.OnStateTextChanged();
				}
			}
		}
		
		[Column(Storage="_realSendTime", DbType="datetime")]
		public System.Nullable<System.DateTime> RealSendTime
		{
			get
			{
				return this._realSendTime;
			}
			set
			{
				if ((this._realSendTime != value))
				{
					this.OnRealSendTimeChanging(value);
					this.SendPropertyChanging();
					this._realSendTime = value;
					this.SendPropertyChanged("RealSendTime");
					this.OnRealSendTimeChanged();
				}
			}
		}
		
		[Column(Storage="_encryptMobiles", DbType="varchar(MAX)")]
		public string EncryptMobiles
		{
			get
			{
				return this._encryptMobiles;
			}
			set
			{
				if ((this._encryptMobiles != value))
				{
					this.OnEncryptMobilesChanging(value);
					this.SendPropertyChanging();
					this._encryptMobiles = value;
					this.SendPropertyChanged("EncryptMobiles");
					this.OnEncryptMobilesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SMS_SendTotal")]
	public partial class SMSSendTotal : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private string _companyName;
		
		private int _userID;
		
		private string _contactName;
		
		private int _sMSType;
		
		private string _sMSContent;
		
		private System.DateTime _issueTime;
		
		private decimal _useMoeny;
		
		private int _successCount;
		
		private int _errorCount;
		
		private int _successSplitCount;
		
		private int _errorSplitCount;
		
		private decimal _sMSUnitPrice;
		
		private int _sendChannel;
		
		private EntitySet<SMSSendDetail> _sendTotalSMSSendDetailList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnSMSTypeChanging(int value);
    partial void OnSMSTypeChanged();
    partial void OnSMSContentChanging(string value);
    partial void OnSMSContentChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnUseMoenyChanging(decimal value);
    partial void OnUseMoenyChanged();
    partial void OnSuccessCountChanging(int value);
    partial void OnSuccessCountChanged();
    partial void OnErrorCountChanging(int value);
    partial void OnErrorCountChanged();
    partial void OnSuccessSplitCountChanging(int value);
    partial void OnSuccessSplitCountChanged();
    partial void OnErrorSplitCountChanging(int value);
    partial void OnErrorSplitCountChanged();
    partial void OnSMSUnitPriceChanging(decimal value);
    partial void OnSMSUnitPriceChanged();
    partial void OnSendChannelChanging(int value);
    partial void OnSendChannelChanged();
    #endregion
		
		public SMSSendTotal()
		{
			this._sendTotalSMSSendDetailList = new EntitySet<SMSSendDetail>(new Action<SMSSendDetail>(this.attach_sendTotalSMSSendDetailList), new Action<SMSSendDetail>(this.detach_sendTotalSMSSendDetailList));
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_companyName", DbType="nvarchar(250)")]
		public string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_sMSType", DbType="int NOT NULL")]
		public int SMSType
		{
			get
			{
				return this._sMSType;
			}
			set
			{
				if ((this._sMSType != value))
				{
					this.OnSMSTypeChanging(value);
					this.SendPropertyChanging();
					this._sMSType = value;
					this.SendPropertyChanged("SMSType");
					this.OnSMSTypeChanged();
				}
			}
		}
		
		[Column(Storage="_sMSContent", DbType="nvarchar(2000)")]
		public string SMSContent
		{
			get
			{
				return this._sMSContent;
			}
			set
			{
				if ((this._sMSContent != value))
				{
					this.OnSMSContentChanging(value);
					this.SendPropertyChanging();
					this._sMSContent = value;
					this.SendPropertyChanged("SMSContent");
					this.OnSMSContentChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_useMoeny", DbType="money NOT NULL")]
		public decimal UseMoeny
		{
			get
			{
				return this._useMoeny;
			}
			set
			{
				if ((this._useMoeny != value))
				{
					this.OnUseMoenyChanging(value);
					this.SendPropertyChanging();
					this._useMoeny = value;
					this.SendPropertyChanged("UseMoeny");
					this.OnUseMoenyChanged();
				}
			}
		}
		
		[Column(Storage="_successCount", DbType="int NOT NULL")]
		public int SuccessCount
		{
			get
			{
				return this._successCount;
			}
			set
			{
				if ((this._successCount != value))
				{
					this.OnSuccessCountChanging(value);
					this.SendPropertyChanging();
					this._successCount = value;
					this.SendPropertyChanged("SuccessCount");
					this.OnSuccessCountChanged();
				}
			}
		}
		
		[Column(Storage="_errorCount", DbType="int NOT NULL")]
		public int ErrorCount
		{
			get
			{
				return this._errorCount;
			}
			set
			{
				if ((this._errorCount != value))
				{
					this.OnErrorCountChanging(value);
					this.SendPropertyChanging();
					this._errorCount = value;
					this.SendPropertyChanged("ErrorCount");
					this.OnErrorCountChanged();
				}
			}
		}
		
		[Column(Storage="_successSplitCount", DbType="int NOT NULL")]
		public int SuccessSplitCount
		{
			get
			{
				return this._successSplitCount;
			}
			set
			{
				if ((this._successSplitCount != value))
				{
					this.OnSuccessSplitCountChanging(value);
					this.SendPropertyChanging();
					this._successSplitCount = value;
					this.SendPropertyChanged("SuccessSplitCount");
					this.OnSuccessSplitCountChanged();
				}
			}
		}
		
		[Column(Storage="_errorSplitCount", DbType="int NOT NULL")]
		public int ErrorSplitCount
		{
			get
			{
				return this._errorSplitCount;
			}
			set
			{
				if ((this._errorSplitCount != value))
				{
					this.OnErrorSplitCountChanging(value);
					this.SendPropertyChanging();
					this._errorSplitCount = value;
					this.SendPropertyChanged("ErrorSplitCount");
					this.OnErrorSplitCountChanged();
				}
			}
		}
		
		[Column(Storage="_sMSUnitPrice", DbType="money NOT NULL")]
		public decimal SMSUnitPrice
		{
			get
			{
				return this._sMSUnitPrice;
			}
			set
			{
				if ((this._sMSUnitPrice != value))
				{
					this.OnSMSUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._sMSUnitPrice = value;
					this.SendPropertyChanged("SMSUnitPrice");
					this.OnSMSUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_sendChannel", DbType="int NOT NULL")]
		public int SendChannel
		{
			get
			{
				return this._sendChannel;
			}
			set
			{
				if ((this._sendChannel != value))
				{
					this.OnSendChannelChanging(value);
					this.SendPropertyChanging();
					this._sendChannel = value;
					this.SendPropertyChanged("SendChannel");
					this.OnSendChannelChanged();
				}
			}
		}
		
		[Association(Name="SMSSendTotal_SMSSendDetail", Storage="_sendTotalSMSSendDetailList", ThisKey="Id", OtherKey="SendTotalID")]
		public EntitySet<SMSSendDetail> SendTotalSMSSendDetailList
		{
			get
			{
				return this._sendTotalSMSSendDetailList;
			}
			set
			{
				this._sendTotalSMSSendDetailList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sendTotalSMSSendDetailList(SMSSendDetail entity)
		{
			this.SendPropertyChanging();
			entity.SendTotalSMSSendTotal = this;
		}
		
		private void detach_sendTotalSMSSendDetailList(SMSSendDetail entity)
		{
			this.SendPropertyChanging();
			entity.SendTotalSMSSendTotal = null;
		}
	}
	
	[Table(Name="dbo.SMS_TempFeeTake")]
	public partial class SMSTempFeeTake : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private int _userID;
		
		private string _sendTotalID;
		
		private decimal _takeMoeny;
		
		private System.DateTime _issueTime;
		
		private int _takeSMSNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSendTotalIDChanging(string value);
    partial void OnSendTotalIDChanged();
    partial void OnTakeMoenyChanging(decimal value);
    partial void OnTakeMoenyChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnTakeSMSNumberChanging(int value);
    partial void OnTakeSMSNumberChanged();
    #endregion
		
		public SMSTempFeeTake()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_sendTotalID", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string SendTotalID
		{
			get
			{
				return this._sendTotalID;
			}
			set
			{
				if ((this._sendTotalID != value))
				{
					this.OnSendTotalIDChanging(value);
					this.SendPropertyChanging();
					this._sendTotalID = value;
					this.SendPropertyChanged("SendTotalID");
					this.OnSendTotalIDChanged();
				}
			}
		}
		
		[Column(Storage="_takeMoeny", DbType="money NOT NULL")]
		public decimal TakeMoeny
		{
			get
			{
				return this._takeMoeny;
			}
			set
			{
				if ((this._takeMoeny != value))
				{
					this.OnTakeMoenyChanging(value);
					this.SendPropertyChanging();
					this._takeMoeny = value;
					this.SendPropertyChanged("TakeMoeny");
					this.OnTakeMoenyChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_takeSMSNumber", DbType="int NOT NULL")]
		public int TakeSMSNumber
		{
			get
			{
				return this._takeSMSNumber;
			}
			set
			{
				if ((this._takeSMSNumber != value))
				{
					this.OnTakeSMSNumberChanging(value);
					this.SendPropertyChanging();
					this._takeSMSNumber = value;
					this.SendPropertyChanged("TakeSMSNumber");
					this.OnTakeSMSNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Area")]
	public partial class Area : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _areaName;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _isDelete;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAreaNameChanging(string value);
    partial void OnAreaNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public Area()
		{
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_areaName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._areaName;
			}
			set
			{
				if ((this._areaName != value))
				{
					this.OnAreaNameChanging(value);
					this.SendPropertyChanging();
					this._areaName = value;
					this.SendPropertyChanged("AreaName");
					this.OnAreaNameChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_Area", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyAreaList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyAreaList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_AttendanceInfo")]
	public partial class AttendanceInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyId;
		
		private System.Nullable<int> _staffNo;
		
		private int _operatorId;
		
		private System.Nullable<int> _workStatus;
		
		private System.DateTime _addDate;
		
		private string _reason;
		
		private System.Nullable<System.DateTime> _beginDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private decimal _outTime;
		
		private System.DateTime _issueTime;
		
		private EntityRef<PersonnelInfo> _staffNoPersonnelInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnStaffNoChanging(System.Nullable<int> value);
    partial void OnStaffNoChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnWorkStatusChanging(System.Nullable<int> value);
    partial void OnWorkStatusChanged();
    partial void OnAddDateChanging(System.DateTime value);
    partial void OnAddDateChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnBeginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnOutTimeChanging(decimal value);
    partial void OnOutTimeChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public AttendanceInfo()
		{
			this._staffNoPersonnelInfo = default(EntityRef<PersonnelInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_staffNo", DbType="int")]
		public System.Nullable<int> StaffNo
		{
			get
			{
				return this._staffNo;
			}
			set
			{
				if ((this._staffNo != value))
				{
					if (this._staffNoPersonnelInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffNoChanging(value);
					this.SendPropertyChanging();
					this._staffNo = value;
					this.SendPropertyChanged("StaffNo");
					this.OnStaffNoChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_workStatus", DbType="int")]
		public System.Nullable<int> WorkStatus
		{
			get
			{
				return this._workStatus;
			}
			set
			{
				if ((this._workStatus != value))
				{
					this.OnWorkStatusChanging(value);
					this.SendPropertyChanging();
					this._workStatus = value;
					this.SendPropertyChanged("WorkStatus");
					this.OnWorkStatusChanged();
				}
			}
		}
		
		[Column(Storage="_addDate", DbType="datetime NOT NULL")]
		public System.DateTime AddDate
		{
			get
			{
				return this._addDate;
			}
			set
			{
				if ((this._addDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._addDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[Column(Storage="_reason", DbType="nvarchar(1000)")]
		public string Reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[Column(Storage="_beginDate", DbType="datetime")]
		public System.Nullable<System.DateTime> BeginDate
		{
			get
			{
				return this._beginDate;
			}
			set
			{
				if ((this._beginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._beginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[Column(Storage="_endDate", DbType="datetime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_outTime", DbType="decimal(10,4) NOT NULL")]
		public decimal OutTime
		{
			get
			{
				return this._outTime;
			}
			set
			{
				if ((this._outTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._outTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Association(Name="PersonnelInfo_AttendanceInfo", Storage="_staffNoPersonnelInfo", ThisKey="StaffNo", OtherKey="Id", IsForeignKey=true)]
		public PersonnelInfo StaffNoPersonnelInfo
		{
			get
			{
				return this._staffNoPersonnelInfo.Entity;
			}
			set
			{
				PersonnelInfo previousValue = this._staffNoPersonnelInfo.Entity;
				if (((previousValue != value) 
							|| (this._staffNoPersonnelInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._staffNoPersonnelInfo.Entity = null;
						previousValue.StaffNoAttendanceInfoList.Remove(this);
					}
					this._staffNoPersonnelInfo.Entity = value;
					if ((value != null))
					{
						value.StaffNoAttendanceInfoList.Add(this);
						this._staffNo = value.Id;
					}
					else
					{
						this._staffNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffNoPersonnelInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CashierRegister")]
	public partial class CashierRegister : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _paymentTime;
		
		private decimal _paymentCount;
		
		private string _paymentBank;
		
		private string _customer;
		
		private int _customerID;
		
		private string _contacter;
		
		private string _contactTel;
		
		private string _remark;
		
		private int _companyID;
		
		private System.DateTime _registerTime;
		
		private int _operatorId;
		
		private decimal _totalAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPaymentTimeChanging(System.DateTime value);
    partial void OnPaymentTimeChanged();
    partial void OnPaymentCountChanging(decimal value);
    partial void OnPaymentCountChanged();
    partial void OnPaymentBankChanging(string value);
    partial void OnPaymentBankChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnContacterChanging(string value);
    partial void OnContacterChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnRegisterTimeChanging(System.DateTime value);
    partial void OnRegisterTimeChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    #endregion
		
		public CashierRegister()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_paymentTime", DbType="datetime NOT NULL")]
		public System.DateTime PaymentTime
		{
			get
			{
				return this._paymentTime;
			}
			set
			{
				if ((this._paymentTime != value))
				{
					this.OnPaymentTimeChanging(value);
					this.SendPropertyChanging();
					this._paymentTime = value;
					this.SendPropertyChanged("PaymentTime");
					this.OnPaymentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_paymentCount", DbType="money NOT NULL")]
		public decimal PaymentCount
		{
			get
			{
				return this._paymentCount;
			}
			set
			{
				if ((this._paymentCount != value))
				{
					this.OnPaymentCountChanging(value);
					this.SendPropertyChanging();
					this._paymentCount = value;
					this.SendPropertyChanged("PaymentCount");
					this.OnPaymentCountChanged();
				}
			}
		}
		
		[Column(Storage="_paymentBank", DbType="nvarchar(50)")]
		public string PaymentBank
		{
			get
			{
				return this._paymentBank;
			}
			set
			{
				if ((this._paymentBank != value))
				{
					this.OnPaymentBankChanging(value);
					this.SendPropertyChanging();
					this._paymentBank = value;
					this.SendPropertyChanged("PaymentBank");
					this.OnPaymentBankChanged();
				}
			}
		}
		
		[Column(Storage="_customer", DbType="nvarchar(50)")]
		public string Customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_customerID", DbType="int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[Column(Storage="_contacter", DbType="nvarchar(50)")]
		public string Contacter
		{
			get
			{
				return this._contacter;
			}
			set
			{
				if ((this._contacter != value))
				{
					this.OnContacterChanging(value);
					this.SendPropertyChanging();
					this._contacter = value;
					this.SendPropertyChanged("Contacter");
					this.OnContacterChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(50)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(250)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_registerTime", DbType="datetime NOT NULL")]
		public System.DateTime RegisterTime
		{
			get
			{
				return this._registerTime;
			}
			set
			{
				if ((this._registerTime != value))
				{
					this.OnRegisterTimeChanging(value);
					this.SendPropertyChanging();
					this._registerTime = value;
					this.SendPropertyChanged("RegisterTime");
					this.OnRegisterTimeChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyAccount")]
	public partial class CompanyAccount : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _accountName;
		
		private string _bankName;
		
		private string _bankNo;
		
		private int _companyId;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankNoChanging(string value);
    partial void OnBankNoChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public CompanyAccount()
		{
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_accountName", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._accountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[Column(Storage="_bankName", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._bankName;
			}
			set
			{
				if ((this._bankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._bankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[Column(Storage="_bankNo", DbType="varchar(100) NOT NULL", CanBeNull=false)]
		public string BankNo
		{
			get
			{
				return this._bankNo;
			}
			set
			{
				if ((this._bankNo != value))
				{
					this.OnBankNoChanging(value);
					this.SendPropertyChanging();
					this._bankNo = value;
					this.SendPropertyChanged("BankNo");
					this.OnBankNoChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_CompanyAccount", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyCompanyAccountList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyCompanyAccountList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyBrands")]
	public partial class CompanyBrands : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _brandName;
		
		private string _logo1;
		
		private string _logo2;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private int _companyId;
		
		private string _isDelete;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnLogo1Changing(string value);
    partial void OnLogo1Changed();
    partial void OnLogo2Changing(string value);
    partial void OnLogo2Changed();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public CompanyBrands()
		{
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_brandName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._brandName;
			}
			set
			{
				if ((this._brandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._brandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_logo1", DbType="nvarchar(255)")]
		public string Logo1
		{
			get
			{
				return this._logo1;
			}
			set
			{
				if ((this._logo1 != value))
				{
					this.OnLogo1Changing(value);
					this.SendPropertyChanging();
					this._logo1 = value;
					this.SendPropertyChanged("Logo1");
					this.OnLogo1Changed();
				}
			}
		}
		
		[Column(Storage="_logo2", DbType="nvarchar(255)")]
		public string Logo2
		{
			get
			{
				return this._logo2;
			}
			set
			{
				if ((this._logo2 != value))
				{
					this.OnLogo2Changing(value);
					this.SendPropertyChanging();
					this._logo2 = value;
					this.SendPropertyChanged("Logo2");
					this.OnLogo2Changed();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_CompanyBrands", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyCompanyBrandsList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyCompanyBrandsList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyCash")]
	public partial class CompanyCash : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private System.Nullable<decimal> _cashReserve;
		
		private System.Nullable<decimal> _cashIn;
		
		private System.Nullable<decimal> _cashOut;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCashReserveChanging(System.Nullable<decimal> value);
    partial void OnCashReserveChanged();
    partial void OnCashInChanging(System.Nullable<decimal> value);
    partial void OnCashInChanged();
    partial void OnCashOutChanging(System.Nullable<decimal> value);
    partial void OnCashOutChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public CompanyCash()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_cashReserve", DbType="money")]
		public System.Nullable<decimal> CashReserve
		{
			get
			{
				return this._cashReserve;
			}
			set
			{
				if ((this._cashReserve != value))
				{
					this.OnCashReserveChanging(value);
					this.SendPropertyChanging();
					this._cashReserve = value;
					this.SendPropertyChanged("CashReserve");
					this.OnCashReserveChanged();
				}
			}
		}
		
		[Column(Storage="_cashIn", DbType="money")]
		public System.Nullable<decimal> CashIn
		{
			get
			{
				return this._cashIn;
			}
			set
			{
				if ((this._cashIn != value))
				{
					this.OnCashInChanging(value);
					this.SendPropertyChanging();
					this._cashIn = value;
					this.SendPropertyChanged("CashIn");
					this.OnCashInChanged();
				}
			}
		}
		
		[Column(Storage="_cashOut", DbType="money")]
		public System.Nullable<decimal> CashOut
		{
			get
			{
				return this._cashOut;
			}
			set
			{
				if ((this._cashOut != value))
				{
					this.OnCashOutChanging(value);
					this.SendPropertyChanging();
					this._cashOut = value;
					this.SendPropertyChanged("CashOut");
					this.OnCashOutChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyCashFlow")]
	public partial class CompanyCashFlow : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private System.Nullable<decimal> _cashReserve;
		
		private System.Nullable<int> _operatorId;
		
		private System.DateTime _issueTime;
		
		private byte _cashType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCashReserveChanging(System.Nullable<decimal> value);
    partial void OnCashReserveChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnCashTypeChanging(byte value);
    partial void OnCashTypeChanged();
    #endregion
		
		public CompanyCashFlow()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_cashReserve", DbType="money")]
		public System.Nullable<decimal> CashReserve
		{
			get
			{
				return this._cashReserve;
			}
			set
			{
				if ((this._cashReserve != value))
				{
					this.OnCashReserveChanging(value);
					this.SendPropertyChanging();
					this._cashReserve = value;
					this.SendPropertyChanged("CashReserve");
					this.OnCashReserveChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_cashType", DbType="tinyint NOT NULL")]
		public byte CashType
		{
			get
			{
				return this._cashType;
			}
			set
			{
				if ((this._cashType != value))
				{
					this.OnCashTypeChanging(value);
					this.SendPropertyChanging();
					this._cashType = value;
					this.SendPropertyChanged("CashType");
					this.OnCashTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyCity")]
	public partial class CompanyCity : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _provinceId;
		
		private string _cityName;
		
		private int _companyId;
		
		private string _isFav;
		
		private int _operatorId;
		
		private System.Nullable<System.DateTime> _issueTime;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
		private EntityRef<CompanyProvince> _provinceCompanyProvince;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProvinceIdChanging(int value);
    partial void OnProvinceIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnIsFavChanging(string value);
    partial void OnIsFavChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public CompanyCity()
		{
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			this._provinceCompanyProvince = default(EntityRef<CompanyProvince>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_provinceId", DbType="int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._provinceId;
			}
			set
			{
				if ((this._provinceId != value))
				{
					if (this._provinceCompanyProvince.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._provinceId = value;
					this.SendPropertyChanged("ProvinceId");
					this.OnProvinceIdChanged();
				}
			}
		}
		
		[Column(Storage="_cityName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._cityName;
			}
			set
			{
				if ((this._cityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._cityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_isFav", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsFav
		{
			get
			{
				return this._isFav;
			}
			set
			{
				if ((this._isFav != value))
				{
					this.OnIsFavChanging(value);
					this.SendPropertyChanging();
					this._isFav = value;
					this.SendPropertyChanged("IsFav");
					this.OnIsFavChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime")]
		public System.Nullable<System.DateTime> IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_CompanyCity", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyCompanyCityList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyCompanyCityList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		[Association(Name="CompanyProvince_CompanyCity", Storage="_provinceCompanyProvince", ThisKey="ProvinceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyProvince ProvinceCompanyProvince
		{
			get
			{
				return this._provinceCompanyProvince.Entity;
			}
			set
			{
				CompanyProvince previousValue = this._provinceCompanyProvince.Entity;
				if (((previousValue != value) 
							|| (this._provinceCompanyProvince.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._provinceCompanyProvince.Entity = null;
						previousValue.ProvinceCompanyCityList.Remove(this);
					}
					this._provinceCompanyProvince.Entity = value;
					if ((value != null))
					{
						value.ProvinceCompanyCityList.Add(this);
						this._provinceId = value.Id;
					}
					else
					{
						this._provinceId = default(int);
					}
					this.SendPropertyChanged("ProvinceCompanyProvince");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyCustomStand")]
	public partial class CompanyCustomStand : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _customStandName;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _isSystem;
		
		private string _isDelete;
		
		private byte _levType;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomStandNameChanging(string value);
    partial void OnCustomStandNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnIsSystemChanging(string value);
    partial void OnIsSystemChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnLevTypeChanging(byte value);
    partial void OnLevTypeChanged();
    #endregion
		
		public CompanyCustomStand()
		{
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_customStandName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string CustomStandName
		{
			get
			{
				return this._customStandName;
			}
			set
			{
				if ((this._customStandName != value))
				{
					this.OnCustomStandNameChanging(value);
					this.SendPropertyChanging();
					this._customStandName = value;
					this.SendPropertyChanged("CustomStandName");
					this.OnCustomStandNameChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isSystem", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsSystem
		{
			get
			{
				return this._isSystem;
			}
			set
			{
				if ((this._isSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._isSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_levType", DbType="tinyint NOT NULL")]
		public byte LevType
		{
			get
			{
				return this._levType;
			}
			set
			{
				if ((this._levType != value))
				{
					this.OnLevTypeChanging(value);
					this.SendPropertyChanging();
					this._levType = value;
					this.SendPropertyChanged("LevType");
					this.OnLevTypeChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_CompanyCustomStand", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyCompanyCustomStandList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyCompanyCustomStandList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyDepartment")]
	public partial class CompanyDepartment : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _departName;
		
		private int _prevDepartId;
		
		private int _departManger;
		
		private string _contactTel;
		
		private string _contactFax;
		
		private string _pageHeadFile;
		
		private string _pageFootFile;
		
		private string _templateFile;
		
		private string _departStamp;
		
		private string _remark;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _isDelete;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDepartNameChanging(string value);
    partial void OnDepartNameChanged();
    partial void OnPrevDepartIdChanging(int value);
    partial void OnPrevDepartIdChanged();
    partial void OnDepartMangerChanging(int value);
    partial void OnDepartMangerChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnPageHeadFileChanging(string value);
    partial void OnPageHeadFileChanged();
    partial void OnPageFootFileChanging(string value);
    partial void OnPageFootFileChanged();
    partial void OnTemplateFileChanging(string value);
    partial void OnTemplateFileChanged();
    partial void OnDepartStampChanging(string value);
    partial void OnDepartStampChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public CompanyDepartment()
		{
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_departName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string DepartName
		{
			get
			{
				return this._departName;
			}
			set
			{
				if ((this._departName != value))
				{
					this.OnDepartNameChanging(value);
					this.SendPropertyChanging();
					this._departName = value;
					this.SendPropertyChanged("DepartName");
					this.OnDepartNameChanged();
				}
			}
		}
		
		[Column(Storage="_prevDepartId", DbType="int NOT NULL")]
		public int PrevDepartId
		{
			get
			{
				return this._prevDepartId;
			}
			set
			{
				if ((this._prevDepartId != value))
				{
					this.OnPrevDepartIdChanging(value);
					this.SendPropertyChanging();
					this._prevDepartId = value;
					this.SendPropertyChanged("PrevDepartId");
					this.OnPrevDepartIdChanged();
				}
			}
		}
		
		[Column(Storage="_departManger", DbType="int NOT NULL")]
		public int DepartManger
		{
			get
			{
				return this._departManger;
			}
			set
			{
				if ((this._departManger != value))
				{
					this.OnDepartMangerChanging(value);
					this.SendPropertyChanging();
					this._departManger = value;
					this.SendPropertyChanged("DepartManger");
					this.OnDepartMangerChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(50)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="nvarchar(50)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._contactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[Column(Storage="_pageHeadFile", DbType="nvarchar(255)")]
		public string PageHeadFile
		{
			get
			{
				return this._pageHeadFile;
			}
			set
			{
				if ((this._pageHeadFile != value))
				{
					this.OnPageHeadFileChanging(value);
					this.SendPropertyChanging();
					this._pageHeadFile = value;
					this.SendPropertyChanged("PageHeadFile");
					this.OnPageHeadFileChanged();
				}
			}
		}
		
		[Column(Storage="_pageFootFile", DbType="nvarchar(255)")]
		public string PageFootFile
		{
			get
			{
				return this._pageFootFile;
			}
			set
			{
				if ((this._pageFootFile != value))
				{
					this.OnPageFootFileChanging(value);
					this.SendPropertyChanging();
					this._pageFootFile = value;
					this.SendPropertyChanged("PageFootFile");
					this.OnPageFootFileChanged();
				}
			}
		}
		
		[Column(Storage="_templateFile", DbType="nvarchar(255)")]
		public string TemplateFile
		{
			get
			{
				return this._templateFile;
			}
			set
			{
				if ((this._templateFile != value))
				{
					this.OnTemplateFileChanging(value);
					this.SendPropertyChanging();
					this._templateFile = value;
					this.SendPropertyChanged("TemplateFile");
					this.OnTemplateFileChanged();
				}
			}
		}
		
		[Column(Storage="_departStamp", DbType="nvarchar(255)")]
		public string DepartStamp
		{
			get
			{
				return this._departStamp;
			}
			set
			{
				if ((this._departStamp != value))
				{
					this.OnDepartStampChanging(value);
					this.SendPropertyChanging();
					this._departStamp = value;
					this.SendPropertyChanged("DepartStamp");
					this.OnDepartStampChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(500)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_CompanyDepartment", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyCompanyDepartmentList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyCompanyDepartmentList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyInfo")]
	public partial class CompanyInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _companyName;
		
		private string _companyType;
		
		private string _companyEnglishName;
		
		private string _license;
		
		private string _contactName;
		
		private string _contactTel;
		
		private string _contactMobile;
		
		private string _contactFax;
		
		private string _companyAddress;
		
		private string _companyZip;
		
		private string _companySiteUrl;
		
		private int _systemId;
		
		private System.DateTime _issueTime;
		
		private EntitySet<Area> _companyAreaList;
		
		private EntitySet<CompanyAccount> _companyCompanyAccountList;
		
		private EntitySet<CompanyBrands> _companyCompanyBrandsList;
		
		private EntitySet<CompanyCity> _companyCompanyCityList;
		
		private EntitySet<CompanyCustomStand> _companyCompanyCustomStandList;
		
		private EntitySet<CompanyDepartment> _companyCompanyDepartmentList;
		
		private EntitySet<CompanyPriceStand> _companyCompanyPriceStandList;
		
		private EntitySet<CompanyProvince> _companyCompanyProvinceList;
		
		private EntitySet<CompanySetting> _companySettingList;
		
		private EntitySet<CompanyTemplates> _companyCompanyTemplatesList;
		
		private EntitySet<News> _companyNewsList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyTypeChanging(string value);
    partial void OnCompanyTypeChanged();
    partial void OnCompanyEnglishNameChanging(string value);
    partial void OnCompanyEnglishNameChanged();
    partial void OnLicenseChanging(string value);
    partial void OnLicenseChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnContactMobileChanging(string value);
    partial void OnContactMobileChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnCompanyZipChanging(string value);
    partial void OnCompanyZipChanged();
    partial void OnCompanySiteUrlChanging(string value);
    partial void OnCompanySiteUrlChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public CompanyInfo()
		{
			this._companyAreaList = new EntitySet<Area>(new Action<Area>(this.attach_companyAreaList), new Action<Area>(this.detach_companyAreaList));
			this._companyCompanyAccountList = new EntitySet<CompanyAccount>(new Action<CompanyAccount>(this.attach_companyCompanyAccountList), new Action<CompanyAccount>(this.detach_companyCompanyAccountList));
			this._companyCompanyBrandsList = new EntitySet<CompanyBrands>(new Action<CompanyBrands>(this.attach_companyCompanyBrandsList), new Action<CompanyBrands>(this.detach_companyCompanyBrandsList));
			this._companyCompanyCityList = new EntitySet<CompanyCity>(new Action<CompanyCity>(this.attach_companyCompanyCityList), new Action<CompanyCity>(this.detach_companyCompanyCityList));
			this._companyCompanyCustomStandList = new EntitySet<CompanyCustomStand>(new Action<CompanyCustomStand>(this.attach_companyCompanyCustomStandList), new Action<CompanyCustomStand>(this.detach_companyCompanyCustomStandList));
			this._companyCompanyDepartmentList = new EntitySet<CompanyDepartment>(new Action<CompanyDepartment>(this.attach_companyCompanyDepartmentList), new Action<CompanyDepartment>(this.detach_companyCompanyDepartmentList));
			this._companyCompanyPriceStandList = new EntitySet<CompanyPriceStand>(new Action<CompanyPriceStand>(this.attach_companyCompanyPriceStandList), new Action<CompanyPriceStand>(this.detach_companyCompanyPriceStandList));
			this._companyCompanyProvinceList = new EntitySet<CompanyProvince>(new Action<CompanyProvince>(this.attach_companyCompanyProvinceList), new Action<CompanyProvince>(this.detach_companyCompanyProvinceList));
			this._companySettingList = new EntitySet<CompanySetting>(new Action<CompanySetting>(this.attach_companySettingList), new Action<CompanySetting>(this.detach_companySettingList));
			this._companyCompanyTemplatesList = new EntitySet<CompanyTemplates>(new Action<CompanyTemplates>(this.attach_companyCompanyTemplatesList), new Action<CompanyTemplates>(this.detach_companyCompanyTemplatesList));
			this._companyNewsList = new EntitySet<News>(new Action<News>(this.attach_companyNewsList), new Action<News>(this.detach_companyNewsList));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyName", DbType="nvarchar(500) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_companyType", DbType="nvarchar(200)")]
		public string CompanyType
		{
			get
			{
				return this._companyType;
			}
			set
			{
				if ((this._companyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._companyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_companyEnglishName", DbType="nvarchar(250)")]
		public string CompanyEnglishName
		{
			get
			{
				return this._companyEnglishName;
			}
			set
			{
				if ((this._companyEnglishName != value))
				{
					this.OnCompanyEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._companyEnglishName = value;
					this.SendPropertyChanged("CompanyEnglishName");
					this.OnCompanyEnglishNameChanged();
				}
			}
		}
		
		[Column(Storage="_license", DbType="nvarchar(100)")]
		public string License
		{
			get
			{
				return this._license;
			}
			set
			{
				if ((this._license != value))
				{
					this.OnLicenseChanging(value);
					this.SendPropertyChanging();
					this._license = value;
					this.SendPropertyChanged("License");
					this.OnLicenseChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="varchar(100)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="varchar(100)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this.OnContactMobileChanging(value);
					this.SendPropertyChanging();
					this._contactMobile = value;
					this.SendPropertyChanged("ContactMobile");
					this.OnContactMobileChanged();
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="varchar(100)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._contactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[Column(Storage="_companyAddress", DbType="nvarchar(500)")]
		public string CompanyAddress
		{
			get
			{
				return this._companyAddress;
			}
			set
			{
				if ((this._companyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._companyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[Column(Storage="_companyZip", DbType="nvarchar(100)")]
		public string CompanyZip
		{
			get
			{
				return this._companyZip;
			}
			set
			{
				if ((this._companyZip != value))
				{
					this.OnCompanyZipChanging(value);
					this.SendPropertyChanging();
					this._companyZip = value;
					this.SendPropertyChanged("CompanyZip");
					this.OnCompanyZipChanged();
				}
			}
		}
		
		[Column(Storage="_companySiteUrl", DbType="nvarchar(100)")]
		public string CompanySiteUrl
		{
			get
			{
				return this._companySiteUrl;
			}
			set
			{
				if ((this._companySiteUrl != value))
				{
					this.OnCompanySiteUrlChanging(value);
					this.SendPropertyChanging();
					this._companySiteUrl = value;
					this.SendPropertyChanged("CompanySiteUrl");
					this.OnCompanySiteUrlChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="int NOT NULL")]
		public int SystemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_Area", Storage="_companyAreaList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<Area> CompanyAreaList
		{
			get
			{
				return this._companyAreaList;
			}
			set
			{
				this._companyAreaList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyAccount", Storage="_companyCompanyAccountList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<CompanyAccount> CompanyCompanyAccountList
		{
			get
			{
				return this._companyCompanyAccountList;
			}
			set
			{
				this._companyCompanyAccountList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyBrands", Storage="_companyCompanyBrandsList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<CompanyBrands> CompanyCompanyBrandsList
		{
			get
			{
				return this._companyCompanyBrandsList;
			}
			set
			{
				this._companyCompanyBrandsList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyCity", Storage="_companyCompanyCityList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<CompanyCity> CompanyCompanyCityList
		{
			get
			{
				return this._companyCompanyCityList;
			}
			set
			{
				this._companyCompanyCityList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyCustomStand", Storage="_companyCompanyCustomStandList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<CompanyCustomStand> CompanyCompanyCustomStandList
		{
			get
			{
				return this._companyCompanyCustomStandList;
			}
			set
			{
				this._companyCompanyCustomStandList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyDepartment", Storage="_companyCompanyDepartmentList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<CompanyDepartment> CompanyCompanyDepartmentList
		{
			get
			{
				return this._companyCompanyDepartmentList;
			}
			set
			{
				this._companyCompanyDepartmentList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyPriceStand", Storage="_companyCompanyPriceStandList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<CompanyPriceStand> CompanyCompanyPriceStandList
		{
			get
			{
				return this._companyCompanyPriceStandList;
			}
			set
			{
				this._companyCompanyPriceStandList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyProvince", Storage="_companyCompanyProvinceList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<CompanyProvince> CompanyCompanyProvinceList
		{
			get
			{
				return this._companyCompanyProvinceList;
			}
			set
			{
				this._companyCompanyProvinceList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanySetting", Storage="_companySettingList", ThisKey="Id", OtherKey="Id")]
		public EntitySet<CompanySetting> CompanySettingList
		{
			get
			{
				return this._companySettingList;
			}
			set
			{
				this._companySettingList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyTemplates", Storage="_companyCompanyTemplatesList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<CompanyTemplates> CompanyCompanyTemplatesList
		{
			get
			{
				return this._companyCompanyTemplatesList;
			}
			set
			{
				this._companyCompanyTemplatesList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_News", Storage="_companyNewsList", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<News> CompanyNewsList
		{
			get
			{
				return this._companyNewsList;
			}
			set
			{
				this._companyNewsList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_companyAreaList(Area entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyAreaList(Area entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companyCompanyAccountList(CompanyAccount entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyCompanyAccountList(CompanyAccount entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companyCompanyBrandsList(CompanyBrands entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyCompanyBrandsList(CompanyBrands entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companyCompanyCityList(CompanyCity entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyCompanyCityList(CompanyCity entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companyCompanyCustomStandList(CompanyCustomStand entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyCompanyCustomStandList(CompanyCustomStand entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companyCompanyDepartmentList(CompanyDepartment entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyCompanyDepartmentList(CompanyDepartment entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companyCompanyPriceStandList(CompanyPriceStand entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyCompanyPriceStandList(CompanyPriceStand entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companyCompanyProvinceList(CompanyProvince entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyCompanyProvinceList(CompanyProvince entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companySettingList(CompanySetting entity)
		{
			this.SendPropertyChanging();
			entity.CompanyInfo = this;
		}
		
		private void detach_companySettingList(CompanySetting entity)
		{
			this.SendPropertyChanging();
			entity.CompanyInfo = null;
		}
		
		private void attach_companyCompanyTemplatesList(CompanyTemplates entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyCompanyTemplatesList(CompanyTemplates entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
		
		private void attach_companyNewsList(News entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = this;
		}
		
		private void detach_companyNewsList(News entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCompanyInfo = null;
		}
	}
	
	[Table(Name="dbo.tbl_CompanyPriceStand")]
	public partial class CompanyPriceStand : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _priceStandName;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.Nullable<System.DateTime> _issueTime;
		
		private string _isDelete;
		
		private string _isSystem;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPriceStandNameChanging(string value);
    partial void OnPriceStandNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnIsSystemChanging(string value);
    partial void OnIsSystemChanged();
    #endregion
		
		public CompanyPriceStand()
		{
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_priceStandName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string PriceStandName
		{
			get
			{
				return this._priceStandName;
			}
			set
			{
				if ((this._priceStandName != value))
				{
					this.OnPriceStandNameChanging(value);
					this.SendPropertyChanging();
					this._priceStandName = value;
					this.SendPropertyChanged("PriceStandName");
					this.OnPriceStandNameChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime")]
		public System.Nullable<System.DateTime> IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_isSystem", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsSystem
		{
			get
			{
				return this._isSystem;
			}
			set
			{
				if ((this._isSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._isSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_CompanyPriceStand", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyCompanyPriceStandList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyCompanyPriceStandList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanyProvince")]
	public partial class CompanyProvince : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _provinceName;
		
		private int _companyId;
		
		private System.Nullable<int> _operatorId;
		
		private System.DateTime _issueTime;
		
		private EntitySet<CompanyCity> _provinceCompanyCityList;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public CompanyProvince()
		{
			this._provinceCompanyCityList = new EntitySet<CompanyCity>(new Action<CompanyCity>(this.attach_provinceCompanyCityList), new Action<CompanyCity>(this.detach_provinceCompanyCityList));
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_provinceName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string ProvinceName
		{
			get
			{
				return this._provinceName;
			}
			set
			{
				if ((this._provinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._provinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Association(Name="CompanyProvince_CompanyCity", Storage="_provinceCompanyCityList", ThisKey="Id", OtherKey="ProvinceId")]
		public EntitySet<CompanyCity> ProvinceCompanyCityList
		{
			get
			{
				return this._provinceCompanyCityList;
			}
			set
			{
				this._provinceCompanyCityList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyProvince", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyCompanyProvinceList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyCompanyProvinceList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_provinceCompanyCityList(CompanyCity entity)
		{
			this.SendPropertyChanging();
			entity.ProvinceCompanyProvince = this;
		}
		
		private void detach_provinceCompanyCityList(CompanyCity entity)
		{
			this.SendPropertyChanging();
			entity.ProvinceCompanyProvince = null;
		}
	}
	
	[Table(Name="dbo.tbl_CompanySetting")]
	public partial class CompanySetting : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fieldName;
		
		private string _fieldValue;
		
		private EntityRef<CompanyInfo> _companyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldValueChanging(string value);
    partial void OnFieldValueChanged();
    #endregion
		
		public CompanySetting()
		{
			this._companyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._companyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_fieldName", DbType="varchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FieldName
		{
			get
			{
				return this._fieldName;
			}
			set
			{
				if ((this._fieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._fieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[Column(Storage="_fieldValue", DbType="nvarchar(250)")]
		public string FieldValue
		{
			get
			{
				return this._fieldValue;
			}
			set
			{
				if ((this._fieldValue != value))
				{
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._fieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
		
		[Association(Name="CompanyInfo_CompanySetting", Storage="_companyInfo", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyInfo
		{
			get
			{
				return this._companyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyInfo.Entity = null;
						previousValue.CompanySettingList.Remove(this);
					}
					this._companyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanySettingList.Add(this);
						this._id = value.Id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("CompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CompanySupplier")]
	public partial class CompanySupplier : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _provinceId;
		
		private string _provinceName;
		
		private int _cityId;
		
		private string _cityName;
		
		private string _unitName;
		
		private byte _supplierType;
		
		private string _unitAddress;
		
		private decimal _commission;
		
		private string _agreementFile;
		
		private int _tradeNum;
		
		private string _unitPolicy;
		
		private string _remark;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _isDelete;
		
		private EntitySet<SupplierAccessory> _supplierSupplierAccessoryList;
		
		private EntitySet<SupplierCarInfo> _privaderSupplierCarInfoList;
		
		private EntitySet<SupplierContact> _supplierSupplierContactList;
		
		private EntityRef<SupplierHotel> _supplierSupplierHotel;
		
		private EntitySet<SupplierHotelRoomType> _supplierSupplierHotelRoomTypeList;
		
		private EntityRef<SupplierRestaurant> _supplierSupplierRestaurant;
		
		private EntityRef<SupplierShopping> _supplierShopping;
		
		private EntityRef<SupplierSpot> _supplierSupplierSpot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProvinceIdChanging(int value);
    partial void OnProvinceIdChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnSupplierTypeChanging(byte value);
    partial void OnSupplierTypeChanged();
    partial void OnUnitAddressChanging(string value);
    partial void OnUnitAddressChanged();
    partial void OnCommissionChanging(decimal value);
    partial void OnCommissionChanged();
    partial void OnAgreementFileChanging(string value);
    partial void OnAgreementFileChanged();
    partial void OnTradeNumChanging(int value);
    partial void OnTradeNumChanged();
    partial void OnUnitPolicyChanging(string value);
    partial void OnUnitPolicyChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public CompanySupplier()
		{
			this._supplierSupplierAccessoryList = new EntitySet<SupplierAccessory>(new Action<SupplierAccessory>(this.attach_supplierSupplierAccessoryList), new Action<SupplierAccessory>(this.detach_supplierSupplierAccessoryList));
			this._privaderSupplierCarInfoList = new EntitySet<SupplierCarInfo>(new Action<SupplierCarInfo>(this.attach_privaderSupplierCarInfoList), new Action<SupplierCarInfo>(this.detach_privaderSupplierCarInfoList));
			this._supplierSupplierContactList = new EntitySet<SupplierContact>(new Action<SupplierContact>(this.attach_supplierSupplierContactList), new Action<SupplierContact>(this.detach_supplierSupplierContactList));
			this._supplierSupplierHotel = default(EntityRef<SupplierHotel>);
			this._supplierSupplierHotelRoomTypeList = new EntitySet<SupplierHotelRoomType>(new Action<SupplierHotelRoomType>(this.attach_supplierSupplierHotelRoomTypeList), new Action<SupplierHotelRoomType>(this.detach_supplierSupplierHotelRoomTypeList));
			this._supplierSupplierRestaurant = default(EntityRef<SupplierRestaurant>);
			this._supplierShopping = default(EntityRef<SupplierShopping>);
			this._supplierSupplierSpot = default(EntityRef<SupplierSpot>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_provinceId", DbType="int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._provinceId;
			}
			set
			{
				if ((this._provinceId != value))
				{
					this.OnProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._provinceId = value;
					this.SendPropertyChanged("ProvinceId");
					this.OnProvinceIdChanged();
				}
			}
		}
		
		[Column(Storage="_provinceName", DbType="nvarchar(255)")]
		public string ProvinceName
		{
			get
			{
				return this._provinceName;
			}
			set
			{
				if ((this._provinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._provinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[Column(Storage="_cityId", DbType="int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._cityId;
			}
			set
			{
				if ((this._cityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._cityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[Column(Storage="_cityName", DbType="nvarchar(255)")]
		public string CityName
		{
			get
			{
				return this._cityName;
			}
			set
			{
				if ((this._cityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._cityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[Column(Storage="_unitName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._unitName;
			}
			set
			{
				if ((this._unitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._unitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[Column(Storage="_supplierType", DbType="tinyint NOT NULL")]
		public byte SupplierType
		{
			get
			{
				return this._supplierType;
			}
			set
			{
				if ((this._supplierType != value))
				{
					this.OnSupplierTypeChanging(value);
					this.SendPropertyChanging();
					this._supplierType = value;
					this.SendPropertyChanged("SupplierType");
					this.OnSupplierTypeChanged();
				}
			}
		}
		
		[Column(Storage="_unitAddress", DbType="nvarchar(500)")]
		public string UnitAddress
		{
			get
			{
				return this._unitAddress;
			}
			set
			{
				if ((this._unitAddress != value))
				{
					this.OnUnitAddressChanging(value);
					this.SendPropertyChanging();
					this._unitAddress = value;
					this.SendPropertyChanged("UnitAddress");
					this.OnUnitAddressChanged();
				}
			}
		}
		
		[Column(Storage="_commission", DbType="money NOT NULL")]
		public decimal Commission
		{
			get
			{
				return this._commission;
			}
			set
			{
				if ((this._commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[Column(Storage="_agreementFile", DbType="nvarchar(255)")]
		public string AgreementFile
		{
			get
			{
				return this._agreementFile;
			}
			set
			{
				if ((this._agreementFile != value))
				{
					this.OnAgreementFileChanging(value);
					this.SendPropertyChanging();
					this._agreementFile = value;
					this.SendPropertyChanged("AgreementFile");
					this.OnAgreementFileChanged();
				}
			}
		}
		
		[Column(Storage="_tradeNum", DbType="int NOT NULL")]
		public int TradeNum
		{
			get
			{
				return this._tradeNum;
			}
			set
			{
				if ((this._tradeNum != value))
				{
					this.OnTradeNumChanging(value);
					this.SendPropertyChanging();
					this._tradeNum = value;
					this.SendPropertyChanged("TradeNum");
					this.OnTradeNumChanged();
				}
			}
		}
		
		[Column(Storage="_unitPolicy", DbType="nvarchar(MAX)")]
		public string UnitPolicy
		{
			get
			{
				return this._unitPolicy;
			}
			set
			{
				if ((this._unitPolicy != value))
				{
					this.OnUnitPolicyChanging(value);
					this.SendPropertyChanging();
					this._unitPolicy = value;
					this.SendPropertyChanged("UnitPolicy");
					this.OnUnitPolicyChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierAccessory", Storage="_supplierSupplierAccessoryList", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<SupplierAccessory> SupplierSupplierAccessoryList
		{
			get
			{
				return this._supplierSupplierAccessoryList;
			}
			set
			{
				this._supplierSupplierAccessoryList.Assign(value);
			}
		}
		
		[Association(Name="CompanySupplier_SupplierCarInfo", Storage="_privaderSupplierCarInfoList", ThisKey="Id", OtherKey="PrivaderId")]
		public EntitySet<SupplierCarInfo> PrivaderSupplierCarInfoList
		{
			get
			{
				return this._privaderSupplierCarInfoList;
			}
			set
			{
				this._privaderSupplierCarInfoList.Assign(value);
			}
		}
		
		[Association(Name="CompanySupplier_SupplierContact", Storage="_supplierSupplierContactList", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<SupplierContact> SupplierSupplierContactList
		{
			get
			{
				return this._supplierSupplierContactList;
			}
			set
			{
				this._supplierSupplierContactList.Assign(value);
			}
		}
		
		[Association(Name="CompanySupplier_SupplierHotel", Storage="_supplierSupplierHotel", ThisKey="Id", OtherKey="SupplierId", IsUnique=true, IsForeignKey=false)]
		public SupplierHotel SupplierSupplierHotel
		{
			get
			{
				return this._supplierSupplierHotel.Entity;
			}
			set
			{
				SupplierHotel previousValue = this._supplierSupplierHotel.Entity;
				if (((previousValue != value) 
							|| (this._supplierSupplierHotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierSupplierHotel.Entity = null;
						previousValue.SupplierCompanySupplier = null;
					}
					this._supplierSupplierHotel.Entity = value;
					if ((value != null))
					{
						value.SupplierCompanySupplier = this;
					}
					this.SendPropertyChanged("SupplierSupplierHotel");
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierHotelRoomType", Storage="_supplierSupplierHotelRoomTypeList", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<SupplierHotelRoomType> SupplierSupplierHotelRoomTypeList
		{
			get
			{
				return this._supplierSupplierHotelRoomTypeList;
			}
			set
			{
				this._supplierSupplierHotelRoomTypeList.Assign(value);
			}
		}
		
		[Association(Name="CompanySupplier_SupplierRestaurant", Storage="_supplierSupplierRestaurant", ThisKey="Id", OtherKey="SupplierId", IsUnique=true, IsForeignKey=false)]
		public SupplierRestaurant SupplierSupplierRestaurant
		{
			get
			{
				return this._supplierSupplierRestaurant.Entity;
			}
			set
			{
				SupplierRestaurant previousValue = this._supplierSupplierRestaurant.Entity;
				if (((previousValue != value) 
							|| (this._supplierSupplierRestaurant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierSupplierRestaurant.Entity = null;
						previousValue.SupplierCompanySupplier = null;
					}
					this._supplierSupplierRestaurant.Entity = value;
					if ((value != null))
					{
						value.SupplierCompanySupplier = this;
					}
					this.SendPropertyChanged("SupplierSupplierRestaurant");
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierShopping", Storage="_supplierShopping", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public SupplierShopping SupplierShopping
		{
			get
			{
				return this._supplierShopping.Entity;
			}
			set
			{
				SupplierShopping previousValue = this._supplierShopping.Entity;
				if (((previousValue != value) 
							|| (this._supplierShopping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierShopping.Entity = null;
						previousValue.CompanySupplier = null;
					}
					this._supplierShopping.Entity = value;
					if ((value != null))
					{
						value.CompanySupplier = this;
					}
					this.SendPropertyChanged("SupplierShopping");
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierSpot", Storage="_supplierSupplierSpot", ThisKey="Id", OtherKey="SupplierId", IsUnique=true, IsForeignKey=false)]
		public SupplierSpot SupplierSupplierSpot
		{
			get
			{
				return this._supplierSupplierSpot.Entity;
			}
			set
			{
				SupplierSpot previousValue = this._supplierSupplierSpot.Entity;
				if (((previousValue != value) 
							|| (this._supplierSupplierSpot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierSupplierSpot.Entity = null;
						previousValue.SupplierCompanySupplier = null;
					}
					this._supplierSupplierSpot.Entity = value;
					if ((value != null))
					{
						value.SupplierCompanySupplier = this;
					}
					this.SendPropertyChanged("SupplierSupplierSpot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_supplierSupplierAccessoryList(SupplierAccessory entity)
		{
			this.SendPropertyChanging();
			entity.SupplierCompanySupplier = this;
		}
		
		private void detach_supplierSupplierAccessoryList(SupplierAccessory entity)
		{
			this.SendPropertyChanging();
			entity.SupplierCompanySupplier = null;
		}
		
		private void attach_privaderSupplierCarInfoList(SupplierCarInfo entity)
		{
			this.SendPropertyChanging();
			entity.PrivaderCompanySupplier = this;
		}
		
		private void detach_privaderSupplierCarInfoList(SupplierCarInfo entity)
		{
			this.SendPropertyChanging();
			entity.PrivaderCompanySupplier = null;
		}
		
		private void attach_supplierSupplierContactList(SupplierContact entity)
		{
			this.SendPropertyChanging();
			entity.SupplierCompanySupplier = this;
		}
		
		private void detach_supplierSupplierContactList(SupplierContact entity)
		{
			this.SendPropertyChanging();
			entity.SupplierCompanySupplier = null;
		}
		
		private void attach_supplierSupplierHotelRoomTypeList(SupplierHotelRoomType entity)
		{
			this.SendPropertyChanging();
			entity.SupplierCompanySupplier = this;
		}
		
		private void detach_supplierSupplierHotelRoomTypeList(SupplierHotelRoomType entity)
		{
			this.SendPropertyChanging();
			entity.SupplierCompanySupplier = null;
		}
	}
	
	[Table(Name="dbo.tbl_CompanyTemplates")]
	public partial class CompanyTemplates : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _templateName;
		
		private byte _tempType;
		
		private string _tempPath;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private EntitySet<TemplateUseRange> _tempTemplateUseRangeList;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnTempTypeChanging(byte value);
    partial void OnTempTypeChanged();
    partial void OnTempPathChanging(string value);
    partial void OnTempPathChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public CompanyTemplates()
		{
			this._tempTemplateUseRangeList = new EntitySet<TemplateUseRange>(new Action<TemplateUseRange>(this.attach_tempTemplateUseRangeList), new Action<TemplateUseRange>(this.detach_tempTemplateUseRangeList));
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_templateName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string TemplateName
		{
			get
			{
				return this._templateName;
			}
			set
			{
				if ((this._templateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._templateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[Column(Storage="_tempType", DbType="tinyint NOT NULL")]
		public byte TempType
		{
			get
			{
				return this._tempType;
			}
			set
			{
				if ((this._tempType != value))
				{
					this.OnTempTypeChanging(value);
					this.SendPropertyChanging();
					this._tempType = value;
					this.SendPropertyChanged("TempType");
					this.OnTempTypeChanged();
				}
			}
		}
		
		[Column(Storage="_tempPath", DbType="nvarchar(250)")]
		public string TempPath
		{
			get
			{
				return this._tempPath;
			}
			set
			{
				if ((this._tempPath != value))
				{
					this.OnTempPathChanging(value);
					this.SendPropertyChanging();
					this._tempPath = value;
					this.SendPropertyChanged("TempPath");
					this.OnTempPathChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Association(Name="CompanyTemplates_TemplateUseRange", Storage="_tempTemplateUseRangeList", ThisKey="Id", OtherKey="TempId")]
		public EntitySet<TemplateUseRange> TempTemplateUseRangeList
		{
			get
			{
				return this._tempTemplateUseRangeList;
			}
			set
			{
				this._tempTemplateUseRangeList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_CompanyTemplates", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyCompanyTemplatesList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyCompanyTemplatesList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tempTemplateUseRangeList(TemplateUseRange entity)
		{
			this.SendPropertyChanging();
			entity.TempCompanyTemplates = this;
		}
		
		private void detach_tempTemplateUseRangeList(TemplateUseRange entity)
		{
			this.SendPropertyChanging();
			entity.TempCompanyTemplates = null;
		}
	}
	
	[Table(Name="dbo.tbl_CompanyUser")]
	public partial class CompanyUser : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _userName;
		
		private string _password;
		
		private string _mD5Password;
		
		private byte _userType;
		
		private string _contactName;
		
		private string _contactSex;
		
		private string _contactTel;
		
		private string _contactFax;
		
		private string _contactMobile;
		
		private string _contactEmail;
		
		private string _qq;
		
		private string _msn;
		
		private string _jobName;
		
		private string _lastLoginIP;
		
		private System.Nullable<System.DateTime> _lastLoginTime;
		
		private int _roleID;
		
		private string _permissionList;
		
		private string _peopProfile;
		
		private string _remark;
		
		private string _isDelete;
		
		private string _isEnable;
		
		private string _isAdmin;
		
		private System.DateTime _issueTime;
		
		private string _departName;
		
		private int _departId;
		
		private int _superviseDepartId;
		
		private string _superviseDepartName;
		
		private int _tourCompanyId;
		
		private EntitySet<UserArea> _userUserAreaList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMD5PasswordChanging(string value);
    partial void OnMD5PasswordChanged();
    partial void OnUserTypeChanging(byte value);
    partial void OnUserTypeChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactSexChanging(string value);
    partial void OnContactSexChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnContactMobileChanging(string value);
    partial void OnContactMobileChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnQqChanging(string value);
    partial void OnQqChanged();
    partial void OnMsnChanging(string value);
    partial void OnMsnChanged();
    partial void OnJobNameChanging(string value);
    partial void OnJobNameChanged();
    partial void OnLastLoginIPChanging(string value);
    partial void OnLastLoginIPChanged();
    partial void OnLastLoginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginTimeChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnPermissionListChanging(string value);
    partial void OnPermissionListChanged();
    partial void OnPeopProfileChanging(string value);
    partial void OnPeopProfileChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnIsEnableChanging(string value);
    partial void OnIsEnableChanged();
    partial void OnIsAdminChanging(string value);
    partial void OnIsAdminChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnDepartNameChanging(string value);
    partial void OnDepartNameChanged();
    partial void OnDepartIdChanging(int value);
    partial void OnDepartIdChanged();
    partial void OnSuperviseDepartIdChanging(int value);
    partial void OnSuperviseDepartIdChanged();
    partial void OnSuperviseDepartNameChanging(string value);
    partial void OnSuperviseDepartNameChanged();
    partial void OnTourCompanyIdChanging(int value);
    partial void OnTourCompanyIdChanged();
    #endregion
		
		public CompanyUser()
		{
			this._userUserAreaList = new EntitySet<UserArea>(new Action<UserArea>(this.attach_userUserAreaList), new Action<UserArea>(this.detach_userUserAreaList));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_userName", DbType="nvarchar(100)")]
		public string UserName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="varchar(50)")]
		public string Password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_mD5Password", DbType="varchar(50)")]
		public string MD5Password
		{
			get
			{
				return this._mD5Password;
			}
			set
			{
				if ((this._mD5Password != value))
				{
					this.OnMD5PasswordChanging(value);
					this.SendPropertyChanging();
					this._mD5Password = value;
					this.SendPropertyChanged("MD5Password");
					this.OnMD5PasswordChanged();
				}
			}
		}
		
		[Column(Storage="_userType", DbType="tinyint NOT NULL")]
		public byte UserType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._userType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactSex", DbType="char(1)")]
		public string ContactSex
		{
			get
			{
				return this._contactSex;
			}
			set
			{
				if ((this._contactSex != value))
				{
					this.OnContactSexChanging(value);
					this.SendPropertyChanging();
					this._contactSex = value;
					this.SendPropertyChanged("ContactSex");
					this.OnContactSexChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(50)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="nvarchar(50)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._contactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="nvarchar(50)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this.OnContactMobileChanging(value);
					this.SendPropertyChanging();
					this._contactMobile = value;
					this.SendPropertyChanged("ContactMobile");
					this.OnContactMobileChanged();
				}
			}
		}
		
		[Column(Storage="_contactEmail", DbType="nvarchar(50)")]
		public string ContactEmail
		{
			get
			{
				return this._contactEmail;
			}
			set
			{
				if ((this._contactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._contactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[Column(Name="QQ", Storage="_qq", DbType="nvarchar(250)")]
		public string Qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnQqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("Qq");
					this.OnQqChanged();
				}
			}
		}
		
		[Column(Name="MSN", Storage="_msn", DbType="nvarchar(50)")]
		public string Msn
		{
			get
			{
				return this._msn;
			}
			set
			{
				if ((this._msn != value))
				{
					this.OnMsnChanging(value);
					this.SendPropertyChanging();
					this._msn = value;
					this.SendPropertyChanged("Msn");
					this.OnMsnChanged();
				}
			}
		}
		
		[Column(Storage="_jobName", DbType="nvarchar(250)")]
		public string JobName
		{
			get
			{
				return this._jobName;
			}
			set
			{
				if ((this._jobName != value))
				{
					this.OnJobNameChanging(value);
					this.SendPropertyChanging();
					this._jobName = value;
					this.SendPropertyChanged("JobName");
					this.OnJobNameChanged();
				}
			}
		}
		
		[Column(Storage="_lastLoginIP", DbType="varchar(16)")]
		public string LastLoginIP
		{
			get
			{
				return this._lastLoginIP;
			}
			set
			{
				if ((this._lastLoginIP != value))
				{
					this.OnLastLoginIPChanging(value);
					this.SendPropertyChanging();
					this._lastLoginIP = value;
					this.SendPropertyChanged("LastLoginIP");
					this.OnLastLoginIPChanged();
				}
			}
		}
		
		[Column(Storage="_lastLoginTime", DbType="datetime")]
		public System.Nullable<System.DateTime> LastLoginTime
		{
			get
			{
				return this._lastLoginTime;
			}
			set
			{
				if ((this._lastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._lastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[Column(Storage="_roleID", DbType="int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._roleID;
			}
			set
			{
				if ((this._roleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._roleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_permissionList", DbType="varchar(MAX)")]
		public string PermissionList
		{
			get
			{
				return this._permissionList;
			}
			set
			{
				if ((this._permissionList != value))
				{
					this.OnPermissionListChanging(value);
					this.SendPropertyChanging();
					this._permissionList = value;
					this.SendPropertyChanged("PermissionList");
					this.OnPermissionListChanged();
				}
			}
		}
		
		[Column(Storage="_peopProfile", DbType="nvarchar(500)")]
		public string PeopProfile
		{
			get
			{
				return this._peopProfile;
			}
			set
			{
				if ((this._peopProfile != value))
				{
					this.OnPeopProfileChanging(value);
					this.SendPropertyChanging();
					this._peopProfile = value;
					this.SendPropertyChanged("PeopProfile");
					this.OnPeopProfileChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(500)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_isEnable", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsEnable
		{
			get
			{
				return this._isEnable;
			}
			set
			{
				if ((this._isEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._isEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[Column(Storage="_isAdmin", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsAdmin
		{
			get
			{
				return this._isAdmin;
			}
			set
			{
				if ((this._isAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._isAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_departName", DbType="nvarchar(50)")]
		public string DepartName
		{
			get
			{
				return this._departName;
			}
			set
			{
				if ((this._departName != value))
				{
					this.OnDepartNameChanging(value);
					this.SendPropertyChanging();
					this._departName = value;
					this.SendPropertyChanged("DepartName");
					this.OnDepartNameChanged();
				}
			}
		}
		
		[Column(Storage="_departId", DbType="int NOT NULL")]
		public int DepartId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._departId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[Column(Storage="_superviseDepartId", DbType="int NOT NULL")]
		public int SuperviseDepartId
		{
			get
			{
				return this._superviseDepartId;
			}
			set
			{
				if ((this._superviseDepartId != value))
				{
					this.OnSuperviseDepartIdChanging(value);
					this.SendPropertyChanging();
					this._superviseDepartId = value;
					this.SendPropertyChanged("SuperviseDepartId");
					this.OnSuperviseDepartIdChanged();
				}
			}
		}
		
		[Column(Storage="_superviseDepartName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string SuperviseDepartName
		{
			get
			{
				return this._superviseDepartName;
			}
			set
			{
				if ((this._superviseDepartName != value))
				{
					this.OnSuperviseDepartNameChanging(value);
					this.SendPropertyChanging();
					this._superviseDepartName = value;
					this.SendPropertyChanged("SuperviseDepartName");
					this.OnSuperviseDepartNameChanged();
				}
			}
		}
		
		[Column(Storage="_tourCompanyId", DbType="int NOT NULL")]
		public int TourCompanyId
		{
			get
			{
				return this._tourCompanyId;
			}
			set
			{
				if ((this._tourCompanyId != value))
				{
					this.OnTourCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._tourCompanyId = value;
					this.SendPropertyChanged("TourCompanyId");
					this.OnTourCompanyIdChanged();
				}
			}
		}
		
		[Association(Name="CompanyUser_UserArea", Storage="_userUserAreaList", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserArea> UserUserAreaList
		{
			get
			{
				return this._userUserAreaList;
			}
			set
			{
				this._userUserAreaList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_userUserAreaList(UserArea entity)
		{
			this.SendPropertyChanging();
			entity.UserCompanyUser = this;
		}
		
		private void detach_userUserAreaList(UserArea entity)
		{
			this.SendPropertyChanging();
			entity.UserCompanyUser = null;
		}
	}
	
	[Table(Name="dbo.tbl_ContractInfo")]
	public partial class ContractInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _staffNo;
		
		private string _staffName;
		
		private System.DateTime _beginDate;
		
		private System.DateTime _endDate;
		
		private System.Nullable<int> _contractStatus;
		
		private string _remark;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnStaffNoChanging(string value);
    partial void OnStaffNoChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnBeginDateChanging(System.DateTime value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnContractStatusChanging(System.Nullable<int> value);
    partial void OnContractStatusChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public ContractInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_staffNo", DbType="nvarchar(50)")]
		public string StaffNo
		{
			get
			{
				return this._staffNo;
			}
			set
			{
				if ((this._staffNo != value))
				{
					this.OnStaffNoChanging(value);
					this.SendPropertyChanging();
					this._staffNo = value;
					this.SendPropertyChanged("StaffNo");
					this.OnStaffNoChanged();
				}
			}
		}
		
		[Column(Storage="_staffName", DbType="nvarchar(50)")]
		public string StaffName
		{
			get
			{
				return this._staffName;
			}
			set
			{
				if ((this._staffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._staffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[Column(Storage="_beginDate", DbType="datetime NOT NULL")]
		public System.DateTime BeginDate
		{
			get
			{
				return this._beginDate;
			}
			set
			{
				if ((this._beginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._beginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[Column(Storage="_endDate", DbType="datetime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_contractStatus", DbType="int")]
		public System.Nullable<int> ContractStatus
		{
			get
			{
				return this._contractStatus;
			}
			set
			{
				if ((this._contractStatus != value))
				{
					this.OnContractStatusChanging(value);
					this.SendPropertyChanging();
					this._contractStatus = value;
					this.SendPropertyChanged("ContractStatus");
					this.OnContractStatusChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Customer")]
	public partial class Customer : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _proviceId;
		
		private string _provinceName;
		
		private int _cityId;
		
		private string _cityName;
		
		private string _name;
		
		private string _licence;
		
		private string _adress;
		
		private string _postalCode;
		
		private string _bankAccount;
		
		private decimal _maxDebts;
		
		private decimal _preDeposit;
		
		private decimal _commissionCount;
		
		private int _saleId;
		
		private string _saler;
		
		private int _customerLev;
		
		private byte _commissionType;
		
		private int _companyId;
		
		private string _isEnable;
		
		private string _contactName;
		
		private string _phone;
		
		private string _mobile;
		
		private string _fax;
		
		private string _remark;
		
		private int _tradeNum;
		
		private decimal _satNum;
		
		private int _complaintNum;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _pageHeadFile;
		
		private string _pageFootFile;
		
		private string _templateFile;
		
		private string _customerStamp;
		
		private string _isDelete;
		
		private int _brandId;
		
		private EntitySet<CustomerContactInfo> _customerContactInfoList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProviceIdChanging(int value);
    partial void OnProviceIdChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLicenceChanging(string value);
    partial void OnLicenceChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnMaxDebtsChanging(decimal value);
    partial void OnMaxDebtsChanged();
    partial void OnPreDepositChanging(decimal value);
    partial void OnPreDepositChanged();
    partial void OnCommissionCountChanging(decimal value);
    partial void OnCommissionCountChanged();
    partial void OnSaleIdChanging(int value);
    partial void OnSaleIdChanged();
    partial void OnSalerChanging(string value);
    partial void OnSalerChanged();
    partial void OnCustomerLevChanging(int value);
    partial void OnCustomerLevChanged();
    partial void OnCommissionTypeChanging(byte value);
    partial void OnCommissionTypeChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnIsEnableChanging(string value);
    partial void OnIsEnableChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTradeNumChanging(int value);
    partial void OnTradeNumChanged();
    partial void OnSatNumChanging(decimal value);
    partial void OnSatNumChanged();
    partial void OnComplaintNumChanging(int value);
    partial void OnComplaintNumChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnPageHeadFileChanging(string value);
    partial void OnPageHeadFileChanged();
    partial void OnPageFootFileChanging(string value);
    partial void OnPageFootFileChanged();
    partial void OnTemplateFileChanging(string value);
    partial void OnTemplateFileChanged();
    partial void OnCustomerStampChanging(string value);
    partial void OnCustomerStampChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnBrandIdChanging(int value);
    partial void OnBrandIdChanged();
    #endregion
		
		public Customer()
		{
			this._customerContactInfoList = new EntitySet<CustomerContactInfo>(new Action<CustomerContactInfo>(this.attach_customerContactInfoList), new Action<CustomerContactInfo>(this.detach_customerContactInfoList));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_proviceId", DbType="int NOT NULL")]
		public int ProviceId
		{
			get
			{
				return this._proviceId;
			}
			set
			{
				if ((this._proviceId != value))
				{
					this.OnProviceIdChanging(value);
					this.SendPropertyChanging();
					this._proviceId = value;
					this.SendPropertyChanged("ProviceId");
					this.OnProviceIdChanged();
				}
			}
		}
		
		[Column(Storage="_provinceName", DbType="nvarchar(255)")]
		public string ProvinceName
		{
			get
			{
				return this._provinceName;
			}
			set
			{
				if ((this._provinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._provinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[Column(Storage="_cityId", DbType="int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._cityId;
			}
			set
			{
				if ((this._cityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._cityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[Column(Storage="_cityName", DbType="nvarchar(255)")]
		public string CityName
		{
			get
			{
				return this._cityName;
			}
			set
			{
				if ((this._cityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._cityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="nvarchar(250)")]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_licence", DbType="nvarchar(250)")]
		public string Licence
		{
			get
			{
				return this._licence;
			}
			set
			{
				if ((this._licence != value))
				{
					this.OnLicenceChanging(value);
					this.SendPropertyChanging();
					this._licence = value;
					this.SendPropertyChanged("Licence");
					this.OnLicenceChanged();
				}
			}
		}
		
		[Column(Storage="_adress", DbType="nvarchar(250)")]
		public string Adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[Column(Storage="_postalCode", DbType="nvarchar(250)")]
		public string PostalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[Column(Storage="_bankAccount", DbType="nvarchar(255)")]
		public string BankAccount
		{
			get
			{
				return this._bankAccount;
			}
			set
			{
				if ((this._bankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._bankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[Column(Storage="_maxDebts", DbType="money NOT NULL")]
		public decimal MaxDebts
		{
			get
			{
				return this._maxDebts;
			}
			set
			{
				if ((this._maxDebts != value))
				{
					this.OnMaxDebtsChanging(value);
					this.SendPropertyChanging();
					this._maxDebts = value;
					this.SendPropertyChanged("MaxDebts");
					this.OnMaxDebtsChanged();
				}
			}
		}
		
		[Column(Storage="_preDeposit", DbType="money NOT NULL")]
		public decimal PreDeposit
		{
			get
			{
				return this._preDeposit;
			}
			set
			{
				if ((this._preDeposit != value))
				{
					this.OnPreDepositChanging(value);
					this.SendPropertyChanging();
					this._preDeposit = value;
					this.SendPropertyChanged("PreDeposit");
					this.OnPreDepositChanged();
				}
			}
		}
		
		[Column(Storage="_commissionCount", DbType="money NOT NULL")]
		public decimal CommissionCount
		{
			get
			{
				return this._commissionCount;
			}
			set
			{
				if ((this._commissionCount != value))
				{
					this.OnCommissionCountChanging(value);
					this.SendPropertyChanging();
					this._commissionCount = value;
					this.SendPropertyChanged("CommissionCount");
					this.OnCommissionCountChanged();
				}
			}
		}
		
		[Column(Storage="_saleId", DbType="int NOT NULL")]
		public int SaleId
		{
			get
			{
				return this._saleId;
			}
			set
			{
				if ((this._saleId != value))
				{
					this.OnSaleIdChanging(value);
					this.SendPropertyChanging();
					this._saleId = value;
					this.SendPropertyChanged("SaleId");
					this.OnSaleIdChanged();
				}
			}
		}
		
		[Column(Storage="_saler", DbType="nvarchar(250)")]
		public string Saler
		{
			get
			{
				return this._saler;
			}
			set
			{
				if ((this._saler != value))
				{
					this.OnSalerChanging(value);
					this.SendPropertyChanging();
					this._saler = value;
					this.SendPropertyChanged("Saler");
					this.OnSalerChanged();
				}
			}
		}
		
		[Column(Storage="_customerLev", DbType="int NOT NULL")]
		public int CustomerLev
		{
			get
			{
				return this._customerLev;
			}
			set
			{
				if ((this._customerLev != value))
				{
					this.OnCustomerLevChanging(value);
					this.SendPropertyChanging();
					this._customerLev = value;
					this.SendPropertyChanged("CustomerLev");
					this.OnCustomerLevChanged();
				}
			}
		}
		
		[Column(Storage="_commissionType", DbType="tinyint NOT NULL")]
		public byte CommissionType
		{
			get
			{
				return this._commissionType;
			}
			set
			{
				if ((this._commissionType != value))
				{
					this.OnCommissionTypeChanging(value);
					this.SendPropertyChanging();
					this._commissionType = value;
					this.SendPropertyChanged("CommissionType");
					this.OnCommissionTypeChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_isEnable", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsEnable
		{
			get
			{
				return this._isEnable;
			}
			set
			{
				if ((this._isEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._isEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(255)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_phone", DbType="nvarchar(250)")]
		public string Phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_mobile", DbType="nvarchar(250)")]
		public string Mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_fax", DbType="nvarchar(200)")]
		public string Fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_tradeNum", DbType="int NOT NULL")]
		public int TradeNum
		{
			get
			{
				return this._tradeNum;
			}
			set
			{
				if ((this._tradeNum != value))
				{
					this.OnTradeNumChanging(value);
					this.SendPropertyChanging();
					this._tradeNum = value;
					this.SendPropertyChanged("TradeNum");
					this.OnTradeNumChanged();
				}
			}
		}
		
		[Column(Storage="_satNum", DbType="decimal(8,6) NOT NULL")]
		public decimal SatNum
		{
			get
			{
				return this._satNum;
			}
			set
			{
				if ((this._satNum != value))
				{
					this.OnSatNumChanging(value);
					this.SendPropertyChanging();
					this._satNum = value;
					this.SendPropertyChanged("SatNum");
					this.OnSatNumChanged();
				}
			}
		}
		
		[Column(Storage="_complaintNum", DbType="int NOT NULL")]
		public int ComplaintNum
		{
			get
			{
				return this._complaintNum;
			}
			set
			{
				if ((this._complaintNum != value))
				{
					this.OnComplaintNumChanging(value);
					this.SendPropertyChanging();
					this._complaintNum = value;
					this.SendPropertyChanged("ComplaintNum");
					this.OnComplaintNumChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_pageHeadFile", DbType="nvarchar(255)")]
		public string PageHeadFile
		{
			get
			{
				return this._pageHeadFile;
			}
			set
			{
				if ((this._pageHeadFile != value))
				{
					this.OnPageHeadFileChanging(value);
					this.SendPropertyChanging();
					this._pageHeadFile = value;
					this.SendPropertyChanged("PageHeadFile");
					this.OnPageHeadFileChanged();
				}
			}
		}
		
		[Column(Storage="_pageFootFile", DbType="nvarchar(255)")]
		public string PageFootFile
		{
			get
			{
				return this._pageFootFile;
			}
			set
			{
				if ((this._pageFootFile != value))
				{
					this.OnPageFootFileChanging(value);
					this.SendPropertyChanging();
					this._pageFootFile = value;
					this.SendPropertyChanged("PageFootFile");
					this.OnPageFootFileChanged();
				}
			}
		}
		
		[Column(Storage="_templateFile", DbType="nvarchar(255)")]
		public string TemplateFile
		{
			get
			{
				return this._templateFile;
			}
			set
			{
				if ((this._templateFile != value))
				{
					this.OnTemplateFileChanging(value);
					this.SendPropertyChanging();
					this._templateFile = value;
					this.SendPropertyChanged("TemplateFile");
					this.OnTemplateFileChanged();
				}
			}
		}
		
		[Column(Storage="_customerStamp", DbType="nvarchar(255)")]
		public string CustomerStamp
		{
			get
			{
				return this._customerStamp;
			}
			set
			{
				if ((this._customerStamp != value))
				{
					this.OnCustomerStampChanging(value);
					this.SendPropertyChanging();
					this._customerStamp = value;
					this.SendPropertyChanged("CustomerStamp");
					this.OnCustomerStampChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_brandId", DbType="int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._brandId;
			}
			set
			{
				if ((this._brandId != value))
				{
					this.OnBrandIdChanging(value);
					this.SendPropertyChanging();
					this._brandId = value;
					this.SendPropertyChanged("BrandId");
					this.OnBrandIdChanged();
				}
			}
		}
		
		[Association(Name="Customer_CustomerContactInfo", Storage="_customerContactInfoList", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<CustomerContactInfo> CustomerContactInfoList
		{
			get
			{
				return this._customerContactInfoList;
			}
			set
			{
				this._customerContactInfoList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customerContactInfoList(CustomerContactInfo entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_customerContactInfoList(CustomerContactInfo entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[Table(Name="dbo.tbl_CustomerCallBack")]
	public partial class CustomerCallBack : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customerId;
		
		private string _customerName;
		
		private string _customerUser;
		
		private int _callBackerId;
		
		private string _callBacker;
		
		private System.DateTime _time;
		
		private string _remark;
		
		private string _isCallBack;
		
		private int _companyId;
		
		private decimal _result;
		
		private System.DateTime _regTime;
		
		private EntitySet<CustomerCallBackResult> _customerCareforCustomerCallBackResultList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerUserChanging(string value);
    partial void OnCustomerUserChanged();
    partial void OnCallBackerIdChanging(int value);
    partial void OnCallBackerIdChanged();
    partial void OnCallBackerChanging(string value);
    partial void OnCallBackerChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsCallBackChanging(string value);
    partial void OnIsCallBackChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnResultChanging(decimal value);
    partial void OnResultChanged();
    partial void OnRegTimeChanging(System.DateTime value);
    partial void OnRegTimeChanged();
    #endregion
		
		public CustomerCallBack()
		{
			this._customerCareforCustomerCallBackResultList = new EntitySet<CustomerCallBackResult>(new Action<CustomerCallBackResult>(this.attach_customerCareforCustomerCallBackResultList), new Action<CustomerCallBackResult>(this.detach_customerCareforCustomerCallBackResultList));
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_customerId", DbType="int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[Column(Storage="_customerName", DbType="nvarchar(250)")]
		public string CustomerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[Column(Storage="_customerUser", DbType="nvarchar(250)")]
		public string CustomerUser
		{
			get
			{
				return this._customerUser;
			}
			set
			{
				if ((this._customerUser != value))
				{
					this.OnCustomerUserChanging(value);
					this.SendPropertyChanging();
					this._customerUser = value;
					this.SendPropertyChanged("CustomerUser");
					this.OnCustomerUserChanged();
				}
			}
		}
		
		[Column(Storage="_callBackerId", DbType="int NOT NULL")]
		public int CallBackerId
		{
			get
			{
				return this._callBackerId;
			}
			set
			{
				if ((this._callBackerId != value))
				{
					this.OnCallBackerIdChanging(value);
					this.SendPropertyChanging();
					this._callBackerId = value;
					this.SendPropertyChanged("CallBackerId");
					this.OnCallBackerIdChanged();
				}
			}
		}
		
		[Column(Storage="_callBacker", DbType="nvarchar(250)")]
		public string CallBacker
		{
			get
			{
				return this._callBacker;
			}
			set
			{
				if ((this._callBacker != value))
				{
					this.OnCallBackerChanging(value);
					this.SendPropertyChanging();
					this._callBacker = value;
					this.SendPropertyChanged("CallBacker");
					this.OnCallBackerChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="datetime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(250)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_isCallBack", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsCallBack
		{
			get
			{
				return this._isCallBack;
			}
			set
			{
				if ((this._isCallBack != value))
				{
					this.OnIsCallBackChanging(value);
					this.SendPropertyChanging();
					this._isCallBack = value;
					this.SendPropertyChanged("IsCallBack");
					this.OnIsCallBackChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_result", DbType="decimal(8,6) NOT NULL")]
		public decimal Result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[Column(Storage="_regTime", DbType="datetime NOT NULL")]
		public System.DateTime RegTime
		{
			get
			{
				return this._regTime;
			}
			set
			{
				if ((this._regTime != value))
				{
					this.OnRegTimeChanging(value);
					this.SendPropertyChanging();
					this._regTime = value;
					this.SendPropertyChanged("RegTime");
					this.OnRegTimeChanged();
				}
			}
		}
		
		[Association(Name="CustomerCallBack_CustomerCallBackResult", Storage="_customerCareforCustomerCallBackResultList", ThisKey="Id", OtherKey="CustomerCareforId")]
		public EntitySet<CustomerCallBackResult> CustomerCareforCustomerCallBackResultList
		{
			get
			{
				return this._customerCareforCustomerCallBackResultList;
			}
			set
			{
				this._customerCareforCustomerCallBackResultList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customerCareforCustomerCallBackResultList(CustomerCallBackResult entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCareforCustomerCallBack = this;
		}
		
		private void detach_customerCareforCustomerCallBackResultList(CustomerCallBackResult entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCareforCustomerCallBack = null;
		}
	}
	
	[Table(Name="dbo.tbl_CustomerCallBackResult")]
	public partial class CustomerCallBackResult : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customerCareforId;
		
		private int _routeID;
		
		private string _routeName;
		
		private System.DateTime _departureTime;
		
		private byte _journey;
		
		private byte _meals;
		
		private byte _hotel;
		
		private byte _spot;
		
		private byte _guide;
		
		private byte _shopping;
		
		private byte _car;
		
		private string _remark;
		
		private EntityRef<CustomerCallBack> _customerCareforCustomerCallBack;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerCareforIdChanging(int value);
    partial void OnCustomerCareforIdChanged();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnDepartureTimeChanging(System.DateTime value);
    partial void OnDepartureTimeChanged();
    partial void OnJourneyChanging(byte value);
    partial void OnJourneyChanged();
    partial void OnMealsChanging(byte value);
    partial void OnMealsChanged();
    partial void OnHotelChanging(byte value);
    partial void OnHotelChanged();
    partial void OnSpotChanging(byte value);
    partial void OnSpotChanged();
    partial void OnGuideChanging(byte value);
    partial void OnGuideChanged();
    partial void OnShoppingChanging(byte value);
    partial void OnShoppingChanged();
    partial void OnCarChanging(byte value);
    partial void OnCarChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public CustomerCallBackResult()
		{
			this._customerCareforCustomerCallBack = default(EntityRef<CustomerCallBack>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_customerCareforId", DbType="int NOT NULL")]
		public int CustomerCareforId
		{
			get
			{
				return this._customerCareforId;
			}
			set
			{
				if ((this._customerCareforId != value))
				{
					if (this._customerCareforCustomerCallBack.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCareforIdChanging(value);
					this.SendPropertyChanging();
					this._customerCareforId = value;
					this.SendPropertyChanged("CustomerCareforId");
					this.OnCustomerCareforIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeID", DbType="int NOT NULL")]
		public int RouteID
		{
			get
			{
				return this._routeID;
			}
			set
			{
				if ((this._routeID != value))
				{
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._routeID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(250)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._routeName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[Column(Storage="_departureTime", DbType="datetime NOT NULL")]
		public System.DateTime DepartureTime
		{
			get
			{
				return this._departureTime;
			}
			set
			{
				if ((this._departureTime != value))
				{
					this.OnDepartureTimeChanging(value);
					this.SendPropertyChanging();
					this._departureTime = value;
					this.SendPropertyChanged("DepartureTime");
					this.OnDepartureTimeChanged();
				}
			}
		}
		
		[Column(Storage="_journey", DbType="tinyint NOT NULL")]
		public byte Journey
		{
			get
			{
				return this._journey;
			}
			set
			{
				if ((this._journey != value))
				{
					this.OnJourneyChanging(value);
					this.SendPropertyChanging();
					this._journey = value;
					this.SendPropertyChanged("Journey");
					this.OnJourneyChanged();
				}
			}
		}
		
		[Column(Name="meals", Storage="_meals", DbType="tinyint NOT NULL")]
		public byte Meals
		{
			get
			{
				return this._meals;
			}
			set
			{
				if ((this._meals != value))
				{
					this.OnMealsChanging(value);
					this.SendPropertyChanging();
					this._meals = value;
					this.SendPropertyChanged("Meals");
					this.OnMealsChanged();
				}
			}
		}
		
		[Column(Storage="_hotel", DbType="tinyint NOT NULL")]
		public byte Hotel
		{
			get
			{
				return this._hotel;
			}
			set
			{
				if ((this._hotel != value))
				{
					this.OnHotelChanging(value);
					this.SendPropertyChanging();
					this._hotel = value;
					this.SendPropertyChanged("Hotel");
					this.OnHotelChanged();
				}
			}
		}
		
		[Column(Storage="_spot", DbType="tinyint NOT NULL")]
		public byte Spot
		{
			get
			{
				return this._spot;
			}
			set
			{
				if ((this._spot != value))
				{
					this.OnSpotChanging(value);
					this.SendPropertyChanging();
					this._spot = value;
					this.SendPropertyChanged("Spot");
					this.OnSpotChanged();
				}
			}
		}
		
		[Column(Storage="_guide", DbType="tinyint NOT NULL")]
		public byte Guide
		{
			get
			{
				return this._guide;
			}
			set
			{
				if ((this._guide != value))
				{
					this.OnGuideChanging(value);
					this.SendPropertyChanging();
					this._guide = value;
					this.SendPropertyChanged("Guide");
					this.OnGuideChanged();
				}
			}
		}
		
		[Column(Storage="_shopping", DbType="tinyint NOT NULL")]
		public byte Shopping
		{
			get
			{
				return this._shopping;
			}
			set
			{
				if ((this._shopping != value))
				{
					this.OnShoppingChanging(value);
					this.SendPropertyChanging();
					this._shopping = value;
					this.SendPropertyChanged("Shopping");
					this.OnShoppingChanged();
				}
			}
		}
		
		[Column(Storage="_car", DbType="tinyint NOT NULL")]
		public byte Car
		{
			get
			{
				return this._car;
			}
			set
			{
				if ((this._car != value))
				{
					this.OnCarChanging(value);
					this.SendPropertyChanging();
					this._car = value;
					this.SendPropertyChanged("Car");
					this.OnCarChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(255)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="CustomerCallBack_CustomerCallBackResult", Storage="_customerCareforCustomerCallBack", ThisKey="CustomerCareforId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CustomerCallBack CustomerCareforCustomerCallBack
		{
			get
			{
				return this._customerCareforCustomerCallBack.Entity;
			}
			set
			{
				CustomerCallBack previousValue = this._customerCareforCustomerCallBack.Entity;
				if (((previousValue != value) 
							|| (this._customerCareforCustomerCallBack.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customerCareforCustomerCallBack.Entity = null;
						previousValue.CustomerCareforCustomerCallBackResultList.Remove(this);
					}
					this._customerCareforCustomerCallBack.Entity = value;
					if ((value != null))
					{
						value.CustomerCareforCustomerCallBackResultList.Add(this);
						this._customerCareforId = value.Id;
					}
					else
					{
						this._customerCareforId = default(int);
					}
					this.SendPropertyChanged("CustomerCareforCustomerCallBack");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerCarefor")]
	public partial class CustomerCarefor : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _companyId;
		
		private string _mobileCode;
		
		private string _isMatchCustomerInfo;
		
		private string _isMatchSupplierInfo;
		
		private string _isMatchDepartmentInfo;
		
		private string _content;
		
		private System.Nullable<System.DateTime> _time;
		
		private int _fixType;
		
		private int _channelId;
		
		private string _isEnabled;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _isSeded;
		
		private int _id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnMobileCodeChanging(string value);
    partial void OnMobileCodeChanged();
    partial void OnIsMatchCustomerInfoChanging(string value);
    partial void OnIsMatchCustomerInfoChanged();
    partial void OnIsMatchSupplierInfoChanging(string value);
    partial void OnIsMatchSupplierInfoChanged();
    partial void OnIsMatchDepartmentInfoChanging(string value);
    partial void OnIsMatchDepartmentInfoChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnFixTypeChanging(int value);
    partial void OnFixTypeChanged();
    partial void OnChannelIdChanging(int value);
    partial void OnChannelIdChanged();
    partial void OnIsEnabledChanging(string value);
    partial void OnIsEnabledChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnIsSededChanging(string value);
    partial void OnIsSededChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public CustomerCarefor()
		{
			OnCreated();
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_mobileCode", DbType="nvarchar(MAX)")]
		public string MobileCode
		{
			get
			{
				return this._mobileCode;
			}
			set
			{
				if ((this._mobileCode != value))
				{
					this.OnMobileCodeChanging(value);
					this.SendPropertyChanging();
					this._mobileCode = value;
					this.SendPropertyChanged("MobileCode");
					this.OnMobileCodeChanged();
				}
			}
		}
		
		[Column(Storage="_isMatchCustomerInfo", DbType="char(1)")]
		public string IsMatchCustomerInfo
		{
			get
			{
				return this._isMatchCustomerInfo;
			}
			set
			{
				if ((this._isMatchCustomerInfo != value))
				{
					this.OnIsMatchCustomerInfoChanging(value);
					this.SendPropertyChanging();
					this._isMatchCustomerInfo = value;
					this.SendPropertyChanged("IsMatchCustomerInfo");
					this.OnIsMatchCustomerInfoChanged();
				}
			}
		}
		
		[Column(Storage="_isMatchSupplierInfo", DbType="char(1)")]
		public string IsMatchSupplierInfo
		{
			get
			{
				return this._isMatchSupplierInfo;
			}
			set
			{
				if ((this._isMatchSupplierInfo != value))
				{
					this.OnIsMatchSupplierInfoChanging(value);
					this.SendPropertyChanging();
					this._isMatchSupplierInfo = value;
					this.SendPropertyChanged("IsMatchSupplierInfo");
					this.OnIsMatchSupplierInfoChanged();
				}
			}
		}
		
		[Column(Storage="_isMatchDepartmentInfo", DbType="char(1)")]
		public string IsMatchDepartmentInfo
		{
			get
			{
				return this._isMatchDepartmentInfo;
			}
			set
			{
				if ((this._isMatchDepartmentInfo != value))
				{
					this.OnIsMatchDepartmentInfoChanging(value);
					this.SendPropertyChanging();
					this._isMatchDepartmentInfo = value;
					this.SendPropertyChanged("IsMatchDepartmentInfo");
					this.OnIsMatchDepartmentInfoChanged();
				}
			}
		}
		
		[Column(Storage="_content", DbType="nvarchar(MAX)")]
		public string Content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="datetime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_fixType", DbType="int NOT NULL")]
		public int FixType
		{
			get
			{
				return this._fixType;
			}
			set
			{
				if ((this._fixType != value))
				{
					this.OnFixTypeChanging(value);
					this.SendPropertyChanging();
					this._fixType = value;
					this.SendPropertyChanged("FixType");
					this.OnFixTypeChanged();
				}
			}
		}
		
		[Column(Storage="_channelId", DbType="int NOT NULL")]
		public int ChannelId
		{
			get
			{
				return this._channelId;
			}
			set
			{
				if ((this._channelId != value))
				{
					this.OnChannelIdChanging(value);
					this.SendPropertyChanging();
					this._channelId = value;
					this.SendPropertyChanged("ChannelId");
					this.OnChannelIdChanged();
				}
			}
		}
		
		[Column(Storage="_isEnabled", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsEnabled
		{
			get
			{
				return this._isEnabled;
			}
			set
			{
				if ((this._isEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._isEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isSeded", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsSeded
		{
			get
			{
				return this._isSeded;
			}
			set
			{
				if ((this._isSeded != value))
				{
					this.OnIsSededChanging(value);
					this.SendPropertyChanging();
					this._isSeded = value;
					this.SendPropertyChanged("IsSeded");
					this.OnIsSededChanged();
				}
			}
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerContactInfo")]
	public partial class CustomerContactInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customerId;
		
		private string _jobId;
		
		private string _departmentId;
		
		private int _userId;
		
		private string _sex;
		
		private string _name;
		
		private string _tel;
		
		private string _mobile;
		
		private string _qq;
		
		private System.Nullable<System.DateTime> _birthDay;
		
		private string _email;
		
		private string _spetialty;
		
		private string _hobby;
		
		private string _remark;
		
		private int _companyId;
		
		private EntityRef<Customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnJobIdChanging(string value);
    partial void OnJobIdChanged();
    partial void OnDepartmentIdChanging(string value);
    partial void OnDepartmentIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnQqChanging(string value);
    partial void OnQqChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSpetialtyChanging(string value);
    partial void OnSpetialtyChanged();
    partial void OnHobbyChanging(string value);
    partial void OnHobbyChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public CustomerContactInfo()
		{
			this._customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_customerId", DbType="int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[Column(Storage="_jobId", DbType="nvarchar(255)")]
		public string JobId
		{
			get
			{
				return this._jobId;
			}
			set
			{
				if ((this._jobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._jobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="nvarchar(255)")]
		public string DepartmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_userId", DbType="int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_sex", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="nvarchar(100)")]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_tel", DbType="nvarchar(200)")]
		public string Tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_mobile", DbType="nvarchar(200)")]
		public string Mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Name="qq", Storage="_qq", DbType="nvarchar(200)")]
		public string Qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnQqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("Qq");
					this.OnQqChanged();
				}
			}
		}
		
		[Column(Storage="_birthDay", DbType="datetime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._birthDay;
			}
			set
			{
				if ((this._birthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._birthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="nvarchar(500)")]
		public string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_spetialty", DbType="nvarchar(250)")]
		public string Spetialty
		{
			get
			{
				return this._spetialty;
			}
			set
			{
				if ((this._spetialty != value))
				{
					this.OnSpetialtyChanging(value);
					this.SendPropertyChanging();
					this._spetialty = value;
					this.SendPropertyChanged("Spetialty");
					this.OnSpetialtyChanged();
				}
			}
		}
		
		[Column(Storage="_hobby", DbType="nvarchar(255)")]
		public string Hobby
		{
			get
			{
				return this._hobby;
			}
			set
			{
				if ((this._hobby != value))
				{
					this.OnHobbyChanging(value);
					this.SendPropertyChanging();
					this._hobby = value;
					this.SendPropertyChanged("Hobby");
					this.OnHobbyChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(255)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Association(Name="Customer_CustomerContactInfo", Storage="_customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Customer Customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				Customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.CustomerContactInfoList.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.CustomerContactInfoList.Add(this);
						this._customerId = value.Id;
					}
					else
					{
						this._customerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerLeague")]
	public partial class CustomerLeague : LinqEntityBase
	{
		
		private string _custormerId;
		
		private string _operatorName;
		
		private int _operatorID;
		
		private string _refundReason;
		
		private System.Nullable<System.DateTime> _issueTime;
		
		private decimal _refundAmount;
		
		public CustomerLeague()
		{
		}
		
		[Column(Storage="_custormerId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string CustormerId
		{
			get
			{
				return this._custormerId;
			}
			set
			{
				if ((this._custormerId != value))
				{
					this._custormerId = value;
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this._operatorName = value;
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this._operatorID = value;
				}
			}
		}
		
		[Column(Storage="_refundReason", DbType="nvarchar(500)")]
		public string RefundReason
		{
			get
			{
				return this._refundReason;
			}
			set
			{
				if ((this._refundReason != value))
				{
					this._refundReason = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime")]
		public System.Nullable<System.DateTime> IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_refundAmount", DbType="money NOT NULL")]
		public decimal RefundAmount
		{
			get
			{
				return this._refundAmount;
			}
			set
			{
				if ((this._refundAmount != value))
				{
					this._refundAmount = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerMarketing")]
	public partial class CustomerMarketing : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _time;
		
		private string _theme;
		
		private string _content;
		
		private string _participant;
		
		private string _effect;
		
		private string _sponsor;
		
		private byte _state;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnThemeChanging(string value);
    partial void OnThemeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnParticipantChanging(string value);
    partial void OnParticipantChanged();
    partial void OnEffectChanging(string value);
    partial void OnEffectChanged();
    partial void OnSponsorChanging(string value);
    partial void OnSponsorChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public CustomerMarketing()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="datetime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_theme", DbType="nvarchar(250)")]
		public string Theme
		{
			get
			{
				return this._theme;
			}
			set
			{
				if ((this._theme != value))
				{
					this.OnThemeChanging(value);
					this.SendPropertyChanging();
					this._theme = value;
					this.SendPropertyChanged("Theme");
					this.OnThemeChanged();
				}
			}
		}
		
		[Column(Storage="_content", DbType="nvarchar(MAX)")]
		public string Content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_participant", DbType="nvarchar(MAX)")]
		public string Participant
		{
			get
			{
				return this._participant;
			}
			set
			{
				if ((this._participant != value))
				{
					this.OnParticipantChanging(value);
					this.SendPropertyChanging();
					this._participant = value;
					this.SendPropertyChanged("Participant");
					this.OnParticipantChanged();
				}
			}
		}
		
		[Column(Storage="_effect", DbType="nvarchar(MAX)")]
		public string Effect
		{
			get
			{
				return this._effect;
			}
			set
			{
				if ((this._effect != value))
				{
					this.OnEffectChanging(value);
					this.SendPropertyChanging();
					this._effect = value;
					this.SendPropertyChanged("Effect");
					this.OnEffectChanged();
				}
			}
		}
		
		[Column(Storage="_sponsor", DbType="nvarchar(250)")]
		public string Sponsor
		{
			get
			{
				return this._sponsor;
			}
			set
			{
				if ((this._sponsor != value))
				{
					this.OnSponsorChanging(value);
					this.SendPropertyChanging();
					this._sponsor = value;
					this.SendPropertyChanged("Sponsor");
					this.OnSponsorChanged();
				}
			}
		}
		
		[Column(Storage="_state", DbType="tinyint NOT NULL")]
		public byte State
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerQuote")]
	public partial class CustomerQuote : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private int _routeId;
		
		private string _routeName;
		
		private int _customerId;
		
		private string _customerName;
		
		private string _contactName;
		
		private string _contactTel;
		
		private System.Nullable<System.DateTime> _leaveDate;
		
		private int _adultNumber;
		
		private int _childNumber;
		
		private string _specialClaim;
		
		private decimal _ticketAgio;
		
		private string _remark;
		
		private System.DateTime _issueTime;
		
		private byte _quoteState;
		
		private string _buildTourId;
		
		private System.Nullable<System.DateTime> _buildTime;
		
		private int _buileOperatorId;
		
		private string _isDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnRouteIdChanging(int value);
    partial void OnRouteIdChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveDateChanged();
    partial void OnAdultNumberChanging(int value);
    partial void OnAdultNumberChanged();
    partial void OnChildNumberChanging(int value);
    partial void OnChildNumberChanged();
    partial void OnSpecialClaimChanging(string value);
    partial void OnSpecialClaimChanged();
    partial void OnTicketAgioChanging(decimal value);
    partial void OnTicketAgioChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnQuoteStateChanging(byte value);
    partial void OnQuoteStateChanged();
    partial void OnBuildTourIdChanging(string value);
    partial void OnBuildTourIdChanged();
    partial void OnBuildTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBuildTimeChanged();
    partial void OnBuileOperatorIdChanging(int value);
    partial void OnBuileOperatorIdChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public CustomerQuote()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._routeId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(255)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._routeName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[Column(Storage="_customerId", DbType="int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[Column(Storage="_customerName", DbType="nvarchar(255)")]
		public string CustomerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(255)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(255)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._leaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[Column(Storage="_adultNumber", DbType="int NOT NULL")]
		public int AdultNumber
		{
			get
			{
				return this._adultNumber;
			}
			set
			{
				if ((this._adultNumber != value))
				{
					this.OnAdultNumberChanging(value);
					this.SendPropertyChanging();
					this._adultNumber = value;
					this.SendPropertyChanged("AdultNumber");
					this.OnAdultNumberChanged();
				}
			}
		}
		
		[Column(Storage="_childNumber", DbType="int NOT NULL")]
		public int ChildNumber
		{
			get
			{
				return this._childNumber;
			}
			set
			{
				if ((this._childNumber != value))
				{
					this.OnChildNumberChanging(value);
					this.SendPropertyChanging();
					this._childNumber = value;
					this.SendPropertyChanged("ChildNumber");
					this.OnChildNumberChanged();
				}
			}
		}
		
		[Column(Storage="_specialClaim", DbType="nvarchar(MAX)")]
		public string SpecialClaim
		{
			get
			{
				return this._specialClaim;
			}
			set
			{
				if ((this._specialClaim != value))
				{
					this.OnSpecialClaimChanging(value);
					this.SendPropertyChanging();
					this._specialClaim = value;
					this.SendPropertyChanged("SpecialClaim");
					this.OnSpecialClaimChanged();
				}
			}
		}
		
		[Column(Storage="_ticketAgio", DbType="decimal(8,6) NOT NULL")]
		public decimal TicketAgio
		{
			get
			{
				return this._ticketAgio;
			}
			set
			{
				if ((this._ticketAgio != value))
				{
					this.OnTicketAgioChanging(value);
					this.SendPropertyChanging();
					this._ticketAgio = value;
					this.SendPropertyChanged("TicketAgio");
					this.OnTicketAgioChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_quoteState", DbType="tinyint NOT NULL")]
		public byte QuoteState
		{
			get
			{
				return this._quoteState;
			}
			set
			{
				if ((this._quoteState != value))
				{
					this.OnQuoteStateChanging(value);
					this.SendPropertyChanging();
					this._quoteState = value;
					this.SendPropertyChanged("QuoteState");
					this.OnQuoteStateChanged();
				}
			}
		}
		
		[Column(Storage="_buildTourId", DbType="char(36)")]
		public string BuildTourId
		{
			get
			{
				return this._buildTourId;
			}
			set
			{
				if ((this._buildTourId != value))
				{
					this.OnBuildTourIdChanging(value);
					this.SendPropertyChanging();
					this._buildTourId = value;
					this.SendPropertyChanged("BuildTourId");
					this.OnBuildTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_buildTime", DbType="datetime")]
		public System.Nullable<System.DateTime> BuildTime
		{
			get
			{
				return this._buildTime;
			}
			set
			{
				if ((this._buildTime != value))
				{
					this.OnBuildTimeChanging(value);
					this.SendPropertyChanging();
					this._buildTime = value;
					this.SendPropertyChanged("BuildTime");
					this.OnBuildTimeChanged();
				}
			}
		}
		
		[Column(Storage="_buileOperatorId", DbType="int NOT NULL")]
		public int BuileOperatorId
		{
			get
			{
				return this._buileOperatorId;
			}
			set
			{
				if ((this._buileOperatorId != value))
				{
					this.OnBuileOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._buileOperatorId = value;
					this.SendPropertyChanged("BuileOperatorId");
					this.OnBuileOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerQuoteAsk")]
	public partial class CustomerQuoteAsk : LinqEntityBase
	{
		
		private int _quoteId;
		
		private int _itemType;
		
		private string _concreteAsk;
		
		public CustomerQuoteAsk()
		{
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="int NOT NULL")]
		public int ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this._itemType = value;
				}
			}
		}
		
		[Column(Storage="_concreteAsk", DbType="nvarchar(MAX)")]
		public string ConcreteAsk
		{
			get
			{
				return this._concreteAsk;
			}
			set
			{
				if ((this._concreteAsk != value))
				{
					this._concreteAsk = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerQuoteClaim")]
	public partial class CustomerQuoteClaim : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _quoteId;
		
		private string _quotePlan;
		
		private string _planAccessoryName;
		
		private string _planAccessory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuoteIdChanging(int value);
    partial void OnQuoteIdChanged();
    partial void OnQuotePlanChanging(string value);
    partial void OnQuotePlanChanged();
    partial void OnPlanAccessoryNameChanging(string value);
    partial void OnPlanAccessoryNameChanged();
    partial void OnPlanAccessoryChanging(string value);
    partial void OnPlanAccessoryChanged();
    #endregion
		
		public CustomerQuoteClaim()
		{
			OnCreated();
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._quoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[Column(Storage="_quotePlan", DbType="nvarchar(MAX)")]
		public string QuotePlan
		{
			get
			{
				return this._quotePlan;
			}
			set
			{
				if ((this._quotePlan != value))
				{
					this.OnQuotePlanChanging(value);
					this.SendPropertyChanging();
					this._quotePlan = value;
					this.SendPropertyChanged("QuotePlan");
					this.OnQuotePlanChanged();
				}
			}
		}
		
		[Column(Storage="_planAccessoryName", DbType="nvarchar(255)")]
		public string PlanAccessoryName
		{
			get
			{
				return this._planAccessoryName;
			}
			set
			{
				if ((this._planAccessoryName != value))
				{
					this.OnPlanAccessoryNameChanging(value);
					this.SendPropertyChanging();
					this._planAccessoryName = value;
					this.SendPropertyChanged("PlanAccessoryName");
					this.OnPlanAccessoryNameChanged();
				}
			}
		}
		
		[Column(Storage="_planAccessory", DbType="nvarchar(255)")]
		public string PlanAccessory
		{
			get
			{
				return this._planAccessory;
			}
			set
			{
				if ((this._planAccessory != value))
				{
					this.OnPlanAccessoryChanging(value);
					this.SendPropertyChanging();
					this._planAccessory = value;
					this.SendPropertyChanged("PlanAccessory");
					this.OnPlanAccessoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerQuotePrice")]
	public partial class CustomerQuotePrice : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _quoteId;
		
		private int _itemId;
		
		private string _reception;
		
		private decimal _localQuote;
		
		private decimal _myQuote;
		
		private decimal _sumMoney;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuoteIdChanging(int value);
    partial void OnQuoteIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnReceptionChanging(string value);
    partial void OnReceptionChanged();
    partial void OnLocalQuoteChanging(decimal value);
    partial void OnLocalQuoteChanged();
    partial void OnMyQuoteChanging(decimal value);
    partial void OnMyQuoteChanged();
    partial void OnSumMoneyChanging(decimal value);
    partial void OnSumMoneyChanged();
    #endregion
		
		public CustomerQuotePrice()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._quoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_reception", DbType="nvarchar(MAX)")]
		public string Reception
		{
			get
			{
				return this._reception;
			}
			set
			{
				if ((this._reception != value))
				{
					this.OnReceptionChanging(value);
					this.SendPropertyChanging();
					this._reception = value;
					this.SendPropertyChanged("Reception");
					this.OnReceptionChanged();
				}
			}
		}
		
		[Column(Storage="_localQuote", DbType="money NOT NULL")]
		public decimal LocalQuote
		{
			get
			{
				return this._localQuote;
			}
			set
			{
				if ((this._localQuote != value))
				{
					this.OnLocalQuoteChanging(value);
					this.SendPropertyChanging();
					this._localQuote = value;
					this.SendPropertyChanged("LocalQuote");
					this.OnLocalQuoteChanged();
				}
			}
		}
		
		[Column(Storage="_myQuote", DbType="money NOT NULL")]
		public decimal MyQuote
		{
			get
			{
				return this._myQuote;
			}
			set
			{
				if ((this._myQuote != value))
				{
					this.OnMyQuoteChanging(value);
					this.SendPropertyChanging();
					this._myQuote = value;
					this.SendPropertyChanged("MyQuote");
					this.OnMyQuoteChanged();
				}
			}
		}
		
		[Column(Storage="_sumMoney", DbType="money NOT NULL")]
		public decimal SumMoney
		{
			get
			{
				return this._sumMoney;
			}
			set
			{
				if ((this._sumMoney != value))
				{
					this.OnSumMoneyChanging(value);
					this.SendPropertyChanging();
					this._sumMoney = value;
					this.SendPropertyChanged("SumMoney");
					this.OnSumMoneyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerRefund")]
	public partial class CustomerRefund : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _custormerId;
		
		private string _routeName;
		
		private string _operatorName;
		
		private int _operatorID;
		
		private System.DateTime _flightTime;
		
		private string _sendPlace;
		
		private string _endPlace;
		
		private int _customerNum;
		
		private decimal _refundAmount;
		
		private byte _isRefund;
		
		private string _refundNote;
		
		private System.DateTime _issueTime;
		
		private EntityRef<TourOrderCustomer> _custormerTourOrderCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCustormerIdChanging(string value);
    partial void OnCustormerIdChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnOperatorIDChanging(int value);
    partial void OnOperatorIDChanged();
    partial void OnFlightTimeChanging(System.DateTime value);
    partial void OnFlightTimeChanged();
    partial void OnSendPlaceChanging(string value);
    partial void OnSendPlaceChanged();
    partial void OnEndPlaceChanging(string value);
    partial void OnEndPlaceChanged();
    partial void OnCustomerNumChanging(int value);
    partial void OnCustomerNumChanged();
    partial void OnRefundAmountChanging(decimal value);
    partial void OnRefundAmountChanged();
    partial void OnIsRefundChanging(byte value);
    partial void OnIsRefundChanged();
    partial void OnRefundNoteChanging(string value);
    partial void OnRefundNoteChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public CustomerRefund()
		{
			this._custormerTourOrderCustomer = default(EntityRef<TourOrderCustomer>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_custormerId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string CustormerId
		{
			get
			{
				return this._custormerId;
			}
			set
			{
				if ((this._custormerId != value))
				{
					if (this._custormerTourOrderCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustormerIdChanging(value);
					this.SendPropertyChanging();
					this._custormerId = value;
					this.SendPropertyChanged("CustormerId");
					this.OnCustormerIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(250)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._routeName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._operatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_flightTime", DbType="datetime NOT NULL")]
		public System.DateTime FlightTime
		{
			get
			{
				return this._flightTime;
			}
			set
			{
				if ((this._flightTime != value))
				{
					this.OnFlightTimeChanging(value);
					this.SendPropertyChanging();
					this._flightTime = value;
					this.SendPropertyChanged("FlightTime");
					this.OnFlightTimeChanged();
				}
			}
		}
		
		[Column(Storage="_sendPlace", DbType="nvarchar(100)")]
		public string SendPlace
		{
			get
			{
				return this._sendPlace;
			}
			set
			{
				if ((this._sendPlace != value))
				{
					this.OnSendPlaceChanging(value);
					this.SendPropertyChanging();
					this._sendPlace = value;
					this.SendPropertyChanged("SendPlace");
					this.OnSendPlaceChanged();
				}
			}
		}
		
		[Column(Storage="_endPlace", DbType="nvarchar(100)")]
		public string EndPlace
		{
			get
			{
				return this._endPlace;
			}
			set
			{
				if ((this._endPlace != value))
				{
					this.OnEndPlaceChanging(value);
					this.SendPropertyChanging();
					this._endPlace = value;
					this.SendPropertyChanged("EndPlace");
					this.OnEndPlaceChanged();
				}
			}
		}
		
		[Column(Storage="_customerNum", DbType="int NOT NULL")]
		public int CustomerNum
		{
			get
			{
				return this._customerNum;
			}
			set
			{
				if ((this._customerNum != value))
				{
					this.OnCustomerNumChanging(value);
					this.SendPropertyChanging();
					this._customerNum = value;
					this.SendPropertyChanged("CustomerNum");
					this.OnCustomerNumChanged();
				}
			}
		}
		
		[Column(Storage="_refundAmount", DbType="money NOT NULL")]
		public decimal RefundAmount
		{
			get
			{
				return this._refundAmount;
			}
			set
			{
				if ((this._refundAmount != value))
				{
					this.OnRefundAmountChanging(value);
					this.SendPropertyChanging();
					this._refundAmount = value;
					this.SendPropertyChanged("RefundAmount");
					this.OnRefundAmountChanged();
				}
			}
		}
		
		[Column(Storage="_isRefund", DbType="tinyint NOT NULL")]
		public byte IsRefund
		{
			get
			{
				return this._isRefund;
			}
			set
			{
				if ((this._isRefund != value))
				{
					this.OnIsRefundChanging(value);
					this.SendPropertyChanging();
					this._isRefund = value;
					this.SendPropertyChanged("IsRefund");
					this.OnIsRefundChanged();
				}
			}
		}
		
		[Column(Storage="_refundNote", DbType="nvarchar(1000)")]
		public string RefundNote
		{
			get
			{
				return this._refundNote;
			}
			set
			{
				if ((this._refundNote != value))
				{
					this.OnRefundNoteChanging(value);
					this.SendPropertyChanging();
					this._refundNote = value;
					this.SendPropertyChanged("RefundNote");
					this.OnRefundNoteChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Association(Name="TourOrderCustomer_CustomerRefund", Storage="_custormerTourOrderCustomer", ThisKey="CustormerId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public TourOrderCustomer CustormerTourOrderCustomer
		{
			get
			{
				return this._custormerTourOrderCustomer.Entity;
			}
			set
			{
				TourOrderCustomer previousValue = this._custormerTourOrderCustomer.Entity;
				if (((previousValue != value) 
							|| (this._custormerTourOrderCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._custormerTourOrderCustomer.Entity = null;
						previousValue.CustormerCustomerRefundList.Remove(this);
					}
					this._custormerTourOrderCustomer.Entity = value;
					if ((value != null))
					{
						value.CustormerCustomerRefundList.Add(this);
						this._custormerId = value.Id;
					}
					else
					{
						this._custormerId = default(string);
					}
					this.SendPropertyChanged("CustormerTourOrderCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_CustomerSpecialService")]
	public partial class CustomerSpecialService : LinqEntityBase
	{
		
		private string _custormerId;
		
		private string _projectName;
		
		private string _serviceDetail;
		
		private byte _isAdd;
		
		private decimal _fee;
		
		private System.DateTime _issueTime;
		
		public CustomerSpecialService()
		{
		}
		
		[Column(Storage="_custormerId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string CustormerId
		{
			get
			{
				return this._custormerId;
			}
			set
			{
				if ((this._custormerId != value))
				{
					this._custormerId = value;
				}
			}
		}
		
		[Column(Storage="_projectName", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string ProjectName
		{
			get
			{
				return this._projectName;
			}
			set
			{
				if ((this._projectName != value))
				{
					this._projectName = value;
				}
			}
		}
		
		[Column(Storage="_serviceDetail", DbType="nvarchar(500)")]
		public string ServiceDetail
		{
			get
			{
				return this._serviceDetail;
			}
			set
			{
				if ((this._serviceDetail != value))
				{
					this._serviceDetail = value;
				}
			}
		}
		
		[Column(Storage="_isAdd", DbType="tinyint NOT NULL")]
		public byte IsAdd
		{
			get
			{
				return this._isAdd;
			}
			set
			{
				if ((this._isAdd != value))
				{
					this._isAdd = value;
				}
			}
		}
		
		[Column(Storage="_fee", DbType="decimal(18,0) NOT NULL")]
		public decimal Fee
		{
			get
			{
				return this._fee;
			}
			set
			{
				if ((this._fee != value))
				{
					this._fee = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tbl_Document")]
	public partial class Document : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _documentId;
		
		private int _companyId;
		
		private string _documentName;
		
		private string _filePath;
		
		private int _operatorId;
		
		private string _operatorName;
		
		private System.DateTime _createTime;
		
		private string _isDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIdChanging(int value);
    partial void OnDocumentIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public Document()
		{
			OnCreated();
		}
		
		[Column(Storage="_documentId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentId
		{
			get
			{
				return this._documentId;
			}
			set
			{
				if ((this._documentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._documentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_documentName", DbType="nvarchar(255)")]
		public string DocumentName
		{
			get
			{
				return this._documentName;
			}
			set
			{
				if ((this._documentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._documentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(255)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_DutyManager")]
	public partial class DutyManager : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _jobName;
		
		private string _help;
		
		private string _requirement;
		
		private string _remark;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnJobNameChanging(string value);
    partial void OnJobNameChanged();
    partial void OnHelpChanging(string value);
    partial void OnHelpChanged();
    partial void OnRequirementChanging(string value);
    partial void OnRequirementChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public DutyManager()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_jobName", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		public string JobName
		{
			get
			{
				return this._jobName;
			}
			set
			{
				if ((this._jobName != value))
				{
					this.OnJobNameChanging(value);
					this.SendPropertyChanging();
					this._jobName = value;
					this.SendPropertyChanged("JobName");
					this.OnJobNameChanged();
				}
			}
		}
		
		[Column(Storage="_help", DbType="nvarchar(1000)")]
		public string Help
		{
			get
			{
				return this._help;
			}
			set
			{
				if ((this._help != value))
				{
					this.OnHelpChanging(value);
					this.SendPropertyChanging();
					this._help = value;
					this.SendPropertyChanged("Help");
					this.OnHelpChanged();
				}
			}
		}
		
		[Column(Storage="_requirement", DbType="nvarchar(1000)")]
		public string Requirement
		{
			get
			{
				return this._requirement;
			}
			set
			{
				if ((this._requirement != value))
				{
					this.OnRequirementChanging(value);
					this.SendPropertyChanging();
					this._requirement = value;
					this.SendPropertyChanged("Requirement");
					this.OnRequirementChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_EraseAccount")]
	public partial class EraseAccount : LinqEntityBase
	{
		
		private int _companyId;
		
		private string _orderId;
		
		private decimal _total;
		
		private int _registId;
		
		public EraseAccount()
		{
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_orderId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string OrderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					this._orderId = value;
				}
			}
		}
		
		[Column(Storage="_total", DbType="money NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this._total = value;
				}
			}
		}
		
		[Column(Storage="_registId", DbType="int NOT NULL")]
		public int RegistId
		{
			get
			{
				return this._registId;
			}
			set
			{
				if ((this._registId != value))
				{
					this._registId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tbl_FinancialPayInfo")]
	public partial class FinancialPayInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private string _itemId;
		
		private byte _itemType;
		
		private string _receiveId;
		
		private byte _receiveType;
		
		private int _receiveCompanyId;
		
		private string _receiveCompanyName;
		
		private System.DateTime _paymentDate;
		
		private int _staffNo;
		
		private string _staffName;
		
		private decimal _paymentAmount;
		
		private byte _paymentType;
		
		private string _isBill;
		
		private decimal _billAmount;
		
		private string _billNo;
		
		private string _remark;
		
		private string _isChecked;
		
		private int _operatorID;
		
		private System.DateTime _issueTime;
		
		private int _checkerId;
		
		private string _isPay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnItemTypeChanging(byte value);
    partial void OnItemTypeChanged();
    partial void OnReceiveIdChanging(string value);
    partial void OnReceiveIdChanged();
    partial void OnReceiveTypeChanging(byte value);
    partial void OnReceiveTypeChanged();
    partial void OnReceiveCompanyIdChanging(int value);
    partial void OnReceiveCompanyIdChanged();
    partial void OnReceiveCompanyNameChanging(string value);
    partial void OnReceiveCompanyNameChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnStaffNoChanging(int value);
    partial void OnStaffNoChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnPaymentAmountChanging(decimal value);
    partial void OnPaymentAmountChanged();
    partial void OnPaymentTypeChanging(byte value);
    partial void OnPaymentTypeChanged();
    partial void OnIsBillChanging(string value);
    partial void OnIsBillChanged();
    partial void OnBillAmountChanging(decimal value);
    partial void OnBillAmountChanged();
    partial void OnBillNoChanging(string value);
    partial void OnBillNoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsCheckedChanging(string value);
    partial void OnIsCheckedChanged();
    partial void OnOperatorIDChanging(int value);
    partial void OnOperatorIDChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnCheckerIdChanging(int value);
    partial void OnCheckerIdChanged();
    partial void OnIsPayChanging(string value);
    partial void OnIsPayChanged();
    #endregion
		
		public FinancialPayInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="tinyint NOT NULL")]
		public byte ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[Column(Storage="_receiveId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string ReceiveId
		{
			get
			{
				return this._receiveId;
			}
			set
			{
				if ((this._receiveId != value))
				{
					this.OnReceiveIdChanging(value);
					this.SendPropertyChanging();
					this._receiveId = value;
					this.SendPropertyChanged("ReceiveId");
					this.OnReceiveIdChanged();
				}
			}
		}
		
		[Column(Storage="_receiveType", DbType="tinyint NOT NULL")]
		public byte ReceiveType
		{
			get
			{
				return this._receiveType;
			}
			set
			{
				if ((this._receiveType != value))
				{
					this.OnReceiveTypeChanging(value);
					this.SendPropertyChanging();
					this._receiveType = value;
					this.SendPropertyChanged("ReceiveType");
					this.OnReceiveTypeChanged();
				}
			}
		}
		
		[Column(Storage="_receiveCompanyId", DbType="int NOT NULL")]
		public int ReceiveCompanyId
		{
			get
			{
				return this._receiveCompanyId;
			}
			set
			{
				if ((this._receiveCompanyId != value))
				{
					this.OnReceiveCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._receiveCompanyId = value;
					this.SendPropertyChanged("ReceiveCompanyId");
					this.OnReceiveCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_receiveCompanyName", DbType="nvarchar(100)")]
		public string ReceiveCompanyName
		{
			get
			{
				return this._receiveCompanyName;
			}
			set
			{
				if ((this._receiveCompanyName != value))
				{
					this.OnReceiveCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._receiveCompanyName = value;
					this.SendPropertyChanged("ReceiveCompanyName");
					this.OnReceiveCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_paymentDate", DbType="datetime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._paymentDate;
			}
			set
			{
				if ((this._paymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._paymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[Column(Storage="_staffNo", DbType="int NOT NULL")]
		public int StaffNo
		{
			get
			{
				return this._staffNo;
			}
			set
			{
				if ((this._staffNo != value))
				{
					this.OnStaffNoChanging(value);
					this.SendPropertyChanging();
					this._staffNo = value;
					this.SendPropertyChanged("StaffNo");
					this.OnStaffNoChanged();
				}
			}
		}
		
		[Column(Storage="_staffName", DbType="nvarchar(100)")]
		public string StaffName
		{
			get
			{
				return this._staffName;
			}
			set
			{
				if ((this._staffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._staffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[Column(Storage="_paymentAmount", DbType="money NOT NULL")]
		public decimal PaymentAmount
		{
			get
			{
				return this._paymentAmount;
			}
			set
			{
				if ((this._paymentAmount != value))
				{
					this.OnPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._paymentAmount = value;
					this.SendPropertyChanged("PaymentAmount");
					this.OnPaymentAmountChanged();
				}
			}
		}
		
		[Column(Storage="_paymentType", DbType="tinyint NOT NULL")]
		public byte PaymentType
		{
			get
			{
				return this._paymentType;
			}
			set
			{
				if ((this._paymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._paymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_isBill", DbType="char(1)")]
		public string IsBill
		{
			get
			{
				return this._isBill;
			}
			set
			{
				if ((this._isBill != value))
				{
					this.OnIsBillChanging(value);
					this.SendPropertyChanging();
					this._isBill = value;
					this.SendPropertyChanged("IsBill");
					this.OnIsBillChanged();
				}
			}
		}
		
		[Column(Storage="_billAmount", DbType="money NOT NULL")]
		public decimal BillAmount
		{
			get
			{
				return this._billAmount;
			}
			set
			{
				if ((this._billAmount != value))
				{
					this.OnBillAmountChanging(value);
					this.SendPropertyChanging();
					this._billAmount = value;
					this.SendPropertyChanged("BillAmount");
					this.OnBillAmountChanged();
				}
			}
		}
		
		[Column(Storage="_billNo", DbType="nvarchar(100)")]
		public string BillNo
		{
			get
			{
				return this._billNo;
			}
			set
			{
				if ((this._billNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._billNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_isChecked", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsChecked
		{
			get
			{
				return this._isChecked;
			}
			set
			{
				if ((this._isChecked != value))
				{
					this.OnIsCheckedChanging(value);
					this.SendPropertyChanging();
					this._isChecked = value;
					this.SendPropertyChanged("IsChecked");
					this.OnIsCheckedChanged();
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._operatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_checkerId", DbType="int NOT NULL")]
		public int CheckerId
		{
			get
			{
				return this._checkerId;
			}
			set
			{
				if ((this._checkerId != value))
				{
					this.OnCheckerIdChanging(value);
					this.SendPropertyChanging();
					this._checkerId = value;
					this.SendPropertyChanged("CheckerId");
					this.OnCheckerIdChanged();
				}
			}
		}
		
		[Column(Storage="_isPay", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsPay
		{
			get
			{
				return this._isPay;
			}
			set
			{
				if ((this._isPay != value))
				{
					this.OnIsPayChanging(value);
					this.SendPropertyChanging();
					this._isPay = value;
					this.SendPropertyChanged("IsPay");
					this.OnIsPayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_FixedAsset")]
	public partial class FixedAsset : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _assetNo;
		
		private string _assetName;
		
		private System.DateTime _buyDate;
		
		private System.Nullable<decimal> _cost;
		
		private string _remark;
		
		private System.DateTime _issueTime;
		
		private int _operatorId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnAssetNoChanging(string value);
    partial void OnAssetNoChanged();
    partial void OnAssetNameChanging(string value);
    partial void OnAssetNameChanged();
    partial void OnBuyDateChanging(System.DateTime value);
    partial void OnBuyDateChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    #endregion
		
		public FixedAsset()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_assetNo", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string AssetNo
		{
			get
			{
				return this._assetNo;
			}
			set
			{
				if ((this._assetNo != value))
				{
					this.OnAssetNoChanging(value);
					this.SendPropertyChanging();
					this._assetNo = value;
					this.SendPropertyChanged("AssetNo");
					this.OnAssetNoChanged();
				}
			}
		}
		
		[Column(Storage="_assetName", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string AssetName
		{
			get
			{
				return this._assetName;
			}
			set
			{
				if ((this._assetName != value))
				{
					this.OnAssetNameChanging(value);
					this.SendPropertyChanging();
					this._assetName = value;
					this.SendPropertyChanged("AssetName");
					this.OnAssetNameChanged();
				}
			}
		}
		
		[Column(Storage="_buyDate", DbType="datetime NOT NULL")]
		public System.DateTime BuyDate
		{
			get
			{
				return this._buyDate;
			}
			set
			{
				if ((this._buyDate != value))
				{
					this.OnBuyDateChanging(value);
					this.SendPropertyChanging();
					this._buyDate = value;
					this.SendPropertyChanged("BuyDate");
					this.OnBuyDateChanged();
				}
			}
		}
		
		[Column(Storage="_cost", DbType="decimal(18,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_MeetingInfo")]
	public partial class MeetingInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _metttingNo;
		
		private string _title;
		
		private string _personal;
		
		private System.DateTime _beginDate;
		
		private System.DateTime _endDate;
		
		private string _location;
		
		private string _remark;
		
		private System.DateTime _issueTime;
		
		private int _operatorId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnMetttingNoChanging(string value);
    partial void OnMetttingNoChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPersonalChanging(string value);
    partial void OnPersonalChanged();
    partial void OnBeginDateChanging(System.DateTime value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    #endregion
		
		public MeetingInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_metttingNo", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		public string MetttingNo
		{
			get
			{
				return this._metttingNo;
			}
			set
			{
				if ((this._metttingNo != value))
				{
					this.OnMetttingNoChanging(value);
					this.SendPropertyChanging();
					this._metttingNo = value;
					this.SendPropertyChanged("MetttingNo");
					this.OnMetttingNoChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_personal", DbType="nvarchar(1000)")]
		public string Personal
		{
			get
			{
				return this._personal;
			}
			set
			{
				if ((this._personal != value))
				{
					this.OnPersonalChanging(value);
					this.SendPropertyChanging();
					this._personal = value;
					this.SendPropertyChanged("Personal");
					this.OnPersonalChanged();
				}
			}
		}
		
		[Column(Storage="_beginDate", DbType="datetime NOT NULL")]
		public System.DateTime BeginDate
		{
			get
			{
				return this._beginDate;
			}
			set
			{
				if ((this._beginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._beginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[Column(Storage="_endDate", DbType="datetime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_location", DbType="nvarchar(250)")]
		public string Location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Message")]
	public partial class Message : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _messageId;
		
		private int _companyId;
		
		private int _messageCompanyId;
		
		private string _messageTitle;
		
		private string _messageContent;
		
		private System.Nullable<int> _messagePersonId;
		
		private System.DateTime _messageTime;
		
		private byte _replyState;
		
		private EntitySet<MessageReply> _messageReplyList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnMessageCompanyIdChanging(int value);
    partial void OnMessageCompanyIdChanged();
    partial void OnMessageTitleChanging(string value);
    partial void OnMessageTitleChanged();
    partial void OnMessageContentChanging(string value);
    partial void OnMessageContentChanged();
    partial void OnMessagePersonIdChanging(System.Nullable<int> value);
    partial void OnMessagePersonIdChanged();
    partial void OnMessageTimeChanging(System.DateTime value);
    partial void OnMessageTimeChanged();
    partial void OnReplyStateChanging(byte value);
    partial void OnReplyStateChanged();
    #endregion
		
		public Message()
		{
			this._messageReplyList = new EntitySet<MessageReply>(new Action<MessageReply>(this.attach_messageReplyList), new Action<MessageReply>(this.detach_messageReplyList));
			OnCreated();
		}
		
		[Column(Storage="_messageId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageId
		{
			get
			{
				return this._messageId;
			}
			set
			{
				if ((this._messageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._messageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_messageCompanyId", DbType="int NOT NULL")]
		public int MessageCompanyId
		{
			get
			{
				return this._messageCompanyId;
			}
			set
			{
				if ((this._messageCompanyId != value))
				{
					this.OnMessageCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._messageCompanyId = value;
					this.SendPropertyChanged("MessageCompanyId");
					this.OnMessageCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_messageTitle", DbType="nvarchar(255)")]
		public string MessageTitle
		{
			get
			{
				return this._messageTitle;
			}
			set
			{
				if ((this._messageTitle != value))
				{
					this.OnMessageTitleChanging(value);
					this.SendPropertyChanging();
					this._messageTitle = value;
					this.SendPropertyChanged("MessageTitle");
					this.OnMessageTitleChanged();
				}
			}
		}
		
		[Column(Storage="_messageContent", DbType="nvarchar(MAX)")]
		public string MessageContent
		{
			get
			{
				return this._messageContent;
			}
			set
			{
				if ((this._messageContent != value))
				{
					this.OnMessageContentChanging(value);
					this.SendPropertyChanging();
					this._messageContent = value;
					this.SendPropertyChanged("MessageContent");
					this.OnMessageContentChanged();
				}
			}
		}
		
		[Column(Storage="_messagePersonId", DbType="int")]
		public System.Nullable<int> MessagePersonId
		{
			get
			{
				return this._messagePersonId;
			}
			set
			{
				if ((this._messagePersonId != value))
				{
					this.OnMessagePersonIdChanging(value);
					this.SendPropertyChanging();
					this._messagePersonId = value;
					this.SendPropertyChanged("MessagePersonId");
					this.OnMessagePersonIdChanged();
				}
			}
		}
		
		[Column(Storage="_messageTime", DbType="datetime NOT NULL")]
		public System.DateTime MessageTime
		{
			get
			{
				return this._messageTime;
			}
			set
			{
				if ((this._messageTime != value))
				{
					this.OnMessageTimeChanging(value);
					this.SendPropertyChanging();
					this._messageTime = value;
					this.SendPropertyChanged("MessageTime");
					this.OnMessageTimeChanged();
				}
			}
		}
		
		[Column(Storage="_replyState", DbType="tinyint NOT NULL")]
		public byte ReplyState
		{
			get
			{
				return this._replyState;
			}
			set
			{
				if ((this._replyState != value))
				{
					this.OnReplyStateChanging(value);
					this.SendPropertyChanging();
					this._replyState = value;
					this.SendPropertyChanged("ReplyState");
					this.OnReplyStateChanged();
				}
			}
		}
		
		[Association(Name="Message_MessageReply", Storage="_messageReplyList", ThisKey="MessageId", OtherKey="MessageId")]
		public EntitySet<MessageReply> MessageReplyList
		{
			get
			{
				return this._messageReplyList;
			}
			set
			{
				this._messageReplyList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_messageReplyList(MessageReply entity)
		{
			this.SendPropertyChanging();
			entity.Message = this;
		}
		
		private void detach_messageReplyList(MessageReply entity)
		{
			this.SendPropertyChanging();
			entity.Message = null;
		}
	}
	
	[Table(Name="dbo.tbl_MessageReply")]
	public partial class MessageReply : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _replyId;
		
		private int _messageId;
		
		private string _replyContent;
		
		private int _replyPersonId;
		
		private string _replyPersonName;
		
		private System.DateTime _replyTime;
		
		private EntityRef<Message> _message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReplyIdChanging(int value);
    partial void OnReplyIdChanged();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    partial void OnReplyContentChanging(string value);
    partial void OnReplyContentChanged();
    partial void OnReplyPersonIdChanging(int value);
    partial void OnReplyPersonIdChanged();
    partial void OnReplyPersonNameChanging(string value);
    partial void OnReplyPersonNameChanged();
    partial void OnReplyTimeChanging(System.DateTime value);
    partial void OnReplyTimeChanged();
    #endregion
		
		public MessageReply()
		{
			this._message = default(EntityRef<Message>);
			OnCreated();
		}
		
		[Column(Storage="_replyId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReplyId
		{
			get
			{
				return this._replyId;
			}
			set
			{
				if ((this._replyId != value))
				{
					this.OnReplyIdChanging(value);
					this.SendPropertyChanging();
					this._replyId = value;
					this.SendPropertyChanged("ReplyId");
					this.OnReplyIdChanged();
				}
			}
		}
		
		[Column(Storage="_messageId", DbType="int NOT NULL")]
		public int MessageId
		{
			get
			{
				return this._messageId;
			}
			set
			{
				if ((this._messageId != value))
				{
					if (this._message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._messageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[Column(Storage="_replyContent", DbType="nvarchar(MAX)")]
		public string ReplyContent
		{
			get
			{
				return this._replyContent;
			}
			set
			{
				if ((this._replyContent != value))
				{
					this.OnReplyContentChanging(value);
					this.SendPropertyChanging();
					this._replyContent = value;
					this.SendPropertyChanged("ReplyContent");
					this.OnReplyContentChanged();
				}
			}
		}
		
		[Column(Storage="_replyPersonId", DbType="int NOT NULL")]
		public int ReplyPersonId
		{
			get
			{
				return this._replyPersonId;
			}
			set
			{
				if ((this._replyPersonId != value))
				{
					this.OnReplyPersonIdChanging(value);
					this.SendPropertyChanging();
					this._replyPersonId = value;
					this.SendPropertyChanged("ReplyPersonId");
					this.OnReplyPersonIdChanged();
				}
			}
		}
		
		[Column(Storage="_replyPersonName", DbType="nvarchar(255)")]
		public string ReplyPersonName
		{
			get
			{
				return this._replyPersonName;
			}
			set
			{
				if ((this._replyPersonName != value))
				{
					this.OnReplyPersonNameChanging(value);
					this.SendPropertyChanging();
					this._replyPersonName = value;
					this.SendPropertyChanged("ReplyPersonName");
					this.OnReplyPersonNameChanged();
				}
			}
		}
		
		[Column(Storage="_replyTime", DbType="datetime NOT NULL")]
		public System.DateTime ReplyTime
		{
			get
			{
				return this._replyTime;
			}
			set
			{
				if ((this._replyTime != value))
				{
					this.OnReplyTimeChanging(value);
					this.SendPropertyChanging();
					this._replyTime = value;
					this.SendPropertyChanged("ReplyTime");
					this.OnReplyTimeChanged();
				}
			}
		}
		
		[Association(Name="Message_MessageReply", Storage="_message", ThisKey="MessageId", OtherKey="MessageId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Message Message
		{
			get
			{
				return this._message.Entity;
			}
			set
			{
				Message previousValue = this._message.Entity;
				if (((previousValue != value) 
							|| (this._message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._message.Entity = null;
						previousValue.MessageReplyList.Remove(this);
					}
					this._message.Entity = value;
					if ((value != null))
					{
						value.MessageReplyList.Add(this);
						this._messageId = value.MessageId;
					}
					else
					{
						this._messageId = default(int);
					}
					this.SendPropertyChanged("Message");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_News")]
	public partial class News : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _title;
		
		private string _iisuer;
		
		private System.DateTime _iisuerTime;
		
		private string _content;
		
		private System.Nullable<int> _views;
		
		private string _files;
		
		private string _isDelete;
		
		private EntitySet<NewsAccept> _newNewsAcceptList;
		
		private EntityRef<CompanyInfo> _companyCompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIisuerChanging(string value);
    partial void OnIisuerChanged();
    partial void OnIisuerTimeChanging(System.DateTime value);
    partial void OnIisuerTimeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnViewsChanging(System.Nullable<int> value);
    partial void OnViewsChanged();
    partial void OnFilesChanging(string value);
    partial void OnFilesChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public News()
		{
			this._newNewsAcceptList = new EntitySet<NewsAccept>(new Action<NewsAccept>(this.attach_newNewsAcceptList), new Action<NewsAccept>(this.detach_newNewsAcceptList));
			this._companyCompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._companyCompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(100)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_iisuer", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string Iisuer
		{
			get
			{
				return this._iisuer;
			}
			set
			{
				if ((this._iisuer != value))
				{
					this.OnIisuerChanging(value);
					this.SendPropertyChanging();
					this._iisuer = value;
					this.SendPropertyChanged("Iisuer");
					this.OnIisuerChanged();
				}
			}
		}
		
		[Column(Storage="_iisuerTime", DbType="datetime NOT NULL")]
		public System.DateTime IisuerTime
		{
			get
			{
				return this._iisuerTime;
			}
			set
			{
				if ((this._iisuerTime != value))
				{
					this.OnIisuerTimeChanging(value);
					this.SendPropertyChanging();
					this._iisuerTime = value;
					this.SendPropertyChanged("IisuerTime");
					this.OnIisuerTimeChanged();
				}
			}
		}
		
		[Column(Storage="_content", DbType="nvarchar(MAX)")]
		public string Content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_views", DbType="int")]
		public System.Nullable<int> Views
		{
			get
			{
				return this._views;
			}
			set
			{
				if ((this._views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[Column(Storage="_files", DbType="nvarchar(250)")]
		public string Files
		{
			get
			{
				return this._files;
			}
			set
			{
				if ((this._files != value))
				{
					this.OnFilesChanging(value);
					this.SendPropertyChanging();
					this._files = value;
					this.SendPropertyChanged("Files");
					this.OnFilesChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Association(Name="News_NewsAccept", Storage="_newNewsAcceptList", ThisKey="Id", OtherKey="NewId")]
		public EntitySet<NewsAccept> NewNewsAcceptList
		{
			get
			{
				return this._newNewsAcceptList;
			}
			set
			{
				this._newNewsAcceptList.Assign(value);
			}
		}
		
		[Association(Name="CompanyInfo_News", Storage="_companyCompanyInfo", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyInfo CompanyCompanyInfo
		{
			get
			{
				return this._companyCompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._companyCompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._companyCompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyCompanyInfo.Entity = null;
						previousValue.CompanyNewsList.Remove(this);
					}
					this._companyCompanyInfo.Entity = value;
					if ((value != null))
					{
						value.CompanyNewsList.Add(this);
						this._companyId = value.Id;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("CompanyCompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_newNewsAcceptList(NewsAccept entity)
		{
			this.SendPropertyChanging();
			entity.NewNews = this;
		}
		
		private void detach_newNewsAcceptList(NewsAccept entity)
		{
			this.SendPropertyChanging();
			entity.NewNews = null;
		}
	}
	
	[Table(Name="dbo.tbl_NewsAccept")]
	public partial class NewsAccept : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _newId;
		
		private byte _acceptType;
		
		private int _acceptId;
		
		private EntityRef<News> _newNews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewIdChanging(int value);
    partial void OnNewIdChanged();
    partial void OnAcceptTypeChanging(byte value);
    partial void OnAcceptTypeChanged();
    partial void OnAcceptIdChanging(int value);
    partial void OnAcceptIdChanged();
    #endregion
		
		public NewsAccept()
		{
			this._newNews = default(EntityRef<News>);
			OnCreated();
		}
		
		[Column(Storage="_newId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int NewId
		{
			get
			{
				return this._newId;
			}
			set
			{
				if ((this._newId != value))
				{
					if (this._newNews.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewIdChanging(value);
					this.SendPropertyChanging();
					this._newId = value;
					this.SendPropertyChanged("NewId");
					this.OnNewIdChanged();
				}
			}
		}
		
		[Column(Storage="_acceptType", DbType="tinyint NOT NULL", IsPrimaryKey=true)]
		public byte AcceptType
		{
			get
			{
				return this._acceptType;
			}
			set
			{
				if ((this._acceptType != value))
				{
					this.OnAcceptTypeChanging(value);
					this.SendPropertyChanging();
					this._acceptType = value;
					this.SendPropertyChanged("AcceptType");
					this.OnAcceptTypeChanged();
				}
			}
		}
		
		[Column(Storage="_acceptId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int AcceptId
		{
			get
			{
				return this._acceptId;
			}
			set
			{
				if ((this._acceptId != value))
				{
					this.OnAcceptIdChanging(value);
					this.SendPropertyChanging();
					this._acceptId = value;
					this.SendPropertyChanged("AcceptId");
					this.OnAcceptIdChanged();
				}
			}
		}
		
		[Association(Name="News_NewsAccept", Storage="_newNews", ThisKey="NewId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public News NewNews
		{
			get
			{
				return this._newNews.Entity;
			}
			set
			{
				News previousValue = this._newNews.Entity;
				if (((previousValue != value) 
							|| (this._newNews.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._newNews.Entity = null;
						previousValue.NewNewsAcceptList.Remove(this);
					}
					this._newNews.Entity = value;
					if ((value != null))
					{
						value.NewNewsAcceptList.Add(this);
						this._newId = value.Id;
					}
					else
					{
						this._newId = default(int);
					}
					this.SendPropertyChanged("NewNews");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_PersonalHistory")]
	public partial class PersonalHistory : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _personId;
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private string _workPlace;
		
		private string _workUnit;
		
		private string _takeUp;
		
		private string _remark;
		
		private EntityRef<PersonnelInfo> _personPersonnelInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnWorkPlaceChanging(string value);
    partial void OnWorkPlaceChanged();
    partial void OnWorkUnitChanging(string value);
    partial void OnWorkUnitChanged();
    partial void OnTakeUpChanging(string value);
    partial void OnTakeUpChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PersonalHistory()
		{
			this._personPersonnelInfo = default(EntityRef<PersonnelInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_personId", DbType="int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._personId;
			}
			set
			{
				if ((this._personId != value))
				{
					if (this._personPersonnelInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._personId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[Column(Storage="_startDate", DbType="datetime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_endDate", DbType="datetime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_workPlace", DbType="nvarchar(250)")]
		public string WorkPlace
		{
			get
			{
				return this._workPlace;
			}
			set
			{
				if ((this._workPlace != value))
				{
					this.OnWorkPlaceChanging(value);
					this.SendPropertyChanging();
					this._workPlace = value;
					this.SendPropertyChanged("WorkPlace");
					this.OnWorkPlaceChanged();
				}
			}
		}
		
		[Column(Storage="_workUnit", DbType="nvarchar(250)")]
		public string WorkUnit
		{
			get
			{
				return this._workUnit;
			}
			set
			{
				if ((this._workUnit != value))
				{
					this.OnWorkUnitChanging(value);
					this.SendPropertyChanging();
					this._workUnit = value;
					this.SendPropertyChanged("WorkUnit");
					this.OnWorkUnitChanged();
				}
			}
		}
		
		[Column(Storage="_takeUp", DbType="nvarchar(100)")]
		public string TakeUp
		{
			get
			{
				return this._takeUp;
			}
			set
			{
				if ((this._takeUp != value))
				{
					this.OnTakeUpChanging(value);
					this.SendPropertyChanging();
					this._takeUp = value;
					this.SendPropertyChanged("TakeUp");
					this.OnTakeUpChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="PersonnelInfo_PersonalHistory", Storage="_personPersonnelInfo", ThisKey="PersonId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public PersonnelInfo PersonPersonnelInfo
		{
			get
			{
				return this._personPersonnelInfo.Entity;
			}
			set
			{
				PersonnelInfo previousValue = this._personPersonnelInfo.Entity;
				if (((previousValue != value) 
							|| (this._personPersonnelInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._personPersonnelInfo.Entity = null;
						previousValue.PersonPersonalHistoryList.Remove(this);
					}
					this._personPersonnelInfo.Entity = value;
					if ((value != null))
					{
						value.PersonPersonalHistoryList.Add(this);
						this._personId = value.Id;
					}
					else
					{
						this._personId = default(int);
					}
					this.SendPropertyChanged("PersonPersonnelInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_PersonnelInfo")]
	public partial class PersonnelInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _archiveNo;
		
		private string _userName;
		
		private System.Nullable<int> _contactSex;
		
		private string _cardId;
		
		private System.Nullable<System.DateTime> _birthDate;
		
		private string _photoPath;
		
		private string _departmentId;
		
		private System.Nullable<int> _dutyId;
		
		private System.Nullable<int> _personalType;
		
		private System.Nullable<int> _isLeave;
		
		private System.Nullable<System.DateTime> _entryDate;
		
		private System.Nullable<System.DateTime> _serviceYear;
		
		private System.Nullable<System.DateTime> _leaveDate;
		
		private System.Nullable<int> _isMarried;
		
		private string _national;
		
		private string _birthplace;
		
		private string _politic;
		
		private string _contactTel;
		
		private string _contactMobile;
		
		private string _qq;
		
		private string _msn;
		
		private string _email;
		
		private string _contactAddress;
		
		private string _remark;
		
		private System.DateTime _issueTime;
		
		private int _operatorId;
		
		private EntitySet<AttendanceInfo> _staffNoAttendanceInfoList;
		
		private EntitySet<PersonalHistory> _personPersonalHistoryList;
		
		private EntitySet<SchoolInfo> _personSchoolInfoList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnArchiveNoChanging(string value);
    partial void OnArchiveNoChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnContactSexChanging(System.Nullable<int> value);
    partial void OnContactSexChanged();
    partial void OnCardIdChanging(string value);
    partial void OnCardIdChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnPhotoPathChanging(string value);
    partial void OnPhotoPathChanged();
    partial void OnDepartmentIdChanging(string value);
    partial void OnDepartmentIdChanged();
    partial void OnDutyIdChanging(System.Nullable<int> value);
    partial void OnDutyIdChanged();
    partial void OnPersonalTypeChanging(System.Nullable<int> value);
    partial void OnPersonalTypeChanged();
    partial void OnIsLeaveChanging(System.Nullable<int> value);
    partial void OnIsLeaveChanged();
    partial void OnEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEntryDateChanged();
    partial void OnServiceYearChanging(System.Nullable<System.DateTime> value);
    partial void OnServiceYearChanged();
    partial void OnLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveDateChanged();
    partial void OnIsMarriedChanging(System.Nullable<int> value);
    partial void OnIsMarriedChanged();
    partial void OnNationalChanging(string value);
    partial void OnNationalChanged();
    partial void OnBirthplaceChanging(string value);
    partial void OnBirthplaceChanged();
    partial void OnPoliticChanging(string value);
    partial void OnPoliticChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnContactMobileChanging(string value);
    partial void OnContactMobileChanged();
    partial void OnQqChanging(string value);
    partial void OnQqChanged();
    partial void OnMsnChanging(string value);
    partial void OnMsnChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactAddressChanging(string value);
    partial void OnContactAddressChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    #endregion
		
		public PersonnelInfo()
		{
			this._staffNoAttendanceInfoList = new EntitySet<AttendanceInfo>(new Action<AttendanceInfo>(this.attach_staffNoAttendanceInfoList), new Action<AttendanceInfo>(this.detach_staffNoAttendanceInfoList));
			this._personPersonalHistoryList = new EntitySet<PersonalHistory>(new Action<PersonalHistory>(this.attach_personPersonalHistoryList), new Action<PersonalHistory>(this.detach_personPersonalHistoryList));
			this._personSchoolInfoList = new EntitySet<SchoolInfo>(new Action<SchoolInfo>(this.attach_personSchoolInfoList), new Action<SchoolInfo>(this.detach_personSchoolInfoList));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_archiveNo", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		public string ArchiveNo
		{
			get
			{
				return this._archiveNo;
			}
			set
			{
				if ((this._archiveNo != value))
				{
					this.OnArchiveNoChanging(value);
					this.SendPropertyChanging();
					this._archiveNo = value;
					this.SendPropertyChanged("ArchiveNo");
					this.OnArchiveNoChanged();
				}
			}
		}
		
		[Column(Storage="_userName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactSex", DbType="int")]
		public System.Nullable<int> ContactSex
		{
			get
			{
				return this._contactSex;
			}
			set
			{
				if ((this._contactSex != value))
				{
					this.OnContactSexChanging(value);
					this.SendPropertyChanging();
					this._contactSex = value;
					this.SendPropertyChanged("ContactSex");
					this.OnContactSexChanged();
				}
			}
		}
		
		[Column(Storage="_cardId", DbType="varchar(100)")]
		public string CardId
		{
			get
			{
				return this._cardId;
			}
			set
			{
				if ((this._cardId != value))
				{
					this.OnCardIdChanging(value);
					this.SendPropertyChanging();
					this._cardId = value;
					this.SendPropertyChanged("CardId");
					this.OnCardIdChanged();
				}
			}
		}
		
		[Column(Storage="_birthDate", DbType="datetime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._birthDate;
			}
			set
			{
				if ((this._birthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._birthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_photoPath", DbType="nvarchar(250)")]
		public string PhotoPath
		{
			get
			{
				return this._photoPath;
			}
			set
			{
				if ((this._photoPath != value))
				{
					this.OnPhotoPathChanging(value);
					this.SendPropertyChanging();
					this._photoPath = value;
					this.SendPropertyChanged("PhotoPath");
					this.OnPhotoPathChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="varchar(1000)")]
		public string DepartmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_dutyId", DbType="int")]
		public System.Nullable<int> DutyId
		{
			get
			{
				return this._dutyId;
			}
			set
			{
				if ((this._dutyId != value))
				{
					this.OnDutyIdChanging(value);
					this.SendPropertyChanging();
					this._dutyId = value;
					this.SendPropertyChanged("DutyId");
					this.OnDutyIdChanged();
				}
			}
		}
		
		[Column(Storage="_personalType", DbType="int")]
		public System.Nullable<int> PersonalType
		{
			get
			{
				return this._personalType;
			}
			set
			{
				if ((this._personalType != value))
				{
					this.OnPersonalTypeChanging(value);
					this.SendPropertyChanging();
					this._personalType = value;
					this.SendPropertyChanged("PersonalType");
					this.OnPersonalTypeChanged();
				}
			}
		}
		
		[Column(Storage="_isLeave", DbType="int")]
		public System.Nullable<int> IsLeave
		{
			get
			{
				return this._isLeave;
			}
			set
			{
				if ((this._isLeave != value))
				{
					this.OnIsLeaveChanging(value);
					this.SendPropertyChanging();
					this._isLeave = value;
					this.SendPropertyChanged("IsLeave");
					this.OnIsLeaveChanged();
				}
			}
		}
		
		[Column(Storage="_entryDate", DbType="datetime")]
		public System.Nullable<System.DateTime> EntryDate
		{
			get
			{
				return this._entryDate;
			}
			set
			{
				if ((this._entryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._entryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[Column(Storage="_serviceYear", DbType="datetime")]
		public System.Nullable<System.DateTime> ServiceYear
		{
			get
			{
				return this._serviceYear;
			}
			set
			{
				if ((this._serviceYear != value))
				{
					this.OnServiceYearChanging(value);
					this.SendPropertyChanging();
					this._serviceYear = value;
					this.SendPropertyChanged("ServiceYear");
					this.OnServiceYearChanged();
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._leaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[Column(Storage="_isMarried", DbType="int")]
		public System.Nullable<int> IsMarried
		{
			get
			{
				return this._isMarried;
			}
			set
			{
				if ((this._isMarried != value))
				{
					this.OnIsMarriedChanging(value);
					this.SendPropertyChanging();
					this._isMarried = value;
					this.SendPropertyChanged("IsMarried");
					this.OnIsMarriedChanged();
				}
			}
		}
		
		[Column(Storage="_national", DbType="nvarchar(250)")]
		public string National
		{
			get
			{
				return this._national;
			}
			set
			{
				if ((this._national != value))
				{
					this.OnNationalChanging(value);
					this.SendPropertyChanging();
					this._national = value;
					this.SendPropertyChanged("National");
					this.OnNationalChanged();
				}
			}
		}
		
		[Column(Storage="_birthplace", DbType="nvarchar(250)")]
		public string Birthplace
		{
			get
			{
				return this._birthplace;
			}
			set
			{
				if ((this._birthplace != value))
				{
					this.OnBirthplaceChanging(value);
					this.SendPropertyChanging();
					this._birthplace = value;
					this.SendPropertyChanged("Birthplace");
					this.OnBirthplaceChanged();
				}
			}
		}
		
		[Column(Storage="_politic", DbType="nvarchar(100)")]
		public string Politic
		{
			get
			{
				return this._politic;
			}
			set
			{
				if ((this._politic != value))
				{
					this.OnPoliticChanging(value);
					this.SendPropertyChanging();
					this._politic = value;
					this.SendPropertyChanged("Politic");
					this.OnPoliticChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(100)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="varchar(100)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this.OnContactMobileChanging(value);
					this.SendPropertyChanging();
					this._contactMobile = value;
					this.SendPropertyChanged("ContactMobile");
					this.OnContactMobileChanged();
				}
			}
		}
		
		[Column(Name="QQ", Storage="_qq", DbType="nvarchar(100)")]
		public string Qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnQqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("Qq");
					this.OnQqChanged();
				}
			}
		}
		
		[Column(Name="MSN", Storage="_msn", DbType="nvarchar(100)")]
		public string Msn
		{
			get
			{
				return this._msn;
			}
			set
			{
				if ((this._msn != value))
				{
					this.OnMsnChanging(value);
					this.SendPropertyChanging();
					this._msn = value;
					this.SendPropertyChanged("Msn");
					this.OnMsnChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="nvarchar(100)")]
		public string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_contactAddress", DbType="nvarchar(250)")]
		public string ContactAddress
		{
			get
			{
				return this._contactAddress;
			}
			set
			{
				if ((this._contactAddress != value))
				{
					this.OnContactAddressChanging(value);
					this.SendPropertyChanging();
					this._contactAddress = value;
					this.SendPropertyChanged("ContactAddress");
					this.OnContactAddressChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Association(Name="PersonnelInfo_AttendanceInfo", Storage="_staffNoAttendanceInfoList", ThisKey="Id", OtherKey="StaffNo")]
		public EntitySet<AttendanceInfo> StaffNoAttendanceInfoList
		{
			get
			{
				return this._staffNoAttendanceInfoList;
			}
			set
			{
				this._staffNoAttendanceInfoList.Assign(value);
			}
		}
		
		[Association(Name="PersonnelInfo_PersonalHistory", Storage="_personPersonalHistoryList", ThisKey="Id", OtherKey="PersonId")]
		public EntitySet<PersonalHistory> PersonPersonalHistoryList
		{
			get
			{
				return this._personPersonalHistoryList;
			}
			set
			{
				this._personPersonalHistoryList.Assign(value);
			}
		}
		
		[Association(Name="PersonnelInfo_SchoolInfo", Storage="_personSchoolInfoList", ThisKey="Id", OtherKey="PersonId")]
		public EntitySet<SchoolInfo> PersonSchoolInfoList
		{
			get
			{
				return this._personSchoolInfoList;
			}
			set
			{
				this._personSchoolInfoList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_staffNoAttendanceInfoList(AttendanceInfo entity)
		{
			this.SendPropertyChanging();
			entity.StaffNoPersonnelInfo = this;
		}
		
		private void detach_staffNoAttendanceInfoList(AttendanceInfo entity)
		{
			this.SendPropertyChanging();
			entity.StaffNoPersonnelInfo = null;
		}
		
		private void attach_personPersonalHistoryList(PersonalHistory entity)
		{
			this.SendPropertyChanging();
			entity.PersonPersonnelInfo = this;
		}
		
		private void detach_personPersonalHistoryList(PersonalHistory entity)
		{
			this.SendPropertyChanging();
			entity.PersonPersonnelInfo = null;
		}
		
		private void attach_personSchoolInfoList(SchoolInfo entity)
		{
			this.SendPropertyChanging();
			entity.PersonPersonnelInfo = this;
		}
		
		private void detach_personSchoolInfoList(SchoolInfo entity)
		{
			this.SendPropertyChanging();
			entity.PersonPersonnelInfo = null;
		}
	}
	
	[Table(Name="dbo.tbl_PlanLocalAgency")]
	public partial class PlanLocalAgency : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _tourId;
		
		private string _localTravelAgency;
		
		private int _travelAgencyID;
		
		private string _contacter;
		
		private System.DateTime _receiveTime;
		
		private System.DateTime _deliverTime;
		
		private decimal _fee;
		
		private decimal _commission;
		
		private decimal _settlement;
		
		private byte _payType;
		
		private string _notice;
		
		private string _remark;
		
		private int _operatorID;
		
		private string _operator;
		
		private System.DateTime _operateTime;
		
		private decimal _addAmount;
		
		private decimal _reduceAmount;
		
		private decimal _totalAmount;
		
		private string _fRemark;
		
		private string _contactTel;
		
		private decimal _payAmount;
		
		private int _companyId;
		
		private EntitySet<PlanLocalAgencyPrice> _referencePlanLocalAgencyPriceList;
		
		private EntitySet<PlanLocalAgencyTourPlan> _localTravelPlanLocalAgencyTourPlanList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnLocalTravelAgencyChanging(string value);
    partial void OnLocalTravelAgencyChanged();
    partial void OnTravelAgencyIDChanging(int value);
    partial void OnTravelAgencyIDChanged();
    partial void OnContacterChanging(string value);
    partial void OnContacterChanged();
    partial void OnReceiveTimeChanging(System.DateTime value);
    partial void OnReceiveTimeChanged();
    partial void OnDeliverTimeChanging(System.DateTime value);
    partial void OnDeliverTimeChanged();
    partial void OnFeeChanging(decimal value);
    partial void OnFeeChanged();
    partial void OnCommissionChanging(decimal value);
    partial void OnCommissionChanged();
    partial void OnSettlementChanging(decimal value);
    partial void OnSettlementChanged();
    partial void OnPayTypeChanging(byte value);
    partial void OnPayTypeChanged();
    partial void OnNoticeChanging(string value);
    partial void OnNoticeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperatorIDChanging(int value);
    partial void OnOperatorIDChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnOperateTimeChanging(System.DateTime value);
    partial void OnOperateTimeChanged();
    partial void OnAddAmountChanging(decimal value);
    partial void OnAddAmountChanged();
    partial void OnReduceAmountChanging(decimal value);
    partial void OnReduceAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnFRemarkChanging(string value);
    partial void OnFRemarkChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnPayAmountChanging(decimal value);
    partial void OnPayAmountChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public PlanLocalAgency()
		{
			this._referencePlanLocalAgencyPriceList = new EntitySet<PlanLocalAgencyPrice>(new Action<PlanLocalAgencyPrice>(this.attach_referencePlanLocalAgencyPriceList), new Action<PlanLocalAgencyPrice>(this.detach_referencePlanLocalAgencyPriceList));
			this._localTravelPlanLocalAgencyTourPlanList = new EntitySet<PlanLocalAgencyTourPlan>(new Action<PlanLocalAgencyTourPlan>(this.attach_localTravelPlanLocalAgencyTourPlanList), new Action<PlanLocalAgencyTourPlan>(this.detach_localTravelPlanLocalAgencyTourPlanList));
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_localTravelAgency", DbType="nvarchar(50)")]
		public string LocalTravelAgency
		{
			get
			{
				return this._localTravelAgency;
			}
			set
			{
				if ((this._localTravelAgency != value))
				{
					this.OnLocalTravelAgencyChanging(value);
					this.SendPropertyChanging();
					this._localTravelAgency = value;
					this.SendPropertyChanged("LocalTravelAgency");
					this.OnLocalTravelAgencyChanged();
				}
			}
		}
		
		[Column(Storage="_travelAgencyID", DbType="int NOT NULL")]
		public int TravelAgencyID
		{
			get
			{
				return this._travelAgencyID;
			}
			set
			{
				if ((this._travelAgencyID != value))
				{
					this.OnTravelAgencyIDChanging(value);
					this.SendPropertyChanging();
					this._travelAgencyID = value;
					this.SendPropertyChanged("TravelAgencyID");
					this.OnTravelAgencyIDChanged();
				}
			}
		}
		
		[Column(Storage="_contacter", DbType="nvarchar(50)")]
		public string Contacter
		{
			get
			{
				return this._contacter;
			}
			set
			{
				if ((this._contacter != value))
				{
					this.OnContacterChanging(value);
					this.SendPropertyChanging();
					this._contacter = value;
					this.SendPropertyChanged("Contacter");
					this.OnContacterChanged();
				}
			}
		}
		
		[Column(Storage="_receiveTime", DbType="datetime NOT NULL")]
		public System.DateTime ReceiveTime
		{
			get
			{
				return this._receiveTime;
			}
			set
			{
				if ((this._receiveTime != value))
				{
					this.OnReceiveTimeChanging(value);
					this.SendPropertyChanging();
					this._receiveTime = value;
					this.SendPropertyChanged("ReceiveTime");
					this.OnReceiveTimeChanged();
				}
			}
		}
		
		[Column(Storage="_deliverTime", DbType="datetime NOT NULL")]
		public System.DateTime DeliverTime
		{
			get
			{
				return this._deliverTime;
			}
			set
			{
				if ((this._deliverTime != value))
				{
					this.OnDeliverTimeChanging(value);
					this.SendPropertyChanging();
					this._deliverTime = value;
					this.SendPropertyChanged("DeliverTime");
					this.OnDeliverTimeChanged();
				}
			}
		}
		
		[Column(Storage="_fee", DbType="money NOT NULL")]
		public decimal Fee
		{
			get
			{
				return this._fee;
			}
			set
			{
				if ((this._fee != value))
				{
					this.OnFeeChanging(value);
					this.SendPropertyChanging();
					this._fee = value;
					this.SendPropertyChanged("Fee");
					this.OnFeeChanged();
				}
			}
		}
		
		[Column(Storage="_commission", DbType="money NOT NULL")]
		public decimal Commission
		{
			get
			{
				return this._commission;
			}
			set
			{
				if ((this._commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[Column(Storage="_settlement", DbType="money NOT NULL")]
		public decimal Settlement
		{
			get
			{
				return this._settlement;
			}
			set
			{
				if ((this._settlement != value))
				{
					this.OnSettlementChanging(value);
					this.SendPropertyChanging();
					this._settlement = value;
					this.SendPropertyChanged("Settlement");
					this.OnSettlementChanged();
				}
			}
		}
		
		[Column(Storage="_payType", DbType="tinyint NOT NULL")]
		public byte PayType
		{
			get
			{
				return this._payType;
			}
			set
			{
				if ((this._payType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._payType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[Column(Storage="_notice", DbType="nvarchar(500)")]
		public string Notice
		{
			get
			{
				return this._notice;
			}
			set
			{
				if ((this._notice != value))
				{
					this.OnNoticeChanging(value);
					this.SendPropertyChanging();
					this._notice = value;
					this.SendPropertyChanged("Notice");
					this.OnNoticeChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(500)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._operatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_operator", DbType="nvarchar(50)")]
		public string Operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_operateTime", DbType="datetime NOT NULL")]
		public System.DateTime OperateTime
		{
			get
			{
				return this._operateTime;
			}
			set
			{
				if ((this._operateTime != value))
				{
					this.OnOperateTimeChanging(value);
					this.SendPropertyChanging();
					this._operateTime = value;
					this.SendPropertyChanged("OperateTime");
					this.OnOperateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_addAmount", DbType="money NOT NULL")]
		public decimal AddAmount
		{
			get
			{
				return this._addAmount;
			}
			set
			{
				if ((this._addAmount != value))
				{
					this.OnAddAmountChanging(value);
					this.SendPropertyChanging();
					this._addAmount = value;
					this.SendPropertyChanged("AddAmount");
					this.OnAddAmountChanged();
				}
			}
		}
		
		[Column(Storage="_reduceAmount", DbType="money NOT NULL")]
		public decimal ReduceAmount
		{
			get
			{
				return this._reduceAmount;
			}
			set
			{
				if ((this._reduceAmount != value))
				{
					this.OnReduceAmountChanging(value);
					this.SendPropertyChanging();
					this._reduceAmount = value;
					this.SendPropertyChanged("ReduceAmount");
					this.OnReduceAmountChanged();
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[Column(Storage="_fRemark", DbType="nvarchar(250)")]
		public string FRemark
		{
			get
			{
				return this._fRemark;
			}
			set
			{
				if ((this._fRemark != value))
				{
					this.OnFRemarkChanging(value);
					this.SendPropertyChanging();
					this._fRemark = value;
					this.SendPropertyChanged("FRemark");
					this.OnFRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(50)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_payAmount", DbType="money NOT NULL")]
		public decimal PayAmount
		{
			get
			{
				return this._payAmount;
			}
			set
			{
				if ((this._payAmount != value))
				{
					this.OnPayAmountChanging(value);
					this.SendPropertyChanging();
					this._payAmount = value;
					this.SendPropertyChanged("PayAmount");
					this.OnPayAmountChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Association(Name="PlanLocalAgency_PlanLocalAgencyPrice", Storage="_referencePlanLocalAgencyPriceList", ThisKey="Id", OtherKey="ReferenceID")]
		public EntitySet<PlanLocalAgencyPrice> ReferencePlanLocalAgencyPriceList
		{
			get
			{
				return this._referencePlanLocalAgencyPriceList;
			}
			set
			{
				this._referencePlanLocalAgencyPriceList.Assign(value);
			}
		}
		
		[Association(Name="PlanLocalAgency_PlanLocalAgencyTourPlan", Storage="_localTravelPlanLocalAgencyTourPlanList", ThisKey="Id", OtherKey="LocalTravelId")]
		public EntitySet<PlanLocalAgencyTourPlan> LocalTravelPlanLocalAgencyTourPlanList
		{
			get
			{
				return this._localTravelPlanLocalAgencyTourPlanList;
			}
			set
			{
				this._localTravelPlanLocalAgencyTourPlanList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_referencePlanLocalAgencyPriceList(PlanLocalAgencyPrice entity)
		{
			this.SendPropertyChanging();
			entity.ReferencePlanLocalAgency = this;
		}
		
		private void detach_referencePlanLocalAgencyPriceList(PlanLocalAgencyPrice entity)
		{
			this.SendPropertyChanging();
			entity.ReferencePlanLocalAgency = null;
		}
		
		private void attach_localTravelPlanLocalAgencyTourPlanList(PlanLocalAgencyTourPlan entity)
		{
			this.SendPropertyChanging();
			entity.LocalTravelPlanLocalAgency = this;
		}
		
		private void detach_localTravelPlanLocalAgencyTourPlanList(PlanLocalAgencyTourPlan entity)
		{
			this.SendPropertyChanging();
			entity.LocalTravelPlanLocalAgency = null;
		}
	}
	
	[Table(Name="dbo.tbl_PlanLocalAgencyPrice")]
	public partial class PlanLocalAgencyPrice : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private byte _priceTpyeId;
		
		private string _title;
		
		private decimal _price;
		
		private string _remark;
		
		private int _peopleCount;
		
		private string _referenceID;
		
		private byte _priceType;
		
		private EntityRef<PlanLocalAgency> _referencePlanLocalAgency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPriceTpyeIdChanging(byte value);
    partial void OnPriceTpyeIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnPeopleCountChanging(int value);
    partial void OnPeopleCountChanged();
    partial void OnReferenceIDChanging(string value);
    partial void OnReferenceIDChanged();
    partial void OnPriceTypeChanging(byte value);
    partial void OnPriceTypeChanged();
    #endregion
		
		public PlanLocalAgencyPrice()
		{
			this._referencePlanLocalAgency = default(EntityRef<PlanLocalAgency>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="int NOT NULL IDENTITY", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_priceTpyeId", DbType="tinyint NOT NULL")]
		public byte PriceTpyeId
		{
			get
			{
				return this._priceTpyeId;
			}
			set
			{
				if ((this._priceTpyeId != value))
				{
					this.OnPriceTpyeIdChanging(value);
					this.SendPropertyChanging();
					this._priceTpyeId = value;
					this.SendPropertyChanged("PriceTpyeId");
					this.OnPriceTpyeIdChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(50)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(50)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_peopleCount", DbType="int NOT NULL")]
		public int PeopleCount
		{
			get
			{
				return this._peopleCount;
			}
			set
			{
				if ((this._peopleCount != value))
				{
					this.OnPeopleCountChanging(value);
					this.SendPropertyChanging();
					this._peopleCount = value;
					this.SendPropertyChanged("PeopleCount");
					this.OnPeopleCountChanged();
				}
			}
		}
		
		[Column(Storage="_referenceID", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string ReferenceID
		{
			get
			{
				return this._referenceID;
			}
			set
			{
				if ((this._referenceID != value))
				{
					if (this._referencePlanLocalAgency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._referenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[Column(Storage="_priceType", DbType="tinyint NOT NULL")]
		public byte PriceType
		{
			get
			{
				return this._priceType;
			}
			set
			{
				if ((this._priceType != value))
				{
					this.OnPriceTypeChanging(value);
					this.SendPropertyChanging();
					this._priceType = value;
					this.SendPropertyChanged("PriceType");
					this.OnPriceTypeChanged();
				}
			}
		}
		
		[Association(Name="PlanLocalAgency_PlanLocalAgencyPrice", Storage="_referencePlanLocalAgency", ThisKey="ReferenceID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public PlanLocalAgency ReferencePlanLocalAgency
		{
			get
			{
				return this._referencePlanLocalAgency.Entity;
			}
			set
			{
				PlanLocalAgency previousValue = this._referencePlanLocalAgency.Entity;
				if (((previousValue != value) 
							|| (this._referencePlanLocalAgency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._referencePlanLocalAgency.Entity = null;
						previousValue.ReferencePlanLocalAgencyPriceList.Remove(this);
					}
					this._referencePlanLocalAgency.Entity = value;
					if ((value != null))
					{
						value.ReferencePlanLocalAgencyPriceList.Add(this);
						this._referenceID = value.Id;
					}
					else
					{
						this._referenceID = default(string);
					}
					this.SendPropertyChanged("ReferencePlanLocalAgency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_PlanLocalAgencyTourPlan")]
	public partial class PlanLocalAgencyTourPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _localTravelId;
		
		private byte _days;
		
		private EntityRef<PlanLocalAgency> _localTravelPlanLocalAgency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocalTravelIdChanging(string value);
    partial void OnLocalTravelIdChanged();
    partial void OnDaysChanging(byte value);
    partial void OnDaysChanged();
    #endregion
		
		public PlanLocalAgencyTourPlan()
		{
			this._localTravelPlanLocalAgency = default(EntityRef<PlanLocalAgency>);
			OnCreated();
		}
		
		[Column(Storage="_localTravelId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LocalTravelId
		{
			get
			{
				return this._localTravelId;
			}
			set
			{
				if ((this._localTravelId != value))
				{
					if (this._localTravelPlanLocalAgency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocalTravelIdChanging(value);
					this.SendPropertyChanging();
					this._localTravelId = value;
					this.SendPropertyChanged("LocalTravelId");
					this.OnLocalTravelIdChanged();
				}
			}
		}
		
		[Column(Storage="_days", DbType="tinyint NOT NULL", IsPrimaryKey=true)]
		public byte Days
		{
			get
			{
				return this._days;
			}
			set
			{
				if ((this._days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[Association(Name="PlanLocalAgency_PlanLocalAgencyTourPlan", Storage="_localTravelPlanLocalAgency", ThisKey="LocalTravelId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public PlanLocalAgency LocalTravelPlanLocalAgency
		{
			get
			{
				return this._localTravelPlanLocalAgency.Entity;
			}
			set
			{
				PlanLocalAgency previousValue = this._localTravelPlanLocalAgency.Entity;
				if (((previousValue != value) 
							|| (this._localTravelPlanLocalAgency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._localTravelPlanLocalAgency.Entity = null;
						previousValue.LocalTravelPlanLocalAgencyTourPlanList.Remove(this);
					}
					this._localTravelPlanLocalAgency.Entity = value;
					if ((value != null))
					{
						value.LocalTravelPlanLocalAgencyTourPlanList.Add(this);
						this._localTravelId = value.Id;
					}
					else
					{
						this._localTravelId = default(string);
					}
					this.SendPropertyChanged("LocalTravelPlanLocalAgency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_PlanSingle")]
	public partial class PlanSingle : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private byte _serviceType;
		
		private int _supplierId;
		
		private string _supplierName;
		
		private string _arrange;
		
		private decimal _amount;
		
		private string _remark;
		
		private int _operatorId;
		
		private System.DateTime _createTime;
		
		private decimal _addAmount;
		
		private decimal _reduceAmount;
		
		private decimal _totalAmount;
		
		private string _fRemark;
		
		private string _planId;
		
		private decimal _paidAmount;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnServiceTypeChanging(byte value);
    partial void OnServiceTypeChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnArrangeChanging(string value);
    partial void OnArrangeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnAddAmountChanging(decimal value);
    partial void OnAddAmountChanged();
    partial void OnReduceAmountChanging(decimal value);
    partial void OnReduceAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnFRemarkChanging(string value);
    partial void OnFRemarkChanged();
    partial void OnPlanIdChanging(string value);
    partial void OnPlanIdChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    #endregion
		
		public PlanSingle()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_serviceType", DbType="tinyint NOT NULL")]
		public byte ServiceType
		{
			get
			{
				return this._serviceType;
			}
			set
			{
				if ((this._serviceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._serviceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[Column(Storage="_supplierName", DbType="nvarchar(255)")]
		public string SupplierName
		{
			get
			{
				return this._supplierName;
			}
			set
			{
				if ((this._supplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._supplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[Column(Storage="_arrange", DbType="nvarchar(MAX)")]
		public string Arrange
		{
			get
			{
				return this._arrange;
			}
			set
			{
				if ((this._arrange != value))
				{
					this.OnArrangeChanging(value);
					this.SendPropertyChanging();
					this._arrange = value;
					this.SendPropertyChanged("Arrange");
					this.OnArrangeChanged();
				}
			}
		}
		
		[Column(Storage="_amount", DbType="money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_addAmount", DbType="money NOT NULL")]
		public decimal AddAmount
		{
			get
			{
				return this._addAmount;
			}
			set
			{
				if ((this._addAmount != value))
				{
					this.OnAddAmountChanging(value);
					this.SendPropertyChanging();
					this._addAmount = value;
					this.SendPropertyChanged("AddAmount");
					this.OnAddAmountChanged();
				}
			}
		}
		
		[Column(Storage="_reduceAmount", DbType="money NOT NULL")]
		public decimal ReduceAmount
		{
			get
			{
				return this._reduceAmount;
			}
			set
			{
				if ((this._reduceAmount != value))
				{
					this.OnReduceAmountChanging(value);
					this.SendPropertyChanging();
					this._reduceAmount = value;
					this.SendPropertyChanged("ReduceAmount");
					this.OnReduceAmountChanged();
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[Column(Storage="_fRemark", DbType="nvarchar(250)")]
		public string FRemark
		{
			get
			{
				return this._fRemark;
			}
			set
			{
				if ((this._fRemark != value))
				{
					this.OnFRemarkChanging(value);
					this.SendPropertyChanging();
					this._fRemark = value;
					this.SendPropertyChanged("FRemark");
					this.OnFRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_planId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlanId
		{
			get
			{
				return this._planId;
			}
			set
			{
				if ((this._planId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._planId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[Column(Storage="_paidAmount", DbType="money NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._paidAmount;
			}
			set
			{
				if ((this._paidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._paidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[Association(Name="Tour_PlanSingle", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.PlanSingleList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.PlanSingleList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_PlanTicket")]
	public partial class PlanTicket : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tourId;
		
		private string _orderId;
		
		private string _refundId;
		
		private byte _ticketType;
		
		private string _routeName;
		
		private string _saler;
		
		private System.Nullable<int> _operatorId;
		
		private System.DateTime _registerTime;
		
		private byte _state;
		
		private string _operator;
		
		private int _companyId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnOrderIdChanging(string value);
    partial void OnOrderIdChanged();
    partial void OnRefundIdChanging(string value);
    partial void OnRefundIdChanged();
    partial void OnTicketTypeChanging(byte value);
    partial void OnTicketTypeChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnSalerChanging(string value);
    partial void OnSalerChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnRegisterTimeChanging(System.DateTime value);
    partial void OnRegisterTimeChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public PlanTicket()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_orderId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string OrderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Storage="_refundId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string RefundId
		{
			get
			{
				return this._refundId;
			}
			set
			{
				if ((this._refundId != value))
				{
					this.OnRefundIdChanging(value);
					this.SendPropertyChanging();
					this._refundId = value;
					this.SendPropertyChanged("RefundId");
					this.OnRefundIdChanged();
				}
			}
		}
		
		[Column(Storage="_ticketType", DbType="tinyint NOT NULL")]
		public byte TicketType
		{
			get
			{
				return this._ticketType;
			}
			set
			{
				if ((this._ticketType != value))
				{
					this.OnTicketTypeChanging(value);
					this.SendPropertyChanging();
					this._ticketType = value;
					this.SendPropertyChanged("TicketType");
					this.OnTicketTypeChanged();
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(50)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._routeName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[Column(Storage="_saler", DbType="nvarchar(50)")]
		public string Saler
		{
			get
			{
				return this._saler;
			}
			set
			{
				if ((this._saler != value))
				{
					this.OnSalerChanging(value);
					this.SendPropertyChanging();
					this._saler = value;
					this.SendPropertyChanged("Saler");
					this.OnSalerChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_registerTime", DbType="datetime NOT NULL")]
		public System.DateTime RegisterTime
		{
			get
			{
				return this._registerTime;
			}
			set
			{
				if ((this._registerTime != value))
				{
					this.OnRegisterTimeChanging(value);
					this.SendPropertyChanging();
					this._registerTime = value;
					this.SendPropertyChanged("RegisterTime");
					this.OnRegisterTimeChanged();
				}
			}
		}
		
		[Column(Storage="_state", DbType="tinyint NOT NULL")]
		public byte State
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_operator", DbType="nvarchar(50)")]
		public string Operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_PlanTicketFlight")]
	public partial class PlanTicketFlight : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fligthSegment;
		
		private System.DateTime _departureTime;
		
		private byte _aireLine;
		
		private decimal _discount;
		
		private string _ticketId;
		
		private string _ticketTime;
		
		private EntityRef<PlanTicketOut> _ticketPlanTicketOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFligthSegmentChanging(string value);
    partial void OnFligthSegmentChanged();
    partial void OnDepartureTimeChanging(System.DateTime value);
    partial void OnDepartureTimeChanged();
    partial void OnAireLineChanging(byte value);
    partial void OnAireLineChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnTicketIdChanging(string value);
    partial void OnTicketIdChanged();
    partial void OnTicketTimeChanging(string value);
    partial void OnTicketTimeChanged();
    #endregion
		
		public PlanTicketFlight()
		{
			this._ticketPlanTicketOut = default(EntityRef<PlanTicketOut>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="int NOT NULL IDENTITY", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_fligthSegment", DbType="nvarchar(50)")]
		public string FligthSegment
		{
			get
			{
				return this._fligthSegment;
			}
			set
			{
				if ((this._fligthSegment != value))
				{
					this.OnFligthSegmentChanging(value);
					this.SendPropertyChanging();
					this._fligthSegment = value;
					this.SendPropertyChanged("FligthSegment");
					this.OnFligthSegmentChanged();
				}
			}
		}
		
		[Column(Storage="_departureTime", DbType="datetime NOT NULL")]
		public System.DateTime DepartureTime
		{
			get
			{
				return this._departureTime;
			}
			set
			{
				if ((this._departureTime != value))
				{
					this.OnDepartureTimeChanging(value);
					this.SendPropertyChanging();
					this._departureTime = value;
					this.SendPropertyChanged("DepartureTime");
					this.OnDepartureTimeChanged();
				}
			}
		}
		
		[Column(Storage="_aireLine", DbType="tinyint NOT NULL")]
		public byte AireLine
		{
			get
			{
				return this._aireLine;
			}
			set
			{
				if ((this._aireLine != value))
				{
					this.OnAireLineChanging(value);
					this.SendPropertyChanging();
					this._aireLine = value;
					this.SendPropertyChanged("AireLine");
					this.OnAireLineChanged();
				}
			}
		}
		
		[Column(Storage="_discount", DbType="decimal(8,6) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[Column(Storage="_ticketId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TicketId
		{
			get
			{
				return this._ticketId;
			}
			set
			{
				if ((this._ticketId != value))
				{
					if (this._ticketPlanTicketOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._ticketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		[Column(Storage="_ticketTime", DbType="varchar(255)")]
		public string TicketTime
		{
			get
			{
				return this._ticketTime;
			}
			set
			{
				if ((this._ticketTime != value))
				{
					this.OnTicketTimeChanging(value);
					this.SendPropertyChanging();
					this._ticketTime = value;
					this.SendPropertyChanged("TicketTime");
					this.OnTicketTimeChanged();
				}
			}
		}
		
		[Association(Name="PlanTicketOut_PlanTicketFlight", Storage="_ticketPlanTicketOut", ThisKey="TicketId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public PlanTicketOut TicketPlanTicketOut
		{
			get
			{
				return this._ticketPlanTicketOut.Entity;
			}
			set
			{
				PlanTicketOut previousValue = this._ticketPlanTicketOut.Entity;
				if (((previousValue != value) 
							|| (this._ticketPlanTicketOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticketPlanTicketOut.Entity = null;
						previousValue.TicketPlanTicketFlightList.Remove(this);
					}
					this._ticketPlanTicketOut.Entity = value;
					if ((value != null))
					{
						value.TicketPlanTicketFlightList.Add(this);
						this._ticketId = value.Id;
					}
					else
					{
						this._ticketId = default(string);
					}
					this.SendPropertyChanged("TicketPlanTicketOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_PlanTicketKind")]
	public partial class PlanTicketKind : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ticketId;
		
		private decimal _price;
		
		private decimal _oilFee;
		
		private int _peopleCount;
		
		private decimal _agencyPrice;
		
		private decimal _totalMoney;
		
		private byte _ticketType;
		
		private EntityRef<PlanTicketOut> _ticketPlanTicketOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTicketIdChanging(string value);
    partial void OnTicketIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnOilFeeChanging(decimal value);
    partial void OnOilFeeChanged();
    partial void OnPeopleCountChanging(int value);
    partial void OnPeopleCountChanged();
    partial void OnAgencyPriceChanging(decimal value);
    partial void OnAgencyPriceChanged();
    partial void OnTotalMoneyChanging(decimal value);
    partial void OnTotalMoneyChanged();
    partial void OnTicketTypeChanging(byte value);
    partial void OnTicketTypeChanged();
    #endregion
		
		public PlanTicketKind()
		{
			this._ticketPlanTicketOut = default(EntityRef<PlanTicketOut>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ticketId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TicketId
		{
			get
			{
				return this._ticketId;
			}
			set
			{
				if ((this._ticketId != value))
				{
					if (this._ticketPlanTicketOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._ticketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_oilFee", DbType="money NOT NULL")]
		public decimal OilFee
		{
			get
			{
				return this._oilFee;
			}
			set
			{
				if ((this._oilFee != value))
				{
					this.OnOilFeeChanging(value);
					this.SendPropertyChanging();
					this._oilFee = value;
					this.SendPropertyChanged("OilFee");
					this.OnOilFeeChanged();
				}
			}
		}
		
		[Column(Storage="_peopleCount", DbType="int NOT NULL")]
		public int PeopleCount
		{
			get
			{
				return this._peopleCount;
			}
			set
			{
				if ((this._peopleCount != value))
				{
					this.OnPeopleCountChanging(value);
					this.SendPropertyChanging();
					this._peopleCount = value;
					this.SendPropertyChanged("PeopleCount");
					this.OnPeopleCountChanged();
				}
			}
		}
		
		[Column(Storage="_agencyPrice", DbType="money NOT NULL")]
		public decimal AgencyPrice
		{
			get
			{
				return this._agencyPrice;
			}
			set
			{
				if ((this._agencyPrice != value))
				{
					this.OnAgencyPriceChanging(value);
					this.SendPropertyChanging();
					this._agencyPrice = value;
					this.SendPropertyChanged("AgencyPrice");
					this.OnAgencyPriceChanged();
				}
			}
		}
		
		[Column(Storage="_totalMoney", DbType="money NOT NULL")]
		public decimal TotalMoney
		{
			get
			{
				return this._totalMoney;
			}
			set
			{
				if ((this._totalMoney != value))
				{
					this.OnTotalMoneyChanging(value);
					this.SendPropertyChanging();
					this._totalMoney = value;
					this.SendPropertyChanged("TotalMoney");
					this.OnTotalMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_ticketType", DbType="tinyint NOT NULL")]
		public byte TicketType
		{
			get
			{
				return this._ticketType;
			}
			set
			{
				if ((this._ticketType != value))
				{
					this.OnTicketTypeChanging(value);
					this.SendPropertyChanging();
					this._ticketType = value;
					this.SendPropertyChanged("TicketType");
					this.OnTicketTypeChanged();
				}
			}
		}
		
		[Association(Name="PlanTicketOut_PlanTicketKind", Storage="_ticketPlanTicketOut", ThisKey="TicketId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public PlanTicketOut TicketPlanTicketOut
		{
			get
			{
				return this._ticketPlanTicketOut.Entity;
			}
			set
			{
				PlanTicketOut previousValue = this._ticketPlanTicketOut.Entity;
				if (((previousValue != value) 
							|| (this._ticketPlanTicketOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticketPlanTicketOut.Entity = null;
						previousValue.TicketPlanTicketKindList.Remove(this);
					}
					this._ticketPlanTicketOut.Entity = value;
					if ((value != null))
					{
						value.TicketPlanTicketKindList.Add(this);
						this._ticketId = value.Id;
					}
					else
					{
						this._ticketId = default(string);
					}
					this.SendPropertyChanged("TicketPlanTicketOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_PlanTicketOut")]
	public partial class PlanTicketOut : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _pnr;
		
		private decimal _total;
		
		private string _notice;
		
		private string _ticketOffice;
		
		private int _ticketOfficeId;
		
		private string _ticketNum;
		
		private System.Nullable<int> _payType;
		
		private string _remark;
		
		private string _tourId;
		
		private byte _state;
		
		private string _operator;
		
		private int _operateID;
		
		private int _companyID;
		
		private decimal _addAmount;
		
		private decimal _reduceAmount;
		
		private decimal _totalAmount;
		
		private string _fRemark;
		
		private decimal _payAmount;
		
		private System.Nullable<decimal> _returnAmount;
		
		private System.DateTime _registerTime;
		
		private int _registerOperatorId;
		
		private System.Nullable<System.DateTime> _ticketOutTime;
		
		private EntitySet<PlanTicketFlight> _ticketPlanTicketFlightList;
		
		private EntitySet<PlanTicketKind> _ticketPlanTicketKindList;
		
		private EntitySet<PlanTicketOutCustomer> _ticketOutPlanTicketOutCustomerList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnPnrChanging(string value);
    partial void OnPnrChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnNoticeChanging(string value);
    partial void OnNoticeChanged();
    partial void OnTicketOfficeChanging(string value);
    partial void OnTicketOfficeChanged();
    partial void OnTicketOfficeIdChanging(int value);
    partial void OnTicketOfficeIdChanged();
    partial void OnTicketNumChanging(string value);
    partial void OnTicketNumChanged();
    partial void OnPayTypeChanging(System.Nullable<int> value);
    partial void OnPayTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnOperateIDChanging(int value);
    partial void OnOperateIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnAddAmountChanging(decimal value);
    partial void OnAddAmountChanged();
    partial void OnReduceAmountChanging(decimal value);
    partial void OnReduceAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnFRemarkChanging(string value);
    partial void OnFRemarkChanged();
    partial void OnPayAmountChanging(decimal value);
    partial void OnPayAmountChanged();
    partial void OnReturnAmountChanging(System.Nullable<decimal> value);
    partial void OnReturnAmountChanged();
    partial void OnRegisterTimeChanging(System.DateTime value);
    partial void OnRegisterTimeChanged();
    partial void OnRegisterOperatorIdChanging(int value);
    partial void OnRegisterOperatorIdChanged();
    partial void OnTicketOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTicketOutTimeChanged();
    #endregion
		
		public PlanTicketOut()
		{
			this._ticketPlanTicketFlightList = new EntitySet<PlanTicketFlight>(new Action<PlanTicketFlight>(this.attach_ticketPlanTicketFlightList), new Action<PlanTicketFlight>(this.detach_ticketPlanTicketFlightList));
			this._ticketPlanTicketKindList = new EntitySet<PlanTicketKind>(new Action<PlanTicketKind>(this.attach_ticketPlanTicketKindList), new Action<PlanTicketKind>(this.detach_ticketPlanTicketKindList));
			this._ticketOutPlanTicketOutCustomerList = new EntitySet<PlanTicketOutCustomer>(new Action<PlanTicketOutCustomer>(this.attach_ticketOutPlanTicketOutCustomerList), new Action<PlanTicketOutCustomer>(this.detach_ticketOutPlanTicketOutCustomerList));
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="PNR", Storage="_pnr", DbType="nvarchar(MAX)")]
		public string Pnr
		{
			get
			{
				return this._pnr;
			}
			set
			{
				if ((this._pnr != value))
				{
					this.OnPnrChanging(value);
					this.SendPropertyChanging();
					this._pnr = value;
					this.SendPropertyChanged("Pnr");
					this.OnPnrChanged();
				}
			}
		}
		
		[Column(Storage="_total", DbType="money NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_notice", DbType="nvarchar(250)")]
		public string Notice
		{
			get
			{
				return this._notice;
			}
			set
			{
				if ((this._notice != value))
				{
					this.OnNoticeChanging(value);
					this.SendPropertyChanging();
					this._notice = value;
					this.SendPropertyChanged("Notice");
					this.OnNoticeChanged();
				}
			}
		}
		
		[Column(Storage="_ticketOffice", DbType="nvarchar(250)")]
		public string TicketOffice
		{
			get
			{
				return this._ticketOffice;
			}
			set
			{
				if ((this._ticketOffice != value))
				{
					this.OnTicketOfficeChanging(value);
					this.SendPropertyChanging();
					this._ticketOffice = value;
					this.SendPropertyChanged("TicketOffice");
					this.OnTicketOfficeChanged();
				}
			}
		}
		
		[Column(Storage="_ticketOfficeId", DbType="int NOT NULL")]
		public int TicketOfficeId
		{
			get
			{
				return this._ticketOfficeId;
			}
			set
			{
				if ((this._ticketOfficeId != value))
				{
					this.OnTicketOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._ticketOfficeId = value;
					this.SendPropertyChanged("TicketOfficeId");
					this.OnTicketOfficeIdChanged();
				}
			}
		}
		
		[Column(Storage="_ticketNum", DbType="nvarchar(50)")]
		public string TicketNum
		{
			get
			{
				return this._ticketNum;
			}
			set
			{
				if ((this._ticketNum != value))
				{
					this.OnTicketNumChanging(value);
					this.SendPropertyChanging();
					this._ticketNum = value;
					this.SendPropertyChanged("TicketNum");
					this.OnTicketNumChanged();
				}
			}
		}
		
		[Column(Storage="_payType", DbType="int")]
		public System.Nullable<int> PayType
		{
			get
			{
				return this._payType;
			}
			set
			{
				if ((this._payType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._payType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(250)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_state", DbType="tinyint NOT NULL")]
		public byte State
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_operator", DbType="nvarchar(50)")]
		public string Operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_operateID", DbType="int NOT NULL")]
		public int OperateID
		{
			get
			{
				return this._operateID;
			}
			set
			{
				if ((this._operateID != value))
				{
					this.OnOperateIDChanging(value);
					this.SendPropertyChanging();
					this._operateID = value;
					this.SendPropertyChanged("OperateID");
					this.OnOperateIDChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_addAmount", DbType="money NOT NULL")]
		public decimal AddAmount
		{
			get
			{
				return this._addAmount;
			}
			set
			{
				if ((this._addAmount != value))
				{
					this.OnAddAmountChanging(value);
					this.SendPropertyChanging();
					this._addAmount = value;
					this.SendPropertyChanged("AddAmount");
					this.OnAddAmountChanged();
				}
			}
		}
		
		[Column(Storage="_reduceAmount", DbType="money NOT NULL")]
		public decimal ReduceAmount
		{
			get
			{
				return this._reduceAmount;
			}
			set
			{
				if ((this._reduceAmount != value))
				{
					this.OnReduceAmountChanging(value);
					this.SendPropertyChanging();
					this._reduceAmount = value;
					this.SendPropertyChanged("ReduceAmount");
					this.OnReduceAmountChanged();
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[Column(Storage="_fRemark", DbType="nvarchar(250)")]
		public string FRemark
		{
			get
			{
				return this._fRemark;
			}
			set
			{
				if ((this._fRemark != value))
				{
					this.OnFRemarkChanging(value);
					this.SendPropertyChanging();
					this._fRemark = value;
					this.SendPropertyChanged("FRemark");
					this.OnFRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_payAmount", DbType="money NOT NULL")]
		public decimal PayAmount
		{
			get
			{
				return this._payAmount;
			}
			set
			{
				if ((this._payAmount != value))
				{
					this.OnPayAmountChanging(value);
					this.SendPropertyChanging();
					this._payAmount = value;
					this.SendPropertyChanged("PayAmount");
					this.OnPayAmountChanged();
				}
			}
		}
		
		[Column(Storage="_returnAmount", DbType="money")]
		public System.Nullable<decimal> ReturnAmount
		{
			get
			{
				return this._returnAmount;
			}
			set
			{
				if ((this._returnAmount != value))
				{
					this.OnReturnAmountChanging(value);
					this.SendPropertyChanging();
					this._returnAmount = value;
					this.SendPropertyChanged("ReturnAmount");
					this.OnReturnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_registerTime", DbType="datetime NOT NULL")]
		public System.DateTime RegisterTime
		{
			get
			{
				return this._registerTime;
			}
			set
			{
				if ((this._registerTime != value))
				{
					this.OnRegisterTimeChanging(value);
					this.SendPropertyChanging();
					this._registerTime = value;
					this.SendPropertyChanged("RegisterTime");
					this.OnRegisterTimeChanged();
				}
			}
		}
		
		[Column(Storage="_registerOperatorId", DbType="int NOT NULL")]
		public int RegisterOperatorId
		{
			get
			{
				return this._registerOperatorId;
			}
			set
			{
				if ((this._registerOperatorId != value))
				{
					this.OnRegisterOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._registerOperatorId = value;
					this.SendPropertyChanged("RegisterOperatorId");
					this.OnRegisterOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_ticketOutTime", DbType="datetime")]
		public System.Nullable<System.DateTime> TicketOutTime
		{
			get
			{
				return this._ticketOutTime;
			}
			set
			{
				if ((this._ticketOutTime != value))
				{
					this.OnTicketOutTimeChanging(value);
					this.SendPropertyChanging();
					this._ticketOutTime = value;
					this.SendPropertyChanged("TicketOutTime");
					this.OnTicketOutTimeChanged();
				}
			}
		}
		
		[Association(Name="PlanTicketOut_PlanTicketFlight", Storage="_ticketPlanTicketFlightList", ThisKey="Id", OtherKey="TicketId")]
		public EntitySet<PlanTicketFlight> TicketPlanTicketFlightList
		{
			get
			{
				return this._ticketPlanTicketFlightList;
			}
			set
			{
				this._ticketPlanTicketFlightList.Assign(value);
			}
		}
		
		[Association(Name="PlanTicketOut_PlanTicketKind", Storage="_ticketPlanTicketKindList", ThisKey="Id", OtherKey="TicketId")]
		public EntitySet<PlanTicketKind> TicketPlanTicketKindList
		{
			get
			{
				return this._ticketPlanTicketKindList;
			}
			set
			{
				this._ticketPlanTicketKindList.Assign(value);
			}
		}
		
		[Association(Name="PlanTicketOut_PlanTicketOutCustomer", Storage="_ticketOutPlanTicketOutCustomerList", ThisKey="Id", OtherKey="TicketOutId")]
		public EntitySet<PlanTicketOutCustomer> TicketOutPlanTicketOutCustomerList
		{
			get
			{
				return this._ticketOutPlanTicketOutCustomerList;
			}
			set
			{
				this._ticketOutPlanTicketOutCustomerList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ticketPlanTicketFlightList(PlanTicketFlight entity)
		{
			this.SendPropertyChanging();
			entity.TicketPlanTicketOut = this;
		}
		
		private void detach_ticketPlanTicketFlightList(PlanTicketFlight entity)
		{
			this.SendPropertyChanging();
			entity.TicketPlanTicketOut = null;
		}
		
		private void attach_ticketPlanTicketKindList(PlanTicketKind entity)
		{
			this.SendPropertyChanging();
			entity.TicketPlanTicketOut = this;
		}
		
		private void detach_ticketPlanTicketKindList(PlanTicketKind entity)
		{
			this.SendPropertyChanging();
			entity.TicketPlanTicketOut = null;
		}
		
		private void attach_ticketOutPlanTicketOutCustomerList(PlanTicketOutCustomer entity)
		{
			this.SendPropertyChanging();
			entity.TicketOutPlanTicketOut = this;
		}
		
		private void detach_ticketOutPlanTicketOutCustomerList(PlanTicketOutCustomer entity)
		{
			this.SendPropertyChanging();
			entity.TicketOutPlanTicketOut = null;
		}
	}
	
	[Table(Name="dbo.tbl_PlanTicketOutCustomer")]
	public partial class PlanTicketOutCustomer : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ticketOutId;
		
		private string _userId;
		
		private string _isApplyRefund;
		
		private EntityRef<PlanTicketOut> _ticketOutPlanTicketOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicketOutIdChanging(string value);
    partial void OnTicketOutIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnIsApplyRefundChanging(string value);
    partial void OnIsApplyRefundChanged();
    #endregion
		
		public PlanTicketOutCustomer()
		{
			this._ticketOutPlanTicketOut = default(EntityRef<PlanTicketOut>);
			OnCreated();
		}
		
		[Column(Storage="_ticketOutId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TicketOutId
		{
			get
			{
				return this._ticketOutId;
			}
			set
			{
				if ((this._ticketOutId != value))
				{
					if (this._ticketOutPlanTicketOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketOutIdChanging(value);
					this.SendPropertyChanging();
					this._ticketOutId = value;
					this.SendPropertyChanged("TicketOutId");
					this.OnTicketOutIdChanged();
				}
			}
		}
		
		[Column(Storage="_userId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_isApplyRefund", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsApplyRefund
		{
			get
			{
				return this._isApplyRefund;
			}
			set
			{
				if ((this._isApplyRefund != value))
				{
					this.OnIsApplyRefundChanging(value);
					this.SendPropertyChanging();
					this._isApplyRefund = value;
					this.SendPropertyChanged("IsApplyRefund");
					this.OnIsApplyRefundChanged();
				}
			}
		}
		
		[Association(Name="PlanTicketOut_PlanTicketOutCustomer", Storage="_ticketOutPlanTicketOut", ThisKey="TicketOutId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public PlanTicketOut TicketOutPlanTicketOut
		{
			get
			{
				return this._ticketOutPlanTicketOut.Entity;
			}
			set
			{
				PlanTicketOut previousValue = this._ticketOutPlanTicketOut.Entity;
				if (((previousValue != value) 
							|| (this._ticketOutPlanTicketOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticketOutPlanTicketOut.Entity = null;
						previousValue.TicketOutPlanTicketOutCustomerList.Remove(this);
					}
					this._ticketOutPlanTicketOut.Entity = value;
					if ((value != null))
					{
						value.TicketOutPlanTicketOutCustomerList.Add(this);
						this._ticketOutId = value.Id;
					}
					else
					{
						this._ticketOutId = default(string);
					}
					this.SendPropertyChanged("TicketOutPlanTicketOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Quote")]
	public partial class Quote : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _filePath;
		
		private string _fileName;
		
		private int _operatorId;
		
		private System.Nullable<System.DateTime> _validityStart;
		
		private System.Nullable<System.DateTime> _validityEnd;
		
		private string _memo;
		
		private System.DateTime _addTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnValidityStartChanging(System.Nullable<System.DateTime> value);
    partial void OnValidityStartChanged();
    partial void OnValidityEndChanging(System.Nullable<System.DateTime> value);
    partial void OnValidityEndChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnAddTimeChanging(System.DateTime value);
    partial void OnAddTimeChanged();
    #endregion
		
		public Quote()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_fileName", DbType="nvarchar(255)")]
		public string FileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_validityStart", DbType="datetime")]
		public System.Nullable<System.DateTime> ValidityStart
		{
			get
			{
				return this._validityStart;
			}
			set
			{
				if ((this._validityStart != value))
				{
					this.OnValidityStartChanging(value);
					this.SendPropertyChanging();
					this._validityStart = value;
					this.SendPropertyChanged("ValidityStart");
					this.OnValidityStartChanged();
				}
			}
		}
		
		[Column(Storage="_validityEnd", DbType="datetime")]
		public System.Nullable<System.DateTime> ValidityEnd
		{
			get
			{
				return this._validityEnd;
			}
			set
			{
				if ((this._validityEnd != value))
				{
					this.OnValidityEndChanging(value);
					this.SendPropertyChanging();
					this._validityEnd = value;
					this.SendPropertyChanged("ValidityEnd");
					this.OnValidityEndChanged();
				}
			}
		}
		
		[Column(Storage="_memo", DbType="nvarchar(MAX)")]
		public string Memo
		{
			get
			{
				return this._memo;
			}
			set
			{
				if ((this._memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[Column(Storage="_addTime", DbType="datetime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._addTime;
			}
			set
			{
				if ((this._addTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._addTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_ReceiveRefund")]
	public partial class ReceiveRefund : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyID;
		
		private System.Nullable<int> _payCompanyId;
		
		private string _payCompanyName;
		
		private string _itemId;
		
		private byte _itemType;
		
		private System.Nullable<System.DateTime> _refundDate;
		
		private int _staffNo;
		
		private string _staffName;
		
		private decimal _refundMoney;
		
		private byte _refundType;
		
		private string _isBill;
		
		private decimal _billAmount;
		
		private string _billNo;
		
		private byte _isReceive;
		
		private byte _isCheck;
		
		private string _remark;
		
		private int _operatorID;
		
		private System.Nullable<System.DateTime> _issueTime;
		
		private System.Nullable<int> _checkerId;
		
		private EntityRef<TourOrder> _itemTourOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnPayCompanyIdChanging(System.Nullable<int> value);
    partial void OnPayCompanyIdChanged();
    partial void OnPayCompanyNameChanging(string value);
    partial void OnPayCompanyNameChanged();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnItemTypeChanging(byte value);
    partial void OnItemTypeChanged();
    partial void OnRefundDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRefundDateChanged();
    partial void OnStaffNoChanging(int value);
    partial void OnStaffNoChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnRefundMoneyChanging(decimal value);
    partial void OnRefundMoneyChanged();
    partial void OnRefundTypeChanging(byte value);
    partial void OnRefundTypeChanged();
    partial void OnIsBillChanging(string value);
    partial void OnIsBillChanged();
    partial void OnBillAmountChanging(decimal value);
    partial void OnBillAmountChanged();
    partial void OnBillNoChanging(string value);
    partial void OnBillNoChanged();
    partial void OnIsReceiveChanging(byte value);
    partial void OnIsReceiveChanged();
    partial void OnIsCheckChanging(byte value);
    partial void OnIsCheckChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperatorIDChanging(int value);
    partial void OnOperatorIDChanged();
    partial void OnIssueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueTimeChanged();
    partial void OnCheckerIdChanging(System.Nullable<int> value);
    partial void OnCheckerIdChanged();
    #endregion
		
		public ReceiveRefund()
		{
			this._itemTourOrder = default(EntityRef<TourOrder>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_payCompanyId", DbType="int")]
		public System.Nullable<int> PayCompanyId
		{
			get
			{
				return this._payCompanyId;
			}
			set
			{
				if ((this._payCompanyId != value))
				{
					this.OnPayCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._payCompanyId = value;
					this.SendPropertyChanged("PayCompanyId");
					this.OnPayCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_payCompanyName", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		public string PayCompanyName
		{
			get
			{
				return this._payCompanyName;
			}
			set
			{
				if ((this._payCompanyName != value))
				{
					this.OnPayCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._payCompanyName = value;
					this.SendPropertyChanged("PayCompanyName");
					this.OnPayCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._itemTourOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="tinyint NOT NULL")]
		public byte ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[Column(Storage="_refundDate", DbType="datetime")]
		public System.Nullable<System.DateTime> RefundDate
		{
			get
			{
				return this._refundDate;
			}
			set
			{
				if ((this._refundDate != value))
				{
					this.OnRefundDateChanging(value);
					this.SendPropertyChanging();
					this._refundDate = value;
					this.SendPropertyChanged("RefundDate");
					this.OnRefundDateChanged();
				}
			}
		}
		
		[Column(Storage="_staffNo", DbType="int NOT NULL")]
		public int StaffNo
		{
			get
			{
				return this._staffNo;
			}
			set
			{
				if ((this._staffNo != value))
				{
					this.OnStaffNoChanging(value);
					this.SendPropertyChanging();
					this._staffNo = value;
					this.SendPropertyChanged("StaffNo");
					this.OnStaffNoChanged();
				}
			}
		}
		
		[Column(Storage="_staffName", DbType="nvarchar(100)")]
		public string StaffName
		{
			get
			{
				return this._staffName;
			}
			set
			{
				if ((this._staffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._staffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[Column(Storage="_refundMoney", DbType="money NOT NULL")]
		public decimal RefundMoney
		{
			get
			{
				return this._refundMoney;
			}
			set
			{
				if ((this._refundMoney != value))
				{
					this.OnRefundMoneyChanging(value);
					this.SendPropertyChanging();
					this._refundMoney = value;
					this.SendPropertyChanged("RefundMoney");
					this.OnRefundMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_refundType", DbType="tinyint NOT NULL")]
		public byte RefundType
		{
			get
			{
				return this._refundType;
			}
			set
			{
				if ((this._refundType != value))
				{
					this.OnRefundTypeChanging(value);
					this.SendPropertyChanging();
					this._refundType = value;
					this.SendPropertyChanged("RefundType");
					this.OnRefundTypeChanged();
				}
			}
		}
		
		[Column(Storage="_isBill", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsBill
		{
			get
			{
				return this._isBill;
			}
			set
			{
				if ((this._isBill != value))
				{
					this.OnIsBillChanging(value);
					this.SendPropertyChanging();
					this._isBill = value;
					this.SendPropertyChanged("IsBill");
					this.OnIsBillChanged();
				}
			}
		}
		
		[Column(Storage="_billAmount", DbType="money NOT NULL")]
		public decimal BillAmount
		{
			get
			{
				return this._billAmount;
			}
			set
			{
				if ((this._billAmount != value))
				{
					this.OnBillAmountChanging(value);
					this.SendPropertyChanging();
					this._billAmount = value;
					this.SendPropertyChanged("BillAmount");
					this.OnBillAmountChanged();
				}
			}
		}
		
		[Column(Storage="_billNo", DbType="nvarchar(100)")]
		public string BillNo
		{
			get
			{
				return this._billNo;
			}
			set
			{
				if ((this._billNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._billNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[Column(Storage="_isReceive", DbType="tinyint NOT NULL")]
		public byte IsReceive
		{
			get
			{
				return this._isReceive;
			}
			set
			{
				if ((this._isReceive != value))
				{
					this.OnIsReceiveChanging(value);
					this.SendPropertyChanging();
					this._isReceive = value;
					this.SendPropertyChanged("IsReceive");
					this.OnIsReceiveChanged();
				}
			}
		}
		
		[Column(Storage="_isCheck", DbType="tinyint NOT NULL")]
		public byte IsCheck
		{
			get
			{
				return this._isCheck;
			}
			set
			{
				if ((this._isCheck != value))
				{
					this.OnIsCheckChanging(value);
					this.SendPropertyChanging();
					this._isCheck = value;
					this.SendPropertyChanged("IsCheck");
					this.OnIsCheckChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._operatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime")]
		public System.Nullable<System.DateTime> IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_checkerId", DbType="int")]
		public System.Nullable<int> CheckerId
		{
			get
			{
				return this._checkerId;
			}
			set
			{
				if ((this._checkerId != value))
				{
					this.OnCheckerIdChanging(value);
					this.SendPropertyChanging();
					this._checkerId = value;
					this.SendPropertyChanged("CheckerId");
					this.OnCheckerIdChanged();
				}
			}
		}
		
		[Association(Name="TourOrder_ReceiveRefund", Storage="_itemTourOrder", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public TourOrder ItemTourOrder
		{
			get
			{
				return this._itemTourOrder.Entity;
			}
			set
			{
				TourOrder previousValue = this._itemTourOrder.Entity;
				if (((previousValue != value) 
							|| (this._itemTourOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._itemTourOrder.Entity = null;
						previousValue.ItemReceiveRefundList.Remove(this);
					}
					this._itemTourOrder.Entity = value;
					if ((value != null))
					{
						value.ItemReceiveRefundList.Add(this);
						this._itemId = value.Id;
					}
					else
					{
						this._itemId = default(string);
					}
					this.SendPropertyChanged("ItemTourOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Route")]
	public partial class Route : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyID;
		
		private int _operatorID;
		
		private string _operatorName;
		
		private int _areaId;
		
		private string _routeName;
		
		private string _routeDepict;
		
		private int _routeDays;
		
		private System.DateTime _issueTime;
		
		private byte _routeIssueTypeId;
		
		private string _isDelete;
		
		private int _tourCount;
		
		private int _visitorCount;
		
		private EntityRef<RouteFastPlan> _routeFastPlan;
		
		private EntitySet<RouteFile> _routeFileList;
		
		private EntitySet<RouteQuote> _routeQuoteList;
		
		private EntitySet<RouteService> _routeServiceList;
		
		private EntityRef<RouteStandardPlan> _routeStandardPlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnOperatorIDChanging(int value);
    partial void OnOperatorIDChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnRouteDepictChanging(string value);
    partial void OnRouteDepictChanged();
    partial void OnRouteDaysChanging(int value);
    partial void OnRouteDaysChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnRouteIssueTypeIdChanging(byte value);
    partial void OnRouteIssueTypeIdChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnTourCountChanging(int value);
    partial void OnTourCountChanged();
    partial void OnVisitorCountChanging(int value);
    partial void OnVisitorCountChanged();
    #endregion
		
		public Route()
		{
			this._routeFastPlan = default(EntityRef<RouteFastPlan>);
			this._routeFileList = new EntitySet<RouteFile>(new Action<RouteFile>(this.attach_routeFileList), new Action<RouteFile>(this.detach_routeFileList));
			this._routeQuoteList = new EntitySet<RouteQuote>(new Action<RouteQuote>(this.attach_routeQuoteList), new Action<RouteQuote>(this.detach_routeQuoteList));
			this._routeServiceList = new EntitySet<RouteService>(new Action<RouteService>(this.attach_routeServiceList), new Action<RouteService>(this.detach_routeServiceList));
			this._routeStandardPlan = default(EntityRef<RouteStandardPlan>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._operatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(100)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(250)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._routeName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[Column(Storage="_routeDepict", DbType="nvarchar(250)")]
		public string RouteDepict
		{
			get
			{
				return this._routeDepict;
			}
			set
			{
				if ((this._routeDepict != value))
				{
					this.OnRouteDepictChanging(value);
					this.SendPropertyChanging();
					this._routeDepict = value;
					this.SendPropertyChanged("RouteDepict");
					this.OnRouteDepictChanged();
				}
			}
		}
		
		[Column(Storage="_routeDays", DbType="int NOT NULL")]
		public int RouteDays
		{
			get
			{
				return this._routeDays;
			}
			set
			{
				if ((this._routeDays != value))
				{
					this.OnRouteDaysChanging(value);
					this.SendPropertyChanging();
					this._routeDays = value;
					this.SendPropertyChanged("RouteDays");
					this.OnRouteDaysChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_routeIssueTypeId", DbType="tinyint NOT NULL")]
		public byte RouteIssueTypeId
		{
			get
			{
				return this._routeIssueTypeId;
			}
			set
			{
				if ((this._routeIssueTypeId != value))
				{
					this.OnRouteIssueTypeIdChanging(value);
					this.SendPropertyChanging();
					this._routeIssueTypeId = value;
					this.SendPropertyChanged("RouteIssueTypeId");
					this.OnRouteIssueTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_tourCount", DbType="int NOT NULL")]
		public int TourCount
		{
			get
			{
				return this._tourCount;
			}
			set
			{
				if ((this._tourCount != value))
				{
					this.OnTourCountChanging(value);
					this.SendPropertyChanging();
					this._tourCount = value;
					this.SendPropertyChanged("TourCount");
					this.OnTourCountChanged();
				}
			}
		}
		
		[Column(Storage="_visitorCount", DbType="int NOT NULL")]
		public int VisitorCount
		{
			get
			{
				return this._visitorCount;
			}
			set
			{
				if ((this._visitorCount != value))
				{
					this.OnVisitorCountChanging(value);
					this.SendPropertyChanging();
					this._visitorCount = value;
					this.SendPropertyChanged("VisitorCount");
					this.OnVisitorCountChanged();
				}
			}
		}
		
		[Association(Name="Route_RouteFastPlan", Storage="_routeFastPlan", ThisKey="Id", OtherKey="RouteId", IsUnique=true, IsForeignKey=false)]
		public RouteFastPlan RouteFastPlan
		{
			get
			{
				return this._routeFastPlan.Entity;
			}
			set
			{
				RouteFastPlan previousValue = this._routeFastPlan.Entity;
				if (((previousValue != value) 
							|| (this._routeFastPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._routeFastPlan.Entity = null;
						previousValue.Route = null;
					}
					this._routeFastPlan.Entity = value;
					if ((value != null))
					{
						value.Route = this;
					}
					this.SendPropertyChanged("RouteFastPlan");
				}
			}
		}
		
		[Association(Name="Route_RouteFile", Storage="_routeFileList", ThisKey="Id", OtherKey="RouteId")]
		public EntitySet<RouteFile> RouteFileList
		{
			get
			{
				return this._routeFileList;
			}
			set
			{
				this._routeFileList.Assign(value);
			}
		}
		
		[Association(Name="Route_RouteQuote", Storage="_routeQuoteList", ThisKey="Id", OtherKey="RouteId")]
		public EntitySet<RouteQuote> RouteQuoteList
		{
			get
			{
				return this._routeQuoteList;
			}
			set
			{
				this._routeQuoteList.Assign(value);
			}
		}
		
		[Association(Name="Route_RouteService", Storage="_routeServiceList", ThisKey="Id", OtherKey="RouteId")]
		public EntitySet<RouteService> RouteServiceList
		{
			get
			{
				return this._routeServiceList;
			}
			set
			{
				this._routeServiceList.Assign(value);
			}
		}
		
		[Association(Name="Route_RouteStandardPlan", Storage="_routeStandardPlan", ThisKey="Id", OtherKey="RouteID", IsUnique=true, IsForeignKey=false)]
		public RouteStandardPlan RouteStandardPlan
		{
			get
			{
				return this._routeStandardPlan.Entity;
			}
			set
			{
				RouteStandardPlan previousValue = this._routeStandardPlan.Entity;
				if (((previousValue != value) 
							|| (this._routeStandardPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._routeStandardPlan.Entity = null;
						previousValue.Route = null;
					}
					this._routeStandardPlan.Entity = value;
					if ((value != null))
					{
						value.Route = this;
					}
					this.SendPropertyChanged("RouteStandardPlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_routeFileList(RouteFile entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_routeFileList(RouteFile entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
		
		private void attach_routeQuoteList(RouteQuote entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_routeQuoteList(RouteQuote entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
		
		private void attach_routeServiceList(RouteService entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_routeServiceList(RouteService entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
	}
	
	[Table(Name="dbo.tbl_RouteFastPlan")]
	public partial class RouteFastPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _routeId;
		
		private string _routePlan;
		
		private string _serveRule;
		
		private string _remark;
		
		private EntityRef<Route> _route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteIdChanging(int value);
    partial void OnRouteIdChanged();
    partial void OnRoutePlanChanging(string value);
    partial void OnRoutePlanChanged();
    partial void OnServeRuleChanging(string value);
    partial void OnServeRuleChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public RouteFastPlan()
		{
			this._route = default(EntityRef<Route>);
			OnCreated();
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					if (this._route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._routeId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_routePlan", DbType="nvarchar(MAX)")]
		public string RoutePlan
		{
			get
			{
				return this._routePlan;
			}
			set
			{
				if ((this._routePlan != value))
				{
					this.OnRoutePlanChanging(value);
					this.SendPropertyChanging();
					this._routePlan = value;
					this.SendPropertyChanged("RoutePlan");
					this.OnRoutePlanChanged();
				}
			}
		}
		
		[Column(Storage="_serveRule", DbType="nvarchar(MAX)")]
		public string ServeRule
		{
			get
			{
				return this._serveRule;
			}
			set
			{
				if ((this._serveRule != value))
				{
					this.OnServeRuleChanging(value);
					this.SendPropertyChanging();
					this._serveRule = value;
					this.SendPropertyChanged("ServeRule");
					this.OnServeRuleChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="Route_RouteFastPlan", Storage="_route", ThisKey="RouteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Route Route
		{
			get
			{
				return this._route.Entity;
			}
			set
			{
				Route previousValue = this._route.Entity;
				if (((previousValue != value) 
							|| (this._route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._route.Entity = null;
						previousValue.RouteFastPlan = null;
					}
					this._route.Entity = value;
					if ((value != null))
					{
						value.RouteFastPlan = this;
						this._routeId = value.Id;
					}
					else
					{
						this._routeId = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_RouteFile")]
	public partial class RouteFile : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _routeId;
		
		private string _fileName;
		
		private string _filePath;
		
		private string _remark;
		
		private EntityRef<Route> _route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRouteIdChanging(int value);
    partial void OnRouteIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public RouteFile()
		{
			this._route = default(EntityRef<Route>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					if (this._route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._routeId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_fileName", DbType="nvarchar(250)")]
		public string FileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(250)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(250)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="Route_RouteFile", Storage="_route", ThisKey="RouteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Route Route
		{
			get
			{
				return this._route.Entity;
			}
			set
			{
				Route previousValue = this._route.Entity;
				if (((previousValue != value) 
							|| (this._route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._route.Entity = null;
						previousValue.RouteFileList.Remove(this);
					}
					this._route.Entity = value;
					if ((value != null))
					{
						value.RouteFileList.Add(this);
						this._routeId = value.Id;
					}
					else
					{
						this._routeId = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_RouteQuote")]
	public partial class RouteQuote : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _routeId;
		
		private int _quoteUnitsId;
		
		private string _quoteUnitsName;
		
		private string _contactName;
		
		private string _contactTel;
		
		private System.DateTime _tmpLeaveDate;
		
		private int _adultNum;
		
		private int _childNum;
		
		private int _peopleNum;
		
		private decimal _localQuoteSum;
		
		private decimal _myQuoteSum;
		
		private decimal _ticketAgio;
		
		private string _remark;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private EntitySet<RouteQuoteList> _quoteRouteQuoteListList;
		
		private EntityRef<Route> _route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRouteIdChanging(int value);
    partial void OnRouteIdChanged();
    partial void OnQuoteUnitsIdChanging(int value);
    partial void OnQuoteUnitsIdChanged();
    partial void OnQuoteUnitsNameChanging(string value);
    partial void OnQuoteUnitsNameChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnTmpLeaveDateChanging(System.DateTime value);
    partial void OnTmpLeaveDateChanged();
    partial void OnAdultNumChanging(int value);
    partial void OnAdultNumChanged();
    partial void OnChildNumChanging(int value);
    partial void OnChildNumChanged();
    partial void OnPeopleNumChanging(int value);
    partial void OnPeopleNumChanged();
    partial void OnLocalQuoteSumChanging(decimal value);
    partial void OnLocalQuoteSumChanged();
    partial void OnMyQuoteSumChanging(decimal value);
    partial void OnMyQuoteSumChanged();
    partial void OnTicketAgioChanging(decimal value);
    partial void OnTicketAgioChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public RouteQuote()
		{
			this._quoteRouteQuoteListList = new EntitySet<RouteQuoteList>(new Action<RouteQuoteList>(this.attach_quoteRouteQuoteListList), new Action<RouteQuoteList>(this.detach_quoteRouteQuoteListList));
			this._route = default(EntityRef<Route>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					if (this._route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._routeId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_quoteUnitsId", DbType="int NOT NULL")]
		public int QuoteUnitsId
		{
			get
			{
				return this._quoteUnitsId;
			}
			set
			{
				if ((this._quoteUnitsId != value))
				{
					this.OnQuoteUnitsIdChanging(value);
					this.SendPropertyChanging();
					this._quoteUnitsId = value;
					this.SendPropertyChanged("QuoteUnitsId");
					this.OnQuoteUnitsIdChanged();
				}
			}
		}
		
		[Column(Storage="_quoteUnitsName", DbType="nvarchar(250)")]
		public string QuoteUnitsName
		{
			get
			{
				return this._quoteUnitsName;
			}
			set
			{
				if ((this._quoteUnitsName != value))
				{
					this.OnQuoteUnitsNameChanging(value);
					this.SendPropertyChanging();
					this._quoteUnitsName = value;
					this.SendPropertyChanged("QuoteUnitsName");
					this.OnQuoteUnitsNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(250)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(250)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_tmpLeaveDate", DbType="datetime NOT NULL")]
		public System.DateTime TmpLeaveDate
		{
			get
			{
				return this._tmpLeaveDate;
			}
			set
			{
				if ((this._tmpLeaveDate != value))
				{
					this.OnTmpLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._tmpLeaveDate = value;
					this.SendPropertyChanged("TmpLeaveDate");
					this.OnTmpLeaveDateChanged();
				}
			}
		}
		
		[Column(Storage="_adultNum", DbType="int NOT NULL")]
		public int AdultNum
		{
			get
			{
				return this._adultNum;
			}
			set
			{
				if ((this._adultNum != value))
				{
					this.OnAdultNumChanging(value);
					this.SendPropertyChanging();
					this._adultNum = value;
					this.SendPropertyChanged("AdultNum");
					this.OnAdultNumChanged();
				}
			}
		}
		
		[Column(Storage="_childNum", DbType="int NOT NULL")]
		public int ChildNum
		{
			get
			{
				return this._childNum;
			}
			set
			{
				if ((this._childNum != value))
				{
					this.OnChildNumChanging(value);
					this.SendPropertyChanging();
					this._childNum = value;
					this.SendPropertyChanged("ChildNum");
					this.OnChildNumChanged();
				}
			}
		}
		
		[Column(Storage="_peopleNum", DbType="int NOT NULL")]
		public int PeopleNum
		{
			get
			{
				return this._peopleNum;
			}
			set
			{
				if ((this._peopleNum != value))
				{
					this.OnPeopleNumChanging(value);
					this.SendPropertyChanging();
					this._peopleNum = value;
					this.SendPropertyChanged("PeopleNum");
					this.OnPeopleNumChanged();
				}
			}
		}
		
		[Column(Storage="_localQuoteSum", DbType="money NOT NULL")]
		public decimal LocalQuoteSum
		{
			get
			{
				return this._localQuoteSum;
			}
			set
			{
				if ((this._localQuoteSum != value))
				{
					this.OnLocalQuoteSumChanging(value);
					this.SendPropertyChanging();
					this._localQuoteSum = value;
					this.SendPropertyChanged("LocalQuoteSum");
					this.OnLocalQuoteSumChanged();
				}
			}
		}
		
		[Column(Storage="_myQuoteSum", DbType="money NOT NULL")]
		public decimal MyQuoteSum
		{
			get
			{
				return this._myQuoteSum;
			}
			set
			{
				if ((this._myQuoteSum != value))
				{
					this.OnMyQuoteSumChanging(value);
					this.SendPropertyChanging();
					this._myQuoteSum = value;
					this.SendPropertyChanged("MyQuoteSum");
					this.OnMyQuoteSumChanged();
				}
			}
		}
		
		[Column(Storage="_ticketAgio", DbType="decimal(8,6) NOT NULL")]
		public decimal TicketAgio
		{
			get
			{
				return this._ticketAgio;
			}
			set
			{
				if ((this._ticketAgio != value))
				{
					this.OnTicketAgioChanging(value);
					this.SendPropertyChanging();
					this._ticketAgio = value;
					this.SendPropertyChanged("TicketAgio");
					this.OnTicketAgioChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Association(Name="RouteQuote_RouteQuoteList", Storage="_quoteRouteQuoteListList", ThisKey="Id", OtherKey="QuoteId")]
		public EntitySet<RouteQuoteList> QuoteRouteQuoteListList
		{
			get
			{
				return this._quoteRouteQuoteListList;
			}
			set
			{
				this._quoteRouteQuoteListList.Assign(value);
			}
		}
		
		[Association(Name="Route_RouteQuote", Storage="_route", ThisKey="RouteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Route Route
		{
			get
			{
				return this._route.Entity;
			}
			set
			{
				Route previousValue = this._route.Entity;
				if (((previousValue != value) 
							|| (this._route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._route.Entity = null;
						previousValue.RouteQuoteList.Remove(this);
					}
					this._route.Entity = value;
					if ((value != null))
					{
						value.RouteQuoteList.Add(this);
						this._routeId = value.Id;
					}
					else
					{
						this._routeId = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_quoteRouteQuoteListList(RouteQuoteList entity)
		{
			this.SendPropertyChanging();
			entity.QuoteRouteQuote = this;
		}
		
		private void detach_quoteRouteQuoteListList(RouteQuoteList entity)
		{
			this.SendPropertyChanging();
			entity.QuoteRouteQuote = null;
		}
	}
	
	[Table(Name="dbo.tbl_RouteQuoteAsk")]
	public partial class RouteQuoteAsk : LinqEntityBase
	{
		
		private int _quoteId;
		
		private int _itemType;
		
		private string _concreteAsk;
		
		public RouteQuoteAsk()
		{
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="int NOT NULL")]
		public int ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this._itemType = value;
				}
			}
		}
		
		[Column(Storage="_concreteAsk", DbType="nvarchar(MAX)")]
		public string ConcreteAsk
		{
			get
			{
				return this._concreteAsk;
			}
			set
			{
				if ((this._concreteAsk != value))
				{
					this._concreteAsk = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tbl_RouteQuoteList")]
	public partial class RouteQuoteList : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _quoteId;
		
		private int _itemId;
		
		private string _reception;
		
		private decimal _localQuote;
		
		private decimal _myQuote;
		
		private EntityRef<RouteQuote> _quoteRouteQuote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuoteIdChanging(System.Nullable<int> value);
    partial void OnQuoteIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnReceptionChanging(string value);
    partial void OnReceptionChanged();
    partial void OnLocalQuoteChanging(decimal value);
    partial void OnLocalQuoteChanged();
    partial void OnMyQuoteChanging(decimal value);
    partial void OnMyQuoteChanged();
    #endregion
		
		public RouteQuoteList()
		{
			this._quoteRouteQuote = default(EntityRef<RouteQuote>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_quoteId", DbType="int")]
		public System.Nullable<int> QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					if (this._quoteRouteQuote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._quoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_reception", DbType="nvarchar(MAX)")]
		public string Reception
		{
			get
			{
				return this._reception;
			}
			set
			{
				if ((this._reception != value))
				{
					this.OnReceptionChanging(value);
					this.SendPropertyChanging();
					this._reception = value;
					this.SendPropertyChanged("Reception");
					this.OnReceptionChanged();
				}
			}
		}
		
		[Column(Storage="_localQuote", DbType="money NOT NULL")]
		public decimal LocalQuote
		{
			get
			{
				return this._localQuote;
			}
			set
			{
				if ((this._localQuote != value))
				{
					this.OnLocalQuoteChanging(value);
					this.SendPropertyChanging();
					this._localQuote = value;
					this.SendPropertyChanged("LocalQuote");
					this.OnLocalQuoteChanged();
				}
			}
		}
		
		[Column(Storage="_myQuote", DbType="money NOT NULL")]
		public decimal MyQuote
		{
			get
			{
				return this._myQuote;
			}
			set
			{
				if ((this._myQuote != value))
				{
					this.OnMyQuoteChanging(value);
					this.SendPropertyChanging();
					this._myQuote = value;
					this.SendPropertyChanged("MyQuote");
					this.OnMyQuoteChanged();
				}
			}
		}
		
		[Association(Name="RouteQuote_RouteQuoteList", Storage="_quoteRouteQuote", ThisKey="QuoteId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public RouteQuote QuoteRouteQuote
		{
			get
			{
				return this._quoteRouteQuote.Entity;
			}
			set
			{
				RouteQuote previousValue = this._quoteRouteQuote.Entity;
				if (((previousValue != value) 
							|| (this._quoteRouteQuote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._quoteRouteQuote.Entity = null;
						previousValue.QuoteRouteQuoteListList.Remove(this);
					}
					this._quoteRouteQuote.Entity = value;
					if ((value != null))
					{
						value.QuoteRouteQuoteListList.Add(this);
						this._quoteId = value.Id;
					}
					else
					{
						this._quoteId = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuoteRouteQuote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_RouteService")]
	public partial class RouteService : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _routeId;
		
		private string _serviceType;
		
		private string _serviceValue;
		
		private EntityRef<Route> _route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRouteIdChanging(int value);
    partial void OnRouteIdChanged();
    partial void OnServiceTypeChanging(string value);
    partial void OnServiceTypeChanged();
    partial void OnServiceValueChanging(string value);
    partial void OnServiceValueChanged();
    #endregion
		
		public RouteService()
		{
			this._route = default(EntityRef<Route>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					if (this._route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._routeId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_serviceType", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		public string ServiceType
		{
			get
			{
				return this._serviceType;
			}
			set
			{
				if ((this._serviceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._serviceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_serviceValue", DbType="nvarchar(MAX)")]
		public string ServiceValue
		{
			get
			{
				return this._serviceValue;
			}
			set
			{
				if ((this._serviceValue != value))
				{
					this.OnServiceValueChanging(value);
					this.SendPropertyChanging();
					this._serviceValue = value;
					this.SendPropertyChanged("ServiceValue");
					this.OnServiceValueChanged();
				}
			}
		}
		
		[Association(Name="Route_RouteService", Storage="_route", ThisKey="RouteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Route Route
		{
			get
			{
				return this._route.Entity;
			}
			set
			{
				Route previousValue = this._route.Entity;
				if (((previousValue != value) 
							|| (this._route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._route.Entity = null;
						previousValue.RouteServiceList.Remove(this);
					}
					this._route.Entity = value;
					if ((value != null))
					{
						value.RouteServiceList.Add(this);
						this._routeId = value.Id;
					}
					else
					{
						this._routeId = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_RouteStandardPlan")]
	public partial class RouteStandardPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _routeID;
		
		private string _planInterval;
		
		private string _vehicle;
		
		private string _trafficNumber;
		
		private string _house;
		
		private string _dinner;
		
		private string _planContent;
		
		private int _planDay;
		
		private string _imgPath;
		
		private EntityRef<Route> _route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnPlanIntervalChanging(string value);
    partial void OnPlanIntervalChanged();
    partial void OnVehicleChanging(string value);
    partial void OnVehicleChanged();
    partial void OnTrafficNumberChanging(string value);
    partial void OnTrafficNumberChanged();
    partial void OnHouseChanging(string value);
    partial void OnHouseChanged();
    partial void OnDinnerChanging(string value);
    partial void OnDinnerChanged();
    partial void OnPlanContentChanging(string value);
    partial void OnPlanContentChanged();
    partial void OnPlanDayChanging(int value);
    partial void OnPlanDayChanged();
    partial void OnImgPathChanging(string value);
    partial void OnImgPathChanged();
    #endregion
		
		public RouteStandardPlan()
		{
			this._route = default(EntityRef<Route>);
			OnCreated();
		}
		
		[Column(Storage="_routeID", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int RouteID
		{
			get
			{
				return this._routeID;
			}
			set
			{
				if ((this._routeID != value))
				{
					if (this._route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._routeID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[Column(Storage="_planInterval", DbType="nvarchar(MAX)")]
		public string PlanInterval
		{
			get
			{
				return this._planInterval;
			}
			set
			{
				if ((this._planInterval != value))
				{
					this.OnPlanIntervalChanging(value);
					this.SendPropertyChanging();
					this._planInterval = value;
					this.SendPropertyChanged("PlanInterval");
					this.OnPlanIntervalChanged();
				}
			}
		}
		
		[Column(Storage="_vehicle", DbType="nvarchar(MAX)")]
		public string Vehicle
		{
			get
			{
				return this._vehicle;
			}
			set
			{
				if ((this._vehicle != value))
				{
					this.OnVehicleChanging(value);
					this.SendPropertyChanging();
					this._vehicle = value;
					this.SendPropertyChanged("Vehicle");
					this.OnVehicleChanged();
				}
			}
		}
		
		[Column(Storage="_trafficNumber", DbType="nvarchar(MAX)")]
		public string TrafficNumber
		{
			get
			{
				return this._trafficNumber;
			}
			set
			{
				if ((this._trafficNumber != value))
				{
					this.OnTrafficNumberChanging(value);
					this.SendPropertyChanging();
					this._trafficNumber = value;
					this.SendPropertyChanged("TrafficNumber");
					this.OnTrafficNumberChanged();
				}
			}
		}
		
		[Column(Storage="_house", DbType="nvarchar(MAX)")]
		public string House
		{
			get
			{
				return this._house;
			}
			set
			{
				if ((this._house != value))
				{
					this.OnHouseChanging(value);
					this.SendPropertyChanging();
					this._house = value;
					this.SendPropertyChanged("House");
					this.OnHouseChanged();
				}
			}
		}
		
		[Column(Storage="_dinner", DbType="nvarchar(MAX)")]
		public string Dinner
		{
			get
			{
				return this._dinner;
			}
			set
			{
				if ((this._dinner != value))
				{
					this.OnDinnerChanging(value);
					this.SendPropertyChanging();
					this._dinner = value;
					this.SendPropertyChanged("Dinner");
					this.OnDinnerChanged();
				}
			}
		}
		
		[Column(Storage="_planContent", DbType="nvarchar(MAX)")]
		public string PlanContent
		{
			get
			{
				return this._planContent;
			}
			set
			{
				if ((this._planContent != value))
				{
					this.OnPlanContentChanging(value);
					this.SendPropertyChanging();
					this._planContent = value;
					this.SendPropertyChanged("PlanContent");
					this.OnPlanContentChanged();
				}
			}
		}
		
		[Column(Storage="_planDay", DbType="int NOT NULL")]
		public int PlanDay
		{
			get
			{
				return this._planDay;
			}
			set
			{
				if ((this._planDay != value))
				{
					this.OnPlanDayChanging(value);
					this.SendPropertyChanging();
					this._planDay = value;
					this.SendPropertyChanged("PlanDay");
					this.OnPlanDayChanged();
				}
			}
		}
		
		[Column(Storage="_imgPath", DbType="nvarchar(250)")]
		public string ImgPath
		{
			get
			{
				return this._imgPath;
			}
			set
			{
				if ((this._imgPath != value))
				{
					this.OnImgPathChanging(value);
					this.SendPropertyChanging();
					this._imgPath = value;
					this.SendPropertyChanged("ImgPath");
					this.OnImgPathChanged();
				}
			}
		}
		
		[Association(Name="Route_RouteStandardPlan", Storage="_route", ThisKey="RouteID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Route Route
		{
			get
			{
				return this._route.Entity;
			}
			set
			{
				Route previousValue = this._route.Entity;
				if (((previousValue != value) 
							|| (this._route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._route.Entity = null;
						previousValue.RouteStandardPlan = null;
					}
					this._route.Entity = value;
					if ((value != null))
					{
						value.RouteStandardPlan = this;
						this._routeID = value.Id;
					}
					else
					{
						this._routeID = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_RuleInfo")]
	public partial class RuleInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _roleNo;
		
		private string _title;
		
		private string _roleContent;
		
		private string _filePath;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnRoleNoChanging(string value);
    partial void OnRoleNoChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRoleContentChanging(string value);
    partial void OnRoleContentChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public RuleInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_roleNo", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string RoleNo
		{
			get
			{
				return this._roleNo;
			}
			set
			{
				if ((this._roleNo != value))
				{
					this.OnRoleNoChanging(value);
					this.SendPropertyChanging();
					this._roleNo = value;
					this.SendPropertyChanged("RoleNo");
					this.OnRoleNoChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_roleContent", DbType="nvarchar(MAX) NOT NULL", CanBeNull=false)]
		public string RoleContent
		{
			get
			{
				return this._roleContent;
			}
			set
			{
				if ((this._roleContent != value))
				{
					this.OnRoleContentChanging(value);
					this.SendPropertyChanging();
					this._roleContent = value;
					this.SendPropertyChanged("RoleContent");
					this.OnRoleContentChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(250)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SchoolInfo")]
	public partial class SchoolInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _personId;
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private byte _degree;
		
		private string _professional;
		
		private string _schoolName;
		
		private byte _studyStatus;
		
		private string _remark;
		
		private EntityRef<PersonnelInfo> _personPersonnelInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDegreeChanging(byte value);
    partial void OnDegreeChanged();
    partial void OnProfessionalChanging(string value);
    partial void OnProfessionalChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnStudyStatusChanging(byte value);
    partial void OnStudyStatusChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SchoolInfo()
		{
			this._personPersonnelInfo = default(EntityRef<PersonnelInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_personId", DbType="int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._personId;
			}
			set
			{
				if ((this._personId != value))
				{
					if (this._personPersonnelInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._personId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[Column(Storage="_startDate", DbType="datetime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_endDate", DbType="datetime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_degree", DbType="tinyint NOT NULL")]
		public byte Degree
		{
			get
			{
				return this._degree;
			}
			set
			{
				if ((this._degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[Column(Storage="_professional", DbType="nvarchar(100)")]
		public string Professional
		{
			get
			{
				return this._professional;
			}
			set
			{
				if ((this._professional != value))
				{
					this.OnProfessionalChanging(value);
					this.SendPropertyChanging();
					this._professional = value;
					this.SendPropertyChanged("Professional");
					this.OnProfessionalChanged();
				}
			}
		}
		
		[Column(Storage="_schoolName", DbType="nvarchar(100)")]
		public string SchoolName
		{
			get
			{
				return this._schoolName;
			}
			set
			{
				if ((this._schoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._schoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[Column(Storage="_studyStatus", DbType="tinyint NOT NULL")]
		public byte StudyStatus
		{
			get
			{
				return this._studyStatus;
			}
			set
			{
				if ((this._studyStatus != value))
				{
					this.OnStudyStatusChanging(value);
					this.SendPropertyChanging();
					this._studyStatus = value;
					this.SendPropertyChanged("StudyStatus");
					this.OnStudyStatusChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(1000)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="PersonnelInfo_SchoolInfo", Storage="_personPersonnelInfo", ThisKey="PersonId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public PersonnelInfo PersonPersonnelInfo
		{
			get
			{
				return this._personPersonnelInfo.Entity;
			}
			set
			{
				PersonnelInfo previousValue = this._personPersonnelInfo.Entity;
				if (((previousValue != value) 
							|| (this._personPersonnelInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._personPersonnelInfo.Entity = null;
						previousValue.PersonSchoolInfoList.Remove(this);
					}
					this._personPersonnelInfo.Entity = value;
					if ((value != null))
					{
						value.PersonSchoolInfoList.Add(this);
						this._personId = value.Id;
					}
					else
					{
						this._personId = default(int);
					}
					this.SendPropertyChanged("PersonPersonnelInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Site")]
	public partial class Site : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _companyId;
		
		private string _title;
		
		private string _meta;
		
		private string _isSetHome;
		
		private string _isSetFavorite;
		
		private string _logoPath;
		
		private string _intr;
		
		private string _copyright;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMetaChanging(string value);
    partial void OnMetaChanged();
    partial void OnIsSetHomeChanging(string value);
    partial void OnIsSetHomeChanged();
    partial void OnIsSetFavoriteChanging(string value);
    partial void OnIsSetFavoriteChanged();
    partial void OnLogoPathChanging(string value);
    partial void OnLogoPathChanged();
    partial void OnIntrChanging(string value);
    partial void OnIntrChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    #endregion
		
		public Site()
		{
			OnCreated();
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(255)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_meta", DbType="nvarchar(255)")]
		public string Meta
		{
			get
			{
				return this._meta;
			}
			set
			{
				if ((this._meta != value))
				{
					this.OnMetaChanging(value);
					this.SendPropertyChanging();
					this._meta = value;
					this.SendPropertyChanged("Meta");
					this.OnMetaChanged();
				}
			}
		}
		
		[Column(Storage="_isSetHome", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsSetHome
		{
			get
			{
				return this._isSetHome;
			}
			set
			{
				if ((this._isSetHome != value))
				{
					this.OnIsSetHomeChanging(value);
					this.SendPropertyChanging();
					this._isSetHome = value;
					this.SendPropertyChanged("IsSetHome");
					this.OnIsSetHomeChanged();
				}
			}
		}
		
		[Column(Storage="_isSetFavorite", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsSetFavorite
		{
			get
			{
				return this._isSetFavorite;
			}
			set
			{
				if ((this._isSetFavorite != value))
				{
					this.OnIsSetFavoriteChanging(value);
					this.SendPropertyChanging();
					this._isSetFavorite = value;
					this.SendPropertyChanged("IsSetFavorite");
					this.OnIsSetFavoriteChanged();
				}
			}
		}
		
		[Column(Storage="_logoPath", DbType="nvarchar(255)")]
		public string LogoPath
		{
			get
			{
				return this._logoPath;
			}
			set
			{
				if ((this._logoPath != value))
				{
					this.OnLogoPathChanging(value);
					this.SendPropertyChanging();
					this._logoPath = value;
					this.SendPropertyChanged("LogoPath");
					this.OnLogoPathChanged();
				}
			}
		}
		
		[Column(Storage="_intr", DbType="nvarchar(MAX)")]
		public string Intr
		{
			get
			{
				return this._intr;
			}
			set
			{
				if ((this._intr != value))
				{
					this.OnIntrChanging(value);
					this.SendPropertyChanging();
					this._intr = value;
					this.SendPropertyChanged("Intr");
					this.OnIntrChanged();
				}
			}
		}
		
		[Column(Storage="_copyright", DbType="nvarchar(MAX)")]
		public string Copyright
		{
			get
			{
				return this._copyright;
			}
			set
			{
				if ((this._copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SiteAttach")]
	public partial class SiteAttach : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _attachId;
		
		private int _companyId;
		
		private System.Nullable<int> _itemId;
		
		private byte _itemType;
		
		private string _filePath;
		
		private string _fileName;
		
		private string _url;
		
		private int _sortId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachIdChanging(int value);
    partial void OnAttachIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnItemIdChanging(System.Nullable<int> value);
    partial void OnItemIdChanged();
    partial void OnItemTypeChanging(byte value);
    partial void OnItemTypeChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSortIdChanging(int value);
    partial void OnSortIdChanged();
    #endregion
		
		public SiteAttach()
		{
			OnCreated();
		}
		
		[Column(Storage="_attachId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int AttachId
		{
			get
			{
				return this._attachId;
			}
			set
			{
				if ((this._attachId != value))
				{
					this.OnAttachIdChanging(value);
					this.SendPropertyChanging();
					this._attachId = value;
					this.SendPropertyChanged("AttachId");
					this.OnAttachIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="int")]
		public System.Nullable<int> ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="tinyint NOT NULL")]
		public byte ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_fileName", DbType="nvarchar(255)")]
		public string FileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Column(Name="URL", Storage="_url", DbType="nvarchar(255)")]
		public string Url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[Column(Storage="_sortId", DbType="int NOT NULL")]
		public int SortId
		{
			get
			{
				return this._sortId;
			}
			set
			{
				if ((this._sortId != value))
				{
					this.OnSortIdChanging(value);
					this.SendPropertyChanging();
					this._sortId = value;
					this.SendPropertyChanged("SortId");
					this.OnSortIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SiteFriendLink")]
	public partial class SiteFriendLink : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _linkId;
		
		private int _companyId;
		
		private System.Nullable<byte> _linkType;
		
		private string _linkName;
		
		private string _filePath;
		
		private string _linkUrl;
		
		private int _sortId;
		
		private System.DateTime _createTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkIdChanging(int value);
    partial void OnLinkIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnLinkTypeChanging(System.Nullable<byte> value);
    partial void OnLinkTypeChanged();
    partial void OnLinkNameChanging(string value);
    partial void OnLinkNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnLinkUrlChanging(string value);
    partial void OnLinkUrlChanged();
    partial void OnSortIdChanging(int value);
    partial void OnSortIdChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public SiteFriendLink()
		{
			OnCreated();
		}
		
		[Column(Storage="_linkId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LinkId
		{
			get
			{
				return this._linkId;
			}
			set
			{
				if ((this._linkId != value))
				{
					this.OnLinkIdChanging(value);
					this.SendPropertyChanging();
					this._linkId = value;
					this.SendPropertyChanged("LinkId");
					this.OnLinkIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_linkType", DbType="tinyint")]
		public System.Nullable<byte> LinkType
		{
			get
			{
				return this._linkType;
			}
			set
			{
				if ((this._linkType != value))
				{
					this.OnLinkTypeChanging(value);
					this.SendPropertyChanging();
					this._linkType = value;
					this.SendPropertyChanged("LinkType");
					this.OnLinkTypeChanged();
				}
			}
		}
		
		[Column(Storage="_linkName", DbType="nvarchar(255)")]
		public string LinkName
		{
			get
			{
				return this._linkName;
			}
			set
			{
				if ((this._linkName != value))
				{
					this.OnLinkNameChanging(value);
					this.SendPropertyChanging();
					this._linkName = value;
					this.SendPropertyChanged("LinkName");
					this.OnLinkNameChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_linkUrl", DbType="nvarchar(255)")]
		public string LinkUrl
		{
			get
			{
				return this._linkUrl;
			}
			set
			{
				if ((this._linkUrl != value))
				{
					this.OnLinkUrlChanging(value);
					this.SendPropertyChanging();
					this._linkUrl = value;
					this.SendPropertyChanged("LinkUrl");
					this.OnLinkUrlChanged();
				}
			}
		}
		
		[Column(Storage="_sortId", DbType="int NOT NULL")]
		public int SortId
		{
			get
			{
				return this._sortId;
			}
			set
			{
				if ((this._sortId != value))
				{
					this.OnSortIdChanging(value);
					this.SendPropertyChanging();
					this._sortId = value;
					this.SendPropertyChanged("SortId");
					this.OnSortIdChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SiteTicketPolicy")]
	public partial class SiteTicketPolicy : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _policyId;
		
		private int _companyId;
		
		private string _title;
		
		private string _content;
		
		private string _filePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPolicyIdChanging(int value);
    partial void OnPolicyIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    #endregion
		
		public SiteTicketPolicy()
		{
			OnCreated();
		}
		
		[Column(Storage="_policyId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int PolicyId
		{
			get
			{
				return this._policyId;
			}
			set
			{
				if ((this._policyId != value))
				{
					this.OnPolicyIdChanging(value);
					this.SendPropertyChanging();
					this._policyId = value;
					this.SendPropertyChanged("PolicyId");
					this.OnPolicyIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(255)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_content", DbType="nvarchar(MAX)")]
		public string Content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_StatAllIncome")]
	public partial class StatAllIncome : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _tourId;
		
		private int _areaId;
		
		private byte _tourType;
		
		private string _itemId;
		
		private byte _itemType;
		
		private decimal _amount;
		
		private decimal _addAmount;
		
		private decimal _reduceAmount;
		
		private decimal _totalAmount;
		
		private int _operatorId;
		
		private int _departmentId;
		
		private System.DateTime _createTime;
		
		private decimal _hasCheckAmount;
		
		private decimal _notCheckAmount;
		
		private string _isDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnTourTypeChanging(byte value);
    partial void OnTourTypeChanged();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnItemTypeChanging(byte value);
    partial void OnItemTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAddAmountChanging(decimal value);
    partial void OnAddAmountChanged();
    partial void OnReduceAmountChanging(decimal value);
    partial void OnReduceAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnHasCheckAmountChanging(decimal value);
    partial void OnHasCheckAmountChanged();
    partial void OnNotCheckAmountChanging(decimal value);
    partial void OnNotCheckAmountChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public StatAllIncome()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourType", DbType="tinyint NOT NULL")]
		public byte TourType
		{
			get
			{
				return this._tourType;
			}
			set
			{
				if ((this._tourType != value))
				{
					this.OnTourTypeChanging(value);
					this.SendPropertyChanging();
					this._tourType = value;
					this.SendPropertyChanged("TourType");
					this.OnTourTypeChanged();
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="tinyint NOT NULL")]
		public byte ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[Column(Storage="_amount", DbType="money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_addAmount", DbType="money NOT NULL")]
		public decimal AddAmount
		{
			get
			{
				return this._addAmount;
			}
			set
			{
				if ((this._addAmount != value))
				{
					this.OnAddAmountChanging(value);
					this.SendPropertyChanging();
					this._addAmount = value;
					this.SendPropertyChanged("AddAmount");
					this.OnAddAmountChanged();
				}
			}
		}
		
		[Column(Storage="_reduceAmount", DbType="money NOT NULL")]
		public decimal ReduceAmount
		{
			get
			{
				return this._reduceAmount;
			}
			set
			{
				if ((this._reduceAmount != value))
				{
					this.OnReduceAmountChanging(value);
					this.SendPropertyChanging();
					this._reduceAmount = value;
					this.SendPropertyChanged("ReduceAmount");
					this.OnReduceAmountChanged();
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_hasCheckAmount", DbType="money NOT NULL")]
		public decimal HasCheckAmount
		{
			get
			{
				return this._hasCheckAmount;
			}
			set
			{
				if ((this._hasCheckAmount != value))
				{
					this.OnHasCheckAmountChanging(value);
					this.SendPropertyChanging();
					this._hasCheckAmount = value;
					this.SendPropertyChanged("HasCheckAmount");
					this.OnHasCheckAmountChanged();
				}
			}
		}
		
		[Column(Storage="_notCheckAmount", DbType="money NOT NULL")]
		public decimal NotCheckAmount
		{
			get
			{
				return this._notCheckAmount;
			}
			set
			{
				if ((this._notCheckAmount != value))
				{
					this.OnNotCheckAmountChanging(value);
					this.SendPropertyChanging();
					this._notCheckAmount = value;
					this.SendPropertyChanged("NotCheckAmount");
					this.OnNotCheckAmountChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_StatAllOut")]
	public partial class StatAllOut : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _companyId;
		
		private string _tourId;
		
		private int _areaId;
		
		private byte _tourType;
		
		private string _itemId;
		
		private byte _itemType;
		
		private decimal _amount;
		
		private decimal _addAmount;
		
		private decimal _reduceAmount;
		
		private decimal _totalAmount;
		
		private int _operatorId;
		
		private int _departmentId;
		
		private System.DateTime _createTime;
		
		private decimal _hasCheckAmount;
		
		private decimal _notCheckAmount;
		
		private string _isDelete;
		
		private int _supplierId;
		
		private string _supplierName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnTourTypeChanging(byte value);
    partial void OnTourTypeChanged();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnItemTypeChanging(byte value);
    partial void OnItemTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAddAmountChanging(decimal value);
    partial void OnAddAmountChanged();
    partial void OnReduceAmountChanging(decimal value);
    partial void OnReduceAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnHasCheckAmountChanging(decimal value);
    partial void OnHasCheckAmountChanged();
    partial void OnNotCheckAmountChanging(decimal value);
    partial void OnNotCheckAmountChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    #endregion
		
		public StatAllOut()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourType", DbType="tinyint NOT NULL")]
		public byte TourType
		{
			get
			{
				return this._tourType;
			}
			set
			{
				if ((this._tourType != value))
				{
					this.OnTourTypeChanging(value);
					this.SendPropertyChanging();
					this._tourType = value;
					this.SendPropertyChanged("TourType");
					this.OnTourTypeChanged();
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="tinyint NOT NULL")]
		public byte ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[Column(Storage="_amount", DbType="money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_addAmount", DbType="money NOT NULL")]
		public decimal AddAmount
		{
			get
			{
				return this._addAmount;
			}
			set
			{
				if ((this._addAmount != value))
				{
					this.OnAddAmountChanging(value);
					this.SendPropertyChanging();
					this._addAmount = value;
					this.SendPropertyChanged("AddAmount");
					this.OnAddAmountChanged();
				}
			}
		}
		
		[Column(Storage="_reduceAmount", DbType="money NOT NULL")]
		public decimal ReduceAmount
		{
			get
			{
				return this._reduceAmount;
			}
			set
			{
				if ((this._reduceAmount != value))
				{
					this.OnReduceAmountChanging(value);
					this.SendPropertyChanging();
					this._reduceAmount = value;
					this.SendPropertyChanged("ReduceAmount");
					this.OnReduceAmountChanged();
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_hasCheckAmount", DbType="money NOT NULL")]
		public decimal HasCheckAmount
		{
			get
			{
				return this._hasCheckAmount;
			}
			set
			{
				if ((this._hasCheckAmount != value))
				{
					this.OnHasCheckAmountChanging(value);
					this.SendPropertyChanging();
					this._hasCheckAmount = value;
					this.SendPropertyChanged("HasCheckAmount");
					this.OnHasCheckAmountChanged();
				}
			}
		}
		
		[Column(Storage="_notCheckAmount", DbType="money NOT NULL")]
		public decimal NotCheckAmount
		{
			get
			{
				return this._notCheckAmount;
			}
			set
			{
				if ((this._notCheckAmount != value))
				{
					this.OnNotCheckAmountChanging(value);
					this.SendPropertyChanging();
					this._notCheckAmount = value;
					this.SendPropertyChanged("NotCheckAmount");
					this.OnNotCheckAmountChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[Column(Storage="_supplierName", DbType="nvarchar(255)")]
		public string SupplierName
		{
			get
			{
				return this._supplierName;
			}
			set
			{
				if ((this._supplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._supplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SupplierAccessory")]
	public partial class SupplierAccessory : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _supplierId;
		
		private string _picName;
		
		private string _picPath;
		
		private EntityRef<CompanySupplier> _supplierCompanySupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnPicNameChanging(string value);
    partial void OnPicNameChanged();
    partial void OnPicPathChanging(string value);
    partial void OnPicPathChanged();
    #endregion
		
		public SupplierAccessory()
		{
			this._supplierCompanySupplier = default(EntityRef<CompanySupplier>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					if (this._supplierCompanySupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[Column(Storage="_picName", DbType="nvarchar(255)")]
		public string PicName
		{
			get
			{
				return this._picName;
			}
			set
			{
				if ((this._picName != value))
				{
					this.OnPicNameChanging(value);
					this.SendPropertyChanging();
					this._picName = value;
					this.SendPropertyChanged("PicName");
					this.OnPicNameChanged();
				}
			}
		}
		
		[Column(Storage="_picPath", DbType="nvarchar(255)")]
		public string PicPath
		{
			get
			{
				return this._picPath;
			}
			set
			{
				if ((this._picPath != value))
				{
					this.OnPicPathChanging(value);
					this.SendPropertyChanging();
					this._picPath = value;
					this.SendPropertyChanged("PicPath");
					this.OnPicPathChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierAccessory", Storage="_supplierCompanySupplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanySupplier SupplierCompanySupplier
		{
			get
			{
				return this._supplierCompanySupplier.Entity;
			}
			set
			{
				CompanySupplier previousValue = this._supplierCompanySupplier.Entity;
				if (((previousValue != value) 
							|| (this._supplierCompanySupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierCompanySupplier.Entity = null;
						previousValue.SupplierSupplierAccessoryList.Remove(this);
					}
					this._supplierCompanySupplier.Entity = value;
					if ((value != null))
					{
						value.SupplierSupplierAccessoryList.Add(this);
						this._supplierId = value.Id;
					}
					else
					{
						this._supplierId = default(int);
					}
					this.SendPropertyChanged("SupplierCompanySupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SupplierCarInfo")]
	public partial class SupplierCarInfo : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _carType;
		
		private string _carNumber;
		
		private string _image;
		
		private decimal _price;
		
		private string _driverName;
		
		private string _driverPhone;
		
		private string _guideWord;
		
		private int _privaderId;
		
		private EntityRef<CompanySupplier> _privaderCompanySupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCarTypeChanging(string value);
    partial void OnCarTypeChanged();
    partial void OnCarNumberChanging(string value);
    partial void OnCarNumberChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDriverNameChanging(string value);
    partial void OnDriverNameChanged();
    partial void OnDriverPhoneChanging(string value);
    partial void OnDriverPhoneChanged();
    partial void OnGuideWordChanging(string value);
    partial void OnGuideWordChanged();
    partial void OnPrivaderIdChanging(int value);
    partial void OnPrivaderIdChanged();
    #endregion
		
		public SupplierCarInfo()
		{
			this._privaderCompanySupplier = default(EntityRef<CompanySupplier>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_carType", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string CarType
		{
			get
			{
				return this._carType;
			}
			set
			{
				if ((this._carType != value))
				{
					this.OnCarTypeChanging(value);
					this.SendPropertyChanging();
					this._carType = value;
					this.SendPropertyChanged("CarType");
					this.OnCarTypeChanged();
				}
			}
		}
		
		[Column(Storage="_carNumber", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string CarNumber
		{
			get
			{
				return this._carNumber;
			}
			set
			{
				if ((this._carNumber != value))
				{
					this.OnCarNumberChanging(value);
					this.SendPropertyChanging();
					this._carNumber = value;
					this.SendPropertyChanged("CarNumber");
					this.OnCarNumberChanged();
				}
			}
		}
		
		[Column(Storage="_image", DbType="nvarchar(255)")]
		public string Image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_driverName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string DriverName
		{
			get
			{
				return this._driverName;
			}
			set
			{
				if ((this._driverName != value))
				{
					this.OnDriverNameChanging(value);
					this.SendPropertyChanging();
					this._driverName = value;
					this.SendPropertyChanged("DriverName");
					this.OnDriverNameChanged();
				}
			}
		}
		
		[Column(Storage="_driverPhone", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string DriverPhone
		{
			get
			{
				return this._driverPhone;
			}
			set
			{
				if ((this._driverPhone != value))
				{
					this.OnDriverPhoneChanging(value);
					this.SendPropertyChanging();
					this._driverPhone = value;
					this.SendPropertyChanged("DriverPhone");
					this.OnDriverPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_guideWord", DbType="nvarchar(MAX)")]
		public string GuideWord
		{
			get
			{
				return this._guideWord;
			}
			set
			{
				if ((this._guideWord != value))
				{
					this.OnGuideWordChanging(value);
					this.SendPropertyChanging();
					this._guideWord = value;
					this.SendPropertyChanged("GuideWord");
					this.OnGuideWordChanged();
				}
			}
		}
		
		[Column(Storage="_privaderId", DbType="int NOT NULL")]
		public int PrivaderId
		{
			get
			{
				return this._privaderId;
			}
			set
			{
				if ((this._privaderId != value))
				{
					if (this._privaderCompanySupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrivaderIdChanging(value);
					this.SendPropertyChanging();
					this._privaderId = value;
					this.SendPropertyChanged("PrivaderId");
					this.OnPrivaderIdChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierCarInfo", Storage="_privaderCompanySupplier", ThisKey="PrivaderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanySupplier PrivaderCompanySupplier
		{
			get
			{
				return this._privaderCompanySupplier.Entity;
			}
			set
			{
				CompanySupplier previousValue = this._privaderCompanySupplier.Entity;
				if (((previousValue != value) 
							|| (this._privaderCompanySupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._privaderCompanySupplier.Entity = null;
						previousValue.PrivaderSupplierCarInfoList.Remove(this);
					}
					this._privaderCompanySupplier.Entity = value;
					if ((value != null))
					{
						value.PrivaderSupplierCarInfoList.Add(this);
						this._privaderId = value.Id;
					}
					else
					{
						this._privaderId = default(int);
					}
					this.SendPropertyChanged("PrivaderCompanySupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SupplierContact")]
	public partial class SupplierContact : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _supplierId;
		
		private byte _supplierType;
		
		private string _contactName;
		
		private string _jobTitle;
		
		private string _contactFax;
		
		private string _contactTel;
		
		private string _contactMobile;
		
		private string _qq;
		
		private string _email;
		
		private int _companyId;
		
		private int _userId;
		
		private EntityRef<CompanySupplier> _supplierCompanySupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnSupplierTypeChanging(byte value);
    partial void OnSupplierTypeChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnContactMobileChanging(string value);
    partial void OnContactMobileChanged();
    partial void OnQqChanging(string value);
    partial void OnQqChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public SupplierContact()
		{
			this._supplierCompanySupplier = default(EntityRef<CompanySupplier>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					if (this._supplierCompanySupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[Column(Storage="_supplierType", DbType="tinyint NOT NULL")]
		public byte SupplierType
		{
			get
			{
				return this._supplierType;
			}
			set
			{
				if ((this._supplierType != value))
				{
					this.OnSupplierTypeChanging(value);
					this.SendPropertyChanging();
					this._supplierType = value;
					this.SendPropertyChanged("SupplierType");
					this.OnSupplierTypeChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(50)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_jobTitle", DbType="nvarchar(255)")]
		public string JobTitle
		{
			get
			{
				return this._jobTitle;
			}
			set
			{
				if ((this._jobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._jobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="nvarchar(100)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._contactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(100)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="nvarchar(100)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this.OnContactMobileChanging(value);
					this.SendPropertyChanging();
					this._contactMobile = value;
					this.SendPropertyChanged("ContactMobile");
					this.OnContactMobileChanged();
				}
			}
		}
		
		[Column(Name="QQ", Storage="_qq", DbType="nvarchar(100)")]
		public string Qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnQqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("Qq");
					this.OnQqChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="nvarchar(100)")]
		public string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_userId", DbType="int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierContact", Storage="_supplierCompanySupplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanySupplier SupplierCompanySupplier
		{
			get
			{
				return this._supplierCompanySupplier.Entity;
			}
			set
			{
				CompanySupplier previousValue = this._supplierCompanySupplier.Entity;
				if (((previousValue != value) 
							|| (this._supplierCompanySupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierCompanySupplier.Entity = null;
						previousValue.SupplierSupplierContactList.Remove(this);
					}
					this._supplierCompanySupplier.Entity = value;
					if ((value != null))
					{
						value.SupplierSupplierContactList.Add(this);
						this._supplierId = value.Id;
					}
					else
					{
						this._supplierId = default(int);
					}
					this.SendPropertyChanged("SupplierCompanySupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SupplierHotel")]
	public partial class SupplierHotel : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _supplierId;
		
		private byte _star;
		
		private string _introduce;
		
		private string _tourGuide;
		
		private EntityRef<CompanySupplier> _supplierCompanySupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnStarChanging(byte value);
    partial void OnStarChanged();
    partial void OnIntroduceChanging(string value);
    partial void OnIntroduceChanged();
    partial void OnTourGuideChanging(string value);
    partial void OnTourGuideChanged();
    #endregion
		
		public SupplierHotel()
		{
			this._supplierCompanySupplier = default(EntityRef<CompanySupplier>);
			OnCreated();
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					if (this._supplierCompanySupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[Column(Storage="_star", DbType="tinyint NOT NULL")]
		public byte Star
		{
			get
			{
				return this._star;
			}
			set
			{
				if ((this._star != value))
				{
					this.OnStarChanging(value);
					this.SendPropertyChanging();
					this._star = value;
					this.SendPropertyChanged("Star");
					this.OnStarChanged();
				}
			}
		}
		
		[Column(Storage="_introduce", DbType="nvarchar(MAX)")]
		public string Introduce
		{
			get
			{
				return this._introduce;
			}
			set
			{
				if ((this._introduce != value))
				{
					this.OnIntroduceChanging(value);
					this.SendPropertyChanging();
					this._introduce = value;
					this.SendPropertyChanged("Introduce");
					this.OnIntroduceChanged();
				}
			}
		}
		
		[Column(Storage="_tourGuide", DbType="nvarchar(MAX)")]
		public string TourGuide
		{
			get
			{
				return this._tourGuide;
			}
			set
			{
				if ((this._tourGuide != value))
				{
					this.OnTourGuideChanging(value);
					this.SendPropertyChanging();
					this._tourGuide = value;
					this.SendPropertyChanged("TourGuide");
					this.OnTourGuideChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierHotel", Storage="_supplierCompanySupplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanySupplier SupplierCompanySupplier
		{
			get
			{
				return this._supplierCompanySupplier.Entity;
			}
			set
			{
				CompanySupplier previousValue = this._supplierCompanySupplier.Entity;
				if (((previousValue != value) 
							|| (this._supplierCompanySupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierCompanySupplier.Entity = null;
						previousValue.SupplierSupplierHotel = null;
					}
					this._supplierCompanySupplier.Entity = value;
					if ((value != null))
					{
						value.SupplierSupplierHotel = this;
						this._supplierId = value.Id;
					}
					else
					{
						this._supplierId = default(int);
					}
					this.SendPropertyChanged("SupplierCompanySupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SupplierHotelRoomType")]
	public partial class SupplierHotelRoomType : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _roomTypeId;
		
		private int _supplierId;
		
		private string _name;
		
		private decimal _sellingPrice;
		
		private decimal _accountingPrice;
		
		private string _isBreakfast;
		
		private System.DateTime _createTime;
		
		private EntityRef<CompanySupplier> _supplierCompanySupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomTypeIdChanging(int value);
    partial void OnRoomTypeIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSellingPriceChanging(decimal value);
    partial void OnSellingPriceChanged();
    partial void OnAccountingPriceChanging(decimal value);
    partial void OnAccountingPriceChanged();
    partial void OnIsBreakfastChanging(string value);
    partial void OnIsBreakfastChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public SupplierHotelRoomType()
		{
			this._supplierCompanySupplier = default(EntityRef<CompanySupplier>);
			OnCreated();
		}
		
		[Column(Storage="_roomTypeId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomTypeId
		{
			get
			{
				return this._roomTypeId;
			}
			set
			{
				if ((this._roomTypeId != value))
				{
					this.OnRoomTypeIdChanging(value);
					this.SendPropertyChanging();
					this._roomTypeId = value;
					this.SendPropertyChanged("RoomTypeId");
					this.OnRoomTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					if (this._supplierCompanySupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="nvarchar(255)")]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_sellingPrice", DbType="money NOT NULL")]
		public decimal SellingPrice
		{
			get
			{
				return this._sellingPrice;
			}
			set
			{
				if ((this._sellingPrice != value))
				{
					this.OnSellingPriceChanging(value);
					this.SendPropertyChanging();
					this._sellingPrice = value;
					this.SendPropertyChanged("SellingPrice");
					this.OnSellingPriceChanged();
				}
			}
		}
		
		[Column(Storage="_accountingPrice", DbType="money NOT NULL")]
		public decimal AccountingPrice
		{
			get
			{
				return this._accountingPrice;
			}
			set
			{
				if ((this._accountingPrice != value))
				{
					this.OnAccountingPriceChanging(value);
					this.SendPropertyChanging();
					this._accountingPrice = value;
					this.SendPropertyChanged("AccountingPrice");
					this.OnAccountingPriceChanged();
				}
			}
		}
		
		[Column(Storage="_isBreakfast", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsBreakfast
		{
			get
			{
				return this._isBreakfast;
			}
			set
			{
				if ((this._isBreakfast != value))
				{
					this.OnIsBreakfastChanging(value);
					this.SendPropertyChanging();
					this._isBreakfast = value;
					this.SendPropertyChanged("IsBreakfast");
					this.OnIsBreakfastChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierHotelRoomType", Storage="_supplierCompanySupplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanySupplier SupplierCompanySupplier
		{
			get
			{
				return this._supplierCompanySupplier.Entity;
			}
			set
			{
				CompanySupplier previousValue = this._supplierCompanySupplier.Entity;
				if (((previousValue != value) 
							|| (this._supplierCompanySupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierCompanySupplier.Entity = null;
						previousValue.SupplierSupplierHotelRoomTypeList.Remove(this);
					}
					this._supplierCompanySupplier.Entity = value;
					if ((value != null))
					{
						value.SupplierSupplierHotelRoomTypeList.Add(this);
						this._supplierId = value.Id;
					}
					else
					{
						this._supplierId = default(int);
					}
					this.SendPropertyChanged("SupplierCompanySupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SupplierRestaurant")]
	public partial class SupplierRestaurant : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _supplierId;
		
		private string _cuisine;
		
		private string _introduce;
		
		private string _tourGuide;
		
		private EntityRef<CompanySupplier> _supplierCompanySupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnCuisineChanging(string value);
    partial void OnCuisineChanged();
    partial void OnIntroduceChanging(string value);
    partial void OnIntroduceChanged();
    partial void OnTourGuideChanging(string value);
    partial void OnTourGuideChanged();
    #endregion
		
		public SupplierRestaurant()
		{
			this._supplierCompanySupplier = default(EntityRef<CompanySupplier>);
			OnCreated();
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					if (this._supplierCompanySupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[Column(Storage="_cuisine", DbType="nvarchar(255)")]
		public string Cuisine
		{
			get
			{
				return this._cuisine;
			}
			set
			{
				if ((this._cuisine != value))
				{
					this.OnCuisineChanging(value);
					this.SendPropertyChanging();
					this._cuisine = value;
					this.SendPropertyChanged("Cuisine");
					this.OnCuisineChanged();
				}
			}
		}
		
		[Column(Storage="_introduce", DbType="nvarchar(MAX)")]
		public string Introduce
		{
			get
			{
				return this._introduce;
			}
			set
			{
				if ((this._introduce != value))
				{
					this.OnIntroduceChanging(value);
					this.SendPropertyChanging();
					this._introduce = value;
					this.SendPropertyChanged("Introduce");
					this.OnIntroduceChanged();
				}
			}
		}
		
		[Column(Storage="_tourGuide", DbType="nvarchar(MAX)")]
		public string TourGuide
		{
			get
			{
				return this._tourGuide;
			}
			set
			{
				if ((this._tourGuide != value))
				{
					this.OnTourGuideChanging(value);
					this.SendPropertyChanging();
					this._tourGuide = value;
					this.SendPropertyChanged("TourGuide");
					this.OnTourGuideChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierRestaurant", Storage="_supplierCompanySupplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanySupplier SupplierCompanySupplier
		{
			get
			{
				return this._supplierCompanySupplier.Entity;
			}
			set
			{
				CompanySupplier previousValue = this._supplierCompanySupplier.Entity;
				if (((previousValue != value) 
							|| (this._supplierCompanySupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierCompanySupplier.Entity = null;
						previousValue.SupplierSupplierRestaurant = null;
					}
					this._supplierCompanySupplier.Entity = value;
					if ((value != null))
					{
						value.SupplierSupplierRestaurant = this;
						this._supplierId = value.Id;
					}
					else
					{
						this._supplierId = default(int);
					}
					this.SendPropertyChanged("SupplierCompanySupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SupplierShopping")]
	public partial class SupplierShopping : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _saleProduct;
		
		private string _guideWord;
		
		private EntityRef<CompanySupplier> _companySupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSaleProductChanging(string value);
    partial void OnSaleProductChanged();
    partial void OnGuideWordChanging(string value);
    partial void OnGuideWordChanged();
    #endregion
		
		public SupplierShopping()
		{
			this._companySupplier = default(EntityRef<CompanySupplier>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._companySupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_saleProduct", DbType="nvarchar(255)")]
		public string SaleProduct
		{
			get
			{
				return this._saleProduct;
			}
			set
			{
				if ((this._saleProduct != value))
				{
					this.OnSaleProductChanging(value);
					this.SendPropertyChanging();
					this._saleProduct = value;
					this.SendPropertyChanged("SaleProduct");
					this.OnSaleProductChanged();
				}
			}
		}
		
		[Column(Storage="_guideWord", DbType="nvarchar(MAX)")]
		public string GuideWord
		{
			get
			{
				return this._guideWord;
			}
			set
			{
				if ((this._guideWord != value))
				{
					this.OnGuideWordChanging(value);
					this.SendPropertyChanging();
					this._guideWord = value;
					this.SendPropertyChanged("GuideWord");
					this.OnGuideWordChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierShopping", Storage="_companySupplier", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanySupplier CompanySupplier
		{
			get
			{
				return this._companySupplier.Entity;
			}
			set
			{
				CompanySupplier previousValue = this._companySupplier.Entity;
				if (((previousValue != value) 
							|| (this._companySupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companySupplier.Entity = null;
						previousValue.SupplierShopping = null;
					}
					this._companySupplier.Entity = value;
					if ((value != null))
					{
						value.SupplierShopping = this;
						this._id = value.Id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("CompanySupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SupplierSpot")]
	public partial class SupplierSpot : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _supplierId;
		
		private byte _star;
		
		private string _tourGuide;
		
		private decimal _teamPrice;
		
		private decimal _travelerPrice;
		
		private EntityRef<CompanySupplier> _supplierCompanySupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnStarChanging(byte value);
    partial void OnStarChanged();
    partial void OnTourGuideChanging(string value);
    partial void OnTourGuideChanged();
    partial void OnTeamPriceChanging(decimal value);
    partial void OnTeamPriceChanged();
    partial void OnTravelerPriceChanging(decimal value);
    partial void OnTravelerPriceChanged();
    #endregion
		
		public SupplierSpot()
		{
			this._supplierCompanySupplier = default(EntityRef<CompanySupplier>);
			OnCreated();
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					if (this._supplierCompanySupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[Column(Storage="_star", DbType="tinyint NOT NULL")]
		public byte Star
		{
			get
			{
				return this._star;
			}
			set
			{
				if ((this._star != value))
				{
					this.OnStarChanging(value);
					this.SendPropertyChanging();
					this._star = value;
					this.SendPropertyChanged("Star");
					this.OnStarChanged();
				}
			}
		}
		
		[Column(Storage="_tourGuide", DbType="nvarchar(MAX)")]
		public string TourGuide
		{
			get
			{
				return this._tourGuide;
			}
			set
			{
				if ((this._tourGuide != value))
				{
					this.OnTourGuideChanging(value);
					this.SendPropertyChanging();
					this._tourGuide = value;
					this.SendPropertyChanged("TourGuide");
					this.OnTourGuideChanged();
				}
			}
		}
		
		[Column(Storage="_teamPrice", DbType="money NOT NULL")]
		public decimal TeamPrice
		{
			get
			{
				return this._teamPrice;
			}
			set
			{
				if ((this._teamPrice != value))
				{
					this.OnTeamPriceChanging(value);
					this.SendPropertyChanging();
					this._teamPrice = value;
					this.SendPropertyChanged("TeamPrice");
					this.OnTeamPriceChanged();
				}
			}
		}
		
		[Column(Storage="_travelerPrice", DbType="money NOT NULL")]
		public decimal TravelerPrice
		{
			get
			{
				return this._travelerPrice;
			}
			set
			{
				if ((this._travelerPrice != value))
				{
					this.OnTravelerPriceChanging(value);
					this.SendPropertyChanging();
					this._travelerPrice = value;
					this.SendPropertyChanged("TravelerPrice");
					this.OnTravelerPriceChanged();
				}
			}
		}
		
		[Association(Name="CompanySupplier_SupplierSpot", Storage="_supplierCompanySupplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanySupplier SupplierCompanySupplier
		{
			get
			{
				return this._supplierCompanySupplier.Entity;
			}
			set
			{
				CompanySupplier previousValue = this._supplierCompanySupplier.Entity;
				if (((previousValue != value) 
							|| (this._supplierCompanySupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplierCompanySupplier.Entity = null;
						previousValue.SupplierSupplierSpot = null;
					}
					this._supplierCompanySupplier.Entity = value;
					if ((value != null))
					{
						value.SupplierSupplierSpot = this;
						this._supplierId = value.Id;
					}
					else
					{
						this._supplierId = default(int);
					}
					this.SendPropertyChanged("SupplierCompanySupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Sys")]
	public partial class Sys : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sysId;
		
		private string _sysName;
		
		private string _module;
		
		private string _part;
		
		private string _permission;
		
		private System.Nullable<System.DateTime> _createTime;
		
		private EntitySet<SysDomain> _sysDomainList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIdChanging(int value);
    partial void OnSysIdChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnModuleChanging(string value);
    partial void OnModuleChanged();
    partial void OnPartChanging(string value);
    partial void OnPartChanged();
    partial void OnPermissionChanging(string value);
    partial void OnPermissionChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public Sys()
		{
			this._sysDomainList = new EntitySet<SysDomain>(new Action<SysDomain>(this.attach_sysDomainList), new Action<SysDomain>(this.detach_sysDomainList));
			OnCreated();
		}
		
		[Column(Storage="_sysId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SysId
		{
			get
			{
				return this._sysId;
			}
			set
			{
				if ((this._sysId != value))
				{
					this.OnSysIdChanging(value);
					this.SendPropertyChanging();
					this._sysId = value;
					this.SendPropertyChanged("SysId");
					this.OnSysIdChanged();
				}
			}
		}
		
		[Column(Storage="_sysName", DbType="nvarchar(50)")]
		public string SysName
		{
			get
			{
				return this._sysName;
			}
			set
			{
				if ((this._sysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._sysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[Column(Storage="_module", DbType="nvarchar(MAX)")]
		public string Module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnModuleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("Module");
					this.OnModuleChanged();
				}
			}
		}
		
		[Column(Storage="_part", DbType="nvarchar(MAX)")]
		public string Part
		{
			get
			{
				return this._part;
			}
			set
			{
				if ((this._part != value))
				{
					this.OnPartChanging(value);
					this.SendPropertyChanging();
					this._part = value;
					this.SendPropertyChanged("Part");
					this.OnPartChanged();
				}
			}
		}
		
		[Column(Storage="_permission", DbType="nvarchar(MAX)")]
		public string Permission
		{
			get
			{
				return this._permission;
			}
			set
			{
				if ((this._permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Association(Name="Sys_SysDomain", Storage="_sysDomainList", ThisKey="SysId", OtherKey="SysId")]
		public EntitySet<SysDomain> SysDomainList
		{
			get
			{
				return this._sysDomainList;
			}
			set
			{
				this._sysDomainList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sysDomainList(SysDomain entity)
		{
			this.SendPropertyChanging();
			entity.Sys = this;
		}
		
		private void detach_sysDomainList(SysDomain entity)
		{
			this.SendPropertyChanging();
			entity.Sys = null;
		}
	}
	
	[Table(Name="dbo.tbl_SysCity")]
	public partial class SysCity : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _provinceId;
		
		private string _cityName;
		
		private int _centerCityId;
		
		private string _headerLetter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProvinceIdChanging(int value);
    partial void OnProvinceIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnCenterCityIdChanging(int value);
    partial void OnCenterCityIdChanged();
    partial void OnHeaderLetterChanging(string value);
    partial void OnHeaderLetterChanged();
    #endregion
		
		public SysCity()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_provinceId", DbType="int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._provinceId;
			}
			set
			{
				if ((this._provinceId != value))
				{
					this.OnProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._provinceId = value;
					this.SendPropertyChanged("ProvinceId");
					this.OnProvinceIdChanged();
				}
			}
		}
		
		[Column(Storage="_cityName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._cityName;
			}
			set
			{
				if ((this._cityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._cityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[Column(Storage="_centerCityId", DbType="int NOT NULL")]
		public int CenterCityId
		{
			get
			{
				return this._centerCityId;
			}
			set
			{
				if ((this._centerCityId != value))
				{
					this.OnCenterCityIdChanging(value);
					this.SendPropertyChanging();
					this._centerCityId = value;
					this.SendPropertyChanged("CenterCityId");
					this.OnCenterCityIdChanged();
				}
			}
		}
		
		[Column(Storage="_headerLetter", DbType="varchar(50)")]
		public string HeaderLetter
		{
			get
			{
				return this._headerLetter;
			}
			set
			{
				if ((this._headerLetter != value))
				{
					this.OnHeaderLetterChanging(value);
					this.SendPropertyChanging();
					this._headerLetter = value;
					this.SendPropertyChanged("HeaderLetter");
					this.OnHeaderLetterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysDeletedFileQue")]
	public partial class SysDeletedFileQue : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _filePath;
		
		private byte _fileState;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnFileStateChanging(byte value);
    partial void OnFileStateChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public SysDeletedFileQue()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(250)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_fileState", DbType="tinyint NOT NULL")]
		public byte FileState
		{
			get
			{
				return this._fileState;
			}
			set
			{
				if ((this._fileState != value))
				{
					this.OnFileStateChanging(value);
					this.SendPropertyChanging();
					this._fileState = value;
					this.SendPropertyChanged("FileState");
					this.OnFileStateChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysDomain")]
	public partial class SysDomain : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sysId;
		
		private string _domain;
		
		private string _url;
		
		private EntityRef<Sys> _sys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIdChanging(int value);
    partial void OnSysIdChanged();
    partial void OnDomainChanging(string value);
    partial void OnDomainChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public SysDomain()
		{
			this._sys = default(EntityRef<Sys>);
			OnCreated();
		}
		
		[Column(Storage="_sysId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int SysId
		{
			get
			{
				return this._sysId;
			}
			set
			{
				if ((this._sysId != value))
				{
					if (this._sys.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSysIdChanging(value);
					this.SendPropertyChanging();
					this._sysId = value;
					this.SendPropertyChanged("SysId");
					this.OnSysIdChanged();
				}
			}
		}
		
		[Column(Storage="_domain", DbType="nvarchar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Domain
		{
			get
			{
				return this._domain;
			}
			set
			{
				if ((this._domain != value))
				{
					this.OnDomainChanging(value);
					this.SendPropertyChanging();
					this._domain = value;
					this.SendPropertyChanged("Domain");
					this.OnDomainChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="nvarchar(255)")]
		public string Url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[Association(Name="Sys_SysDomain", Storage="_sys", ThisKey="SysId", OtherKey="SysId", IsForeignKey=true, DeleteOnNull=true)]
		public Sys Sys
		{
			get
			{
				return this._sys.Entity;
			}
			set
			{
				Sys previousValue = this._sys.Entity;
				if (((previousValue != value) 
							|| (this._sys.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sys.Entity = null;
						previousValue.SysDomainList.Remove(this);
					}
					this._sys.Entity = value;
					if ((value != null))
					{
						value.SysDomainList.Add(this);
						this._sysId = value.SysId;
					}
					else
					{
						this._sysId = default(int);
					}
					this.SendPropertyChanged("Sys");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysExceptionLog")]
	public partial class SysExceptionLog : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _errorID;
		
		private string _requestUrl;
		
		private string _remoteIP;
		
		private string _errorMessage;
		
		private string _errorSource;
		
		private string _stackTrace;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIDChanging(string value);
    partial void OnErrorIDChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnRemoteIPChanging(string value);
    partial void OnRemoteIPChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnErrorSourceChanging(string value);
    partial void OnErrorSourceChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public SysExceptionLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_errorID", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ErrorID
		{
			get
			{
				return this._errorID;
			}
			set
			{
				if ((this._errorID != value))
				{
					this.OnErrorIDChanging(value);
					this.SendPropertyChanging();
					this._errorID = value;
					this.SendPropertyChanged("ErrorID");
					this.OnErrorIDChanged();
				}
			}
		}
		
		[Column(Storage="_requestUrl", DbType="nvarchar(MAX)")]
		public string RequestUrl
		{
			get
			{
				return this._requestUrl;
			}
			set
			{
				if ((this._requestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._requestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[Column(Storage="_remoteIP", DbType="varchar(20)")]
		public string RemoteIP
		{
			get
			{
				return this._remoteIP;
			}
			set
			{
				if ((this._remoteIP != value))
				{
					this.OnRemoteIPChanging(value);
					this.SendPropertyChanging();
					this._remoteIP = value;
					this.SendPropertyChanged("RemoteIP");
					this.OnRemoteIPChanged();
				}
			}
		}
		
		[Column(Storage="_errorMessage", DbType="nvarchar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._errorMessage;
			}
			set
			{
				if ((this._errorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._errorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[Column(Storage="_errorSource", DbType="nvarchar(255)")]
		public string ErrorSource
		{
			get
			{
				return this._errorSource;
			}
			set
			{
				if ((this._errorSource != value))
				{
					this.OnErrorSourceChanging(value);
					this.SendPropertyChanging();
					this._errorSource = value;
					this.SendPropertyChanged("ErrorSource");
					this.OnErrorSourceChanged();
				}
			}
		}
		
		[Column(Storage="_stackTrace", DbType="nvarchar(MAX)")]
		public string StackTrace
		{
			get
			{
				return this._stackTrace;
			}
			set
			{
				if ((this._stackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._stackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysHandleLogs")]
	public partial class SysHandleLogs : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _operatorId;
		
		private int _depatId;
		
		private int _companyId;
		
		private int _moduleId;
		
		private int _eventCode;
		
		private string _eventMessage;
		
		private string _eventTitle;
		
		private System.DateTime _eventTime;
		
		private string _eventIp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnDepatIdChanging(int value);
    partial void OnDepatIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventMessageChanging(string value);
    partial void OnEventMessageChanged();
    partial void OnEventTitleChanging(string value);
    partial void OnEventTitleChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventIpChanging(string value);
    partial void OnEventIpChanged();
    #endregion
		
		public SysHandleLogs()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_depatId", DbType="int NOT NULL")]
		public int DepatId
		{
			get
			{
				return this._depatId;
			}
			set
			{
				if ((this._depatId != value))
				{
					this.OnDepatIdChanging(value);
					this.SendPropertyChanging();
					this._depatId = value;
					this.SendPropertyChanged("DepatId");
					this.OnDepatIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_moduleId", DbType="int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._moduleId;
			}
			set
			{
				if ((this._moduleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._moduleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[Column(Storage="_eventCode", DbType="int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._eventCode;
			}
			set
			{
				if ((this._eventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._eventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[Column(Storage="_eventMessage", DbType="nvarchar(MAX)")]
		public string EventMessage
		{
			get
			{
				return this._eventMessage;
			}
			set
			{
				if ((this._eventMessage != value))
				{
					this.OnEventMessageChanging(value);
					this.SendPropertyChanging();
					this._eventMessage = value;
					this.SendPropertyChanged("EventMessage");
					this.OnEventMessageChanged();
				}
			}
		}
		
		[Column(Storage="_eventTitle", DbType="nvarchar(255)")]
		public string EventTitle
		{
			get
			{
				return this._eventTitle;
			}
			set
			{
				if ((this._eventTitle != value))
				{
					this.OnEventTitleChanging(value);
					this.SendPropertyChanging();
					this._eventTitle = value;
					this.SendPropertyChanged("EventTitle");
					this.OnEventTitleChanged();
				}
			}
		}
		
		[Column(Storage="_eventTime", DbType="datetime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._eventTime;
			}
			set
			{
				if ((this._eventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._eventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[Column(Storage="_eventIp", DbType="nvarchar(20)")]
		public string EventIp
		{
			get
			{
				return this._eventIp;
			}
			set
			{
				if ((this._eventIp != value))
				{
					this.OnEventIpChanging(value);
					this.SendPropertyChanging();
					this._eventIp = value;
					this.SendPropertyChanged("EventIp");
					this.OnEventIpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysLoginLog")]
	public partial class SysLoginLog : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _operator;
		
		private int _depatId;
		
		private int _companyId;
		
		private System.DateTime _loginTime;
		
		private string _loginIp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnOperatorChanging(int value);
    partial void OnOperatorChanged();
    partial void OnDepatIdChanging(int value);
    partial void OnDepatIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnLoginTimeChanging(System.DateTime value);
    partial void OnLoginTimeChanged();
    partial void OnLoginIpChanging(string value);
    partial void OnLoginIpChanged();
    #endregion
		
		public SysLoginLog()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_operator", DbType="int NOT NULL")]
		public int Operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_depatId", DbType="int NOT NULL")]
		public int DepatId
		{
			get
			{
				return this._depatId;
			}
			set
			{
				if ((this._depatId != value))
				{
					this.OnDepatIdChanging(value);
					this.SendPropertyChanging();
					this._depatId = value;
					this.SendPropertyChanged("DepatId");
					this.OnDepatIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_loginTime", DbType="datetime NOT NULL")]
		public System.DateTime LoginTime
		{
			get
			{
				return this._loginTime;
			}
			set
			{
				if ((this._loginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._loginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[Column(Storage="_loginIp", DbType="nvarchar(20)")]
		public string LoginIp
		{
			get
			{
				return this._loginIp;
			}
			set
			{
				if ((this._loginIp != value))
				{
					this.OnLoginIpChanging(value);
					this.SendPropertyChanging();
					this._loginIp = value;
					this.SendPropertyChanged("LoginIp");
					this.OnLoginIpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysPermissionCategory")]
	public partial class SysPermissionCategory : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _typeId;
		
		private string _categoryName;
		
		private int _sortId;
		
		private string _isEnable;
		
		private EntitySet<SysPermissionClass> _categorySysPermissionClassList;
		
		private EntityRef<SysPermissionType> _typeSysPermissionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnSortIdChanging(int value);
    partial void OnSortIdChanged();
    partial void OnIsEnableChanging(string value);
    partial void OnIsEnableChanged();
    #endregion
		
		public SysPermissionCategory()
		{
			this._categorySysPermissionClassList = new EntitySet<SysPermissionClass>(new Action<SysPermissionClass>(this.attach_categorySysPermissionClassList), new Action<SysPermissionClass>(this.detach_categorySysPermissionClassList));
			this._typeSysPermissionType = default(EntityRef<SysPermissionType>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_typeId", DbType="int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					if (this._typeSysPermissionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_categoryName", DbType="nvarchar(200)")]
		public string CategoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				if ((this._categoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._categoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[Column(Storage="_sortId", DbType="int NOT NULL")]
		public int SortId
		{
			get
			{
				return this._sortId;
			}
			set
			{
				if ((this._sortId != value))
				{
					this.OnSortIdChanging(value);
					this.SendPropertyChanging();
					this._sortId = value;
					this.SendPropertyChanged("SortId");
					this.OnSortIdChanged();
				}
			}
		}
		
		[Column(Storage="_isEnable", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsEnable
		{
			get
			{
				return this._isEnable;
			}
			set
			{
				if ((this._isEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._isEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[Association(Name="SysPermissionCategory_SysPermissionClass", Storage="_categorySysPermissionClassList", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<SysPermissionClass> CategorySysPermissionClassList
		{
			get
			{
				return this._categorySysPermissionClassList;
			}
			set
			{
				this._categorySysPermissionClassList.Assign(value);
			}
		}
		
		[Association(Name="SysPermissionType_SysPermissionCategory", Storage="_typeSysPermissionType", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public SysPermissionType TypeSysPermissionType
		{
			get
			{
				return this._typeSysPermissionType.Entity;
			}
			set
			{
				SysPermissionType previousValue = this._typeSysPermissionType.Entity;
				if (((previousValue != value) 
							|| (this._typeSysPermissionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._typeSysPermissionType.Entity = null;
						previousValue.TypeSysPermissionCategoryList.Remove(this);
					}
					this._typeSysPermissionType.Entity = value;
					if ((value != null))
					{
						value.TypeSysPermissionCategoryList.Add(this);
						this._typeId = value.Id;
					}
					else
					{
						this._typeId = default(int);
					}
					this.SendPropertyChanged("TypeSysPermissionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_categorySysPermissionClassList(SysPermissionClass entity)
		{
			this.SendPropertyChanging();
			entity.CategorySysPermissionCategory = this;
		}
		
		private void detach_categorySysPermissionClassList(SysPermissionClass entity)
		{
			this.SendPropertyChanging();
			entity.CategorySysPermissionCategory = null;
		}
	}
	
	[Table(Name="dbo.tbl_SysPermissionClass")]
	public partial class SysPermissionClass : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _categoryId;
		
		private string _className;
		
		private int _sortId;
		
		private string _isEnable;
		
		private EntitySet<SysPermissionList> _classSysPermissionListList;
		
		private EntityRef<SysPermissionCategory> _categorySysPermissionCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnSortIdChanging(int value);
    partial void OnSortIdChanged();
    partial void OnIsEnableChanging(string value);
    partial void OnIsEnableChanged();
    #endregion
		
		public SysPermissionClass()
		{
			this._classSysPermissionListList = new EntitySet<SysPermissionList>(new Action<SysPermissionList>(this.attach_classSysPermissionListList), new Action<SysPermissionList>(this.detach_classSysPermissionListList));
			this._categorySysPermissionCategory = default(EntityRef<SysPermissionCategory>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_categoryId", DbType="int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._categoryId;
			}
			set
			{
				if ((this._categoryId != value))
				{
					if (this._categorySysPermissionCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._categoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_className", DbType="nvarchar(200)")]
		public string ClassName
		{
			get
			{
				return this._className;
			}
			set
			{
				if ((this._className != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._className = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[Column(Storage="_sortId", DbType="int NOT NULL")]
		public int SortId
		{
			get
			{
				return this._sortId;
			}
			set
			{
				if ((this._sortId != value))
				{
					this.OnSortIdChanging(value);
					this.SendPropertyChanging();
					this._sortId = value;
					this.SendPropertyChanged("SortId");
					this.OnSortIdChanged();
				}
			}
		}
		
		[Column(Storage="_isEnable", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsEnable
		{
			get
			{
				return this._isEnable;
			}
			set
			{
				if ((this._isEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._isEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[Association(Name="SysPermissionClass_SysPermissionList", Storage="_classSysPermissionListList", ThisKey="Id", OtherKey="ClassId")]
		public EntitySet<SysPermissionList> ClassSysPermissionListList
		{
			get
			{
				return this._classSysPermissionListList;
			}
			set
			{
				this._classSysPermissionListList.Assign(value);
			}
		}
		
		[Association(Name="SysPermissionCategory_SysPermissionClass", Storage="_categorySysPermissionCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SysPermissionCategory CategorySysPermissionCategory
		{
			get
			{
				return this._categorySysPermissionCategory.Entity;
			}
			set
			{
				SysPermissionCategory previousValue = this._categorySysPermissionCategory.Entity;
				if (((previousValue != value) 
							|| (this._categorySysPermissionCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._categorySysPermissionCategory.Entity = null;
						previousValue.CategorySysPermissionClassList.Remove(this);
					}
					this._categorySysPermissionCategory.Entity = value;
					if ((value != null))
					{
						value.CategorySysPermissionClassList.Add(this);
						this._categoryId = value.Id;
					}
					else
					{
						this._categoryId = default(int);
					}
					this.SendPropertyChanged("CategorySysPermissionCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_classSysPermissionListList(SysPermissionList entity)
		{
			this.SendPropertyChanging();
			entity.ClassSysPermissionClass = this;
		}
		
		private void detach_classSysPermissionListList(SysPermissionList entity)
		{
			this.SendPropertyChanging();
			entity.ClassSysPermissionClass = null;
		}
	}
	
	[Table(Name="dbo.tbl_SysPermissionList")]
	public partial class SysPermissionList : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _classId;
		
		private string _permissionName;
		
		private int _sortId;
		
		private string _isEnable;
		
		private EntityRef<SysPermissionClass> _classSysPermissionClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnPermissionNameChanging(string value);
    partial void OnPermissionNameChanged();
    partial void OnSortIdChanging(int value);
    partial void OnSortIdChanged();
    partial void OnIsEnableChanging(string value);
    partial void OnIsEnableChanged();
    #endregion
		
		public SysPermissionList()
		{
			this._classSysPermissionClass = default(EntityRef<SysPermissionClass>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_classId", DbType="int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._classId;
			}
			set
			{
				if ((this._classId != value))
				{
					if (this._classSysPermissionClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._classId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[Column(Storage="_permissionName", DbType="nvarchar(100)")]
		public string PermissionName
		{
			get
			{
				return this._permissionName;
			}
			set
			{
				if ((this._permissionName != value))
				{
					this.OnPermissionNameChanging(value);
					this.SendPropertyChanging();
					this._permissionName = value;
					this.SendPropertyChanged("PermissionName");
					this.OnPermissionNameChanged();
				}
			}
		}
		
		[Column(Storage="_sortId", DbType="int NOT NULL")]
		public int SortId
		{
			get
			{
				return this._sortId;
			}
			set
			{
				if ((this._sortId != value))
				{
					this.OnSortIdChanging(value);
					this.SendPropertyChanging();
					this._sortId = value;
					this.SendPropertyChanged("SortId");
					this.OnSortIdChanged();
				}
			}
		}
		
		[Column(Storage="_isEnable", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsEnable
		{
			get
			{
				return this._isEnable;
			}
			set
			{
				if ((this._isEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._isEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[Association(Name="SysPermissionClass_SysPermissionList", Storage="_classSysPermissionClass", ThisKey="ClassId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public SysPermissionClass ClassSysPermissionClass
		{
			get
			{
				return this._classSysPermissionClass.Entity;
			}
			set
			{
				SysPermissionClass previousValue = this._classSysPermissionClass.Entity;
				if (((previousValue != value) 
							|| (this._classSysPermissionClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._classSysPermissionClass.Entity = null;
						previousValue.ClassSysPermissionListList.Remove(this);
					}
					this._classSysPermissionClass.Entity = value;
					if ((value != null))
					{
						value.ClassSysPermissionListList.Add(this);
						this._classId = value.Id;
					}
					else
					{
						this._classId = default(int);
					}
					this.SendPropertyChanged("ClassSysPermissionClass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysPermissionType")]
	public partial class SysPermissionType : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _permissionTypeName;
		
		private EntitySet<SysPermissionCategory> _typeSysPermissionCategoryList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPermissionTypeNameChanging(string value);
    partial void OnPermissionTypeNameChanged();
    #endregion
		
		public SysPermissionType()
		{
			this._typeSysPermissionCategoryList = new EntitySet<SysPermissionCategory>(new Action<SysPermissionCategory>(this.attach_typeSysPermissionCategoryList), new Action<SysPermissionCategory>(this.detach_typeSysPermissionCategoryList));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_permissionTypeName", DbType="nvarchar(100)")]
		public string PermissionTypeName
		{
			get
			{
				return this._permissionTypeName;
			}
			set
			{
				if ((this._permissionTypeName != value))
				{
					this.OnPermissionTypeNameChanging(value);
					this.SendPropertyChanging();
					this._permissionTypeName = value;
					this.SendPropertyChanged("PermissionTypeName");
					this.OnPermissionTypeNameChanged();
				}
			}
		}
		
		[Association(Name="SysPermissionType_SysPermissionCategory", Storage="_typeSysPermissionCategoryList", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<SysPermissionCategory> TypeSysPermissionCategoryList
		{
			get
			{
				return this._typeSysPermissionCategoryList;
			}
			set
			{
				this._typeSysPermissionCategoryList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_typeSysPermissionCategoryList(SysPermissionCategory entity)
		{
			this.SendPropertyChanging();
			entity.TypeSysPermissionType = this;
		}
		
		private void detach_typeSysPermissionCategoryList(SysPermissionCategory entity)
		{
			this.SendPropertyChanging();
			entity.TypeSysPermissionType = null;
		}
	}
	
	[Table(Name="dbo.tbl_SysPluging")]
	public partial class SysPluging : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pluginID;
		
		private string _enabled;
		
		private string _pluginCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPluginIDChanging(string value);
    partial void OnPluginIDChanged();
    partial void OnEnabledChanging(string value);
    partial void OnEnabledChanged();
    partial void OnPluginCategoryChanging(string value);
    partial void OnPluginCategoryChanged();
    #endregion
		
		public SysPluging()
		{
			OnCreated();
		}
		
		[Column(Storage="_pluginID", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PluginID
		{
			get
			{
				return this._pluginID;
			}
			set
			{
				if ((this._pluginID != value))
				{
					this.OnPluginIDChanging(value);
					this.SendPropertyChanging();
					this._pluginID = value;
					this.SendPropertyChanged("PluginID");
					this.OnPluginIDChanged();
				}
			}
		}
		
		[Column(Storage="_enabled", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string Enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_pluginCategory", DbType="nvarchar(50)")]
		public string PluginCategory
		{
			get
			{
				return this._pluginCategory;
			}
			set
			{
				if ((this._pluginCategory != value))
				{
					this.OnPluginCategoryChanging(value);
					this.SendPropertyChanging();
					this._pluginCategory = value;
					this.SendPropertyChanged("PluginCategory");
					this.OnPluginCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysPlugingSetting")]
	public partial class SysPlugingSetting : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pluginID;
		
		private string _pluginSettingName;
		
		private string _pluginSettingValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPluginIDChanging(string value);
    partial void OnPluginIDChanged();
    partial void OnPluginSettingNameChanging(string value);
    partial void OnPluginSettingNameChanged();
    partial void OnPluginSettingValueChanging(string value);
    partial void OnPluginSettingValueChanged();
    #endregion
		
		public SysPlugingSetting()
		{
			OnCreated();
		}
		
		[Column(Storage="_pluginID", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PluginID
		{
			get
			{
				return this._pluginID;
			}
			set
			{
				if ((this._pluginID != value))
				{
					this.OnPluginIDChanging(value);
					this.SendPropertyChanging();
					this._pluginID = value;
					this.SendPropertyChanged("PluginID");
					this.OnPluginIDChanged();
				}
			}
		}
		
		[Column(Storage="_pluginSettingName", DbType="nvarchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PluginSettingName
		{
			get
			{
				return this._pluginSettingName;
			}
			set
			{
				if ((this._pluginSettingName != value))
				{
					this.OnPluginSettingNameChanging(value);
					this.SendPropertyChanging();
					this._pluginSettingName = value;
					this.SendPropertyChanged("PluginSettingName");
					this.OnPluginSettingNameChanged();
				}
			}
		}
		
		[Column(Storage="_pluginSettingValue", DbType="nvarchar(MAX)")]
		public string PluginSettingValue
		{
			get
			{
				return this._pluginSettingValue;
			}
			set
			{
				if ((this._pluginSettingValue != value))
				{
					this.OnPluginSettingValueChanging(value);
					this.SendPropertyChanging();
					this._pluginSettingValue = value;
					this.SendPropertyChanged("PluginSettingValue");
					this.OnPluginSettingValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysProvince")]
	public partial class SysProvince : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _countryId;
		
		private string _headerLetter;
		
		private string _provinceName;
		
		private int _areaId;
		
		private int _sortId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnHeaderLetterChanging(string value);
    partial void OnHeaderLetterChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnSortIdChanging(int value);
    partial void OnSortIdChanged();
    #endregion
		
		public SysProvince()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_countryId", DbType="int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._countryId;
			}
			set
			{
				if ((this._countryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._countryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[Column(Storage="_headerLetter", DbType="varchar(10)")]
		public string HeaderLetter
		{
			get
			{
				return this._headerLetter;
			}
			set
			{
				if ((this._headerLetter != value))
				{
					this.OnHeaderLetterChanging(value);
					this.SendPropertyChanging();
					this._headerLetter = value;
					this.SendPropertyChanged("HeaderLetter");
					this.OnHeaderLetterChanged();
				}
			}
		}
		
		[Column(Storage="_provinceName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string ProvinceName
		{
			get
			{
				return this._provinceName;
			}
			set
			{
				if ((this._provinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._provinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_sortId", DbType="int NOT NULL")]
		public int SortId
		{
			get
			{
				return this._sortId;
			}
			set
			{
				if ((this._sortId != value))
				{
					this.OnSortIdChanging(value);
					this.SendPropertyChanging();
					this._sortId = value;
					this.SendPropertyChanged("SortId");
					this.OnSortIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SysRoleManage")]
	public partial class SysRoleManage : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _roleName;
		
		private string _roleChilds;
		
		private int _companyId;
		
		private string _isDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleChildsChanging(string value);
    partial void OnRoleChildsChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public SysRoleManage()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_roleName", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._roleName;
			}
			set
			{
				if ((this._roleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._roleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_roleChilds", DbType="varchar(MAX) NOT NULL", CanBeNull=false)]
		public string RoleChilds
		{
			get
			{
				return this._roleChilds;
			}
			set
			{
				if ((this._roleChilds != value))
				{
					this.OnRoleChildsChanging(value);
					this.SendPropertyChanging();
					this._roleChilds = value;
					this.SendPropertyChanged("RoleChilds");
					this.OnRoleChildsChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_SystemUser")]
	public partial class SystemUser : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _userName;
		
		private string _password;
		
		private string _mD5Password;
		
		private string _contactName;
		
		private string _contactTel;
		
		private string _contactFax;
		
		private string _contactMobile;
		
		private string _permissionList;
		
		private string _isDisable;
		
		private string _isAdmin;
		
		private System.DateTime _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMD5PasswordChanging(string value);
    partial void OnMD5PasswordChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnContactMobileChanging(string value);
    partial void OnContactMobileChanged();
    partial void OnPermissionListChanging(string value);
    partial void OnPermissionListChanged();
    partial void OnIsDisableChanging(string value);
    partial void OnIsDisableChanged();
    partial void OnIsAdminChanging(string value);
    partial void OnIsAdminChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public SystemUser()
		{
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_userName", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="varchar(50)")]
		public string Password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_mD5Password", DbType="varchar(50)")]
		public string MD5Password
		{
			get
			{
				return this._mD5Password;
			}
			set
			{
				if ((this._mD5Password != value))
				{
					this.OnMD5PasswordChanging(value);
					this.SendPropertyChanging();
					this._mD5Password = value;
					this.SendPropertyChanged("MD5Password");
					this.OnMD5PasswordChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(50)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="nvarchar(50)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._contactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="nvarchar(50)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this.OnContactMobileChanging(value);
					this.SendPropertyChanging();
					this._contactMobile = value;
					this.SendPropertyChanged("ContactMobile");
					this.OnContactMobileChanged();
				}
			}
		}
		
		[Column(Storage="_permissionList", DbType="varchar(MAX) NOT NULL", CanBeNull=false)]
		public string PermissionList
		{
			get
			{
				return this._permissionList;
			}
			set
			{
				if ((this._permissionList != value))
				{
					this.OnPermissionListChanging(value);
					this.SendPropertyChanging();
					this._permissionList = value;
					this.SendPropertyChanged("PermissionList");
					this.OnPermissionListChanged();
				}
			}
		}
		
		[Column(Storage="_isDisable", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDisable
		{
			get
			{
				return this._isDisable;
			}
			set
			{
				if ((this._isDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._isDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[Column(Storage="_isAdmin", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsAdmin
		{
			get
			{
				return this._isAdmin;
			}
			set
			{
				if ((this._isAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._isAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TemplateUseRange")]
	public partial class TemplateUseRange : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tempId;
		
		private byte _tempType;
		
		private byte _useRange;
		
		private int _departId;
		
		private EntityRef<CompanyTemplates> _tempCompanyTemplates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTempIdChanging(int value);
    partial void OnTempIdChanged();
    partial void OnTempTypeChanging(byte value);
    partial void OnTempTypeChanged();
    partial void OnUseRangeChanging(byte value);
    partial void OnUseRangeChanged();
    partial void OnDepartIdChanging(int value);
    partial void OnDepartIdChanged();
    #endregion
		
		public TemplateUseRange()
		{
			this._tempCompanyTemplates = default(EntityRef<CompanyTemplates>);
			OnCreated();
		}
		
		[Column(Storage="_tempId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int TempId
		{
			get
			{
				return this._tempId;
			}
			set
			{
				if ((this._tempId != value))
				{
					if (this._tempCompanyTemplates.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTempIdChanging(value);
					this.SendPropertyChanging();
					this._tempId = value;
					this.SendPropertyChanged("TempId");
					this.OnTempIdChanged();
				}
			}
		}
		
		[Column(Storage="_tempType", DbType="tinyint NOT NULL")]
		public byte TempType
		{
			get
			{
				return this._tempType;
			}
			set
			{
				if ((this._tempType != value))
				{
					this.OnTempTypeChanging(value);
					this.SendPropertyChanging();
					this._tempType = value;
					this.SendPropertyChanged("TempType");
					this.OnTempTypeChanged();
				}
			}
		}
		
		[Column(Storage="_useRange", DbType="tinyint NOT NULL", IsPrimaryKey=true)]
		public byte UseRange
		{
			get
			{
				return this._useRange;
			}
			set
			{
				if ((this._useRange != value))
				{
					this.OnUseRangeChanging(value);
					this.SendPropertyChanging();
					this._useRange = value;
					this.SendPropertyChanged("UseRange");
					this.OnUseRangeChanged();
				}
			}
		}
		
		[Column(Storage="_departId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int DepartId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._departId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[Association(Name="CompanyTemplates_TemplateUseRange", Storage="_tempCompanyTemplates", ThisKey="TempId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyTemplates TempCompanyTemplates
		{
			get
			{
				return this._tempCompanyTemplates.Entity;
			}
			set
			{
				CompanyTemplates previousValue = this._tempCompanyTemplates.Entity;
				if (((previousValue != value) 
							|| (this._tempCompanyTemplates.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tempCompanyTemplates.Entity = null;
						previousValue.TempTemplateUseRangeList.Remove(this);
					}
					this._tempCompanyTemplates.Entity = value;
					if ((value != null))
					{
						value.TempTemplateUseRangeList.Add(this);
						this._tempId = value.Id;
					}
					else
					{
						this._tempId = default(int);
					}
					this.SendPropertyChanged("TempCompanyTemplates");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Tour")]
	public partial class Tour : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private string _templateId;
		
		private byte _tourType;
		
		private System.Nullable<System.DateTime> _leaveDate;
		
		private System.Nullable<System.DateTime> _rDate;
		
		private int _areaId;
		
		private byte _status;
		
		private string _isCostConfirm;
		
		private string _isReview;
		
		private byte _ticketStatus;
		
		private string _tourCode;
		
		private int _routeId;
		
		private string _routeName;
		
		private int _tourDays;
		
		private int _planPeopleNumber;
		
		private int _virtualPeopleNumber;
		
		private string _releaseType;
		
		private string _lTraffic;
		
		private string _rTraffic;
		
		private string _gather;
		
		private System.DateTime _createTime;
		
		private int _operatorId;
		
		private int _sellerId;
		
		private int _companyId;
		
		private decimal _totalAmount;
		
		private System.DateTime _lastTime;
		
		private decimal _totalIncome;
		
		private decimal _totalExpenses;
		
		private decimal _distributionAmount;
		
		private decimal _grossProfit;
		
		private string _isSettleInCome;
		
		private string _isSettleOut;
		
		private string _isDelete;
		
		private System.Nullable<System.DateTime> _endDateTime;
		
		private decimal _totalOtherIncome;
		
		private decimal _totalOtherExpenses;
		
		private decimal _totalOutAmount;
		
		private string _isLeave;
		
		private int _quoteId;
		
		private int _pkid;
		
		private string _gatheringTime;
		
		private string _gatheringPlace;
		
		private string _gatheringSign;
		
		private EntitySet<PlanSingle> _planSingleList;
		
		private EntitySet<TourAttach> _tourAttachList;
		
		private EntitySet<TourCity> _tourCityList;
		
		private EntityRef<TourCreateRule> _tourCreateRule;
		
		private EntitySet<TourLocalAgency> _tourLocalAgencyList;
		
		private EntitySet<TourOperator> _tourOperatorList;
		
		private EntitySet<TourPlan> _tourPlanList;
		
		private EntitySet<TourPrice> _tourPriceList;
		
		private EntityRef<TourQuickPlan> _tourQuickPlan;
		
		private EntitySet<TourSentTask> _tourSentTaskList;
		
		private EntitySet<TourService> _tourServiceList;
		
		private EntitySet<TourTeamPrice> _tourTeamPriceList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnTemplateIdChanging(string value);
    partial void OnTemplateIdChanged();
    partial void OnTourTypeChanging(byte value);
    partial void OnTourTypeChanged();
    partial void OnLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveDateChanged();
    partial void OnRDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRDateChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnIsCostConfirmChanging(string value);
    partial void OnIsCostConfirmChanged();
    partial void OnIsReviewChanging(string value);
    partial void OnIsReviewChanged();
    partial void OnTicketStatusChanging(byte value);
    partial void OnTicketStatusChanged();
    partial void OnTourCodeChanging(string value);
    partial void OnTourCodeChanged();
    partial void OnRouteIdChanging(int value);
    partial void OnRouteIdChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnTourDaysChanging(int value);
    partial void OnTourDaysChanged();
    partial void OnPlanPeopleNumberChanging(int value);
    partial void OnPlanPeopleNumberChanged();
    partial void OnVirtualPeopleNumberChanging(int value);
    partial void OnVirtualPeopleNumberChanged();
    partial void OnReleaseTypeChanging(string value);
    partial void OnReleaseTypeChanged();
    partial void OnLTrafficChanging(string value);
    partial void OnLTrafficChanged();
    partial void OnRTrafficChanging(string value);
    partial void OnRTrafficChanged();
    partial void OnGatherChanging(string value);
    partial void OnGatherChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnSellerIdChanging(int value);
    partial void OnSellerIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnLastTimeChanging(System.DateTime value);
    partial void OnLastTimeChanged();
    partial void OnTotalIncomeChanging(decimal value);
    partial void OnTotalIncomeChanged();
    partial void OnTotalExpensesChanging(decimal value);
    partial void OnTotalExpensesChanged();
    partial void OnDistributionAmountChanging(decimal value);
    partial void OnDistributionAmountChanged();
    partial void OnGrossProfitChanging(decimal value);
    partial void OnGrossProfitChanged();
    partial void OnIsSettleInComeChanging(string value);
    partial void OnIsSettleInComeChanged();
    partial void OnIsSettleOutChanging(string value);
    partial void OnIsSettleOutChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnEndDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateTimeChanged();
    partial void OnTotalOtherIncomeChanging(decimal value);
    partial void OnTotalOtherIncomeChanged();
    partial void OnTotalOtherExpensesChanging(decimal value);
    partial void OnTotalOtherExpensesChanged();
    partial void OnTotalOutAmountChanging(decimal value);
    partial void OnTotalOutAmountChanged();
    partial void OnIsLeaveChanging(string value);
    partial void OnIsLeaveChanged();
    partial void OnQuoteIdChanging(int value);
    partial void OnQuoteIdChanged();
    partial void OnPkidChanging(int value);
    partial void OnPkidChanged();
    partial void OnGatheringTimeChanging(string value);
    partial void OnGatheringTimeChanged();
    partial void OnGatheringPlaceChanging(string value);
    partial void OnGatheringPlaceChanged();
    partial void OnGatheringSignChanging(string value);
    partial void OnGatheringSignChanged();
    #endregion
		
		public Tour()
		{
			this._planSingleList = new EntitySet<PlanSingle>(new Action<PlanSingle>(this.attach_planSingleList), new Action<PlanSingle>(this.detach_planSingleList));
			this._tourAttachList = new EntitySet<TourAttach>(new Action<TourAttach>(this.attach_tourAttachList), new Action<TourAttach>(this.detach_tourAttachList));
			this._tourCityList = new EntitySet<TourCity>(new Action<TourCity>(this.attach_tourCityList), new Action<TourCity>(this.detach_tourCityList));
			this._tourCreateRule = default(EntityRef<TourCreateRule>);
			this._tourLocalAgencyList = new EntitySet<TourLocalAgency>(new Action<TourLocalAgency>(this.attach_tourLocalAgencyList), new Action<TourLocalAgency>(this.detach_tourLocalAgencyList));
			this._tourOperatorList = new EntitySet<TourOperator>(new Action<TourOperator>(this.attach_tourOperatorList), new Action<TourOperator>(this.detach_tourOperatorList));
			this._tourPlanList = new EntitySet<TourPlan>(new Action<TourPlan>(this.attach_tourPlanList), new Action<TourPlan>(this.detach_tourPlanList));
			this._tourPriceList = new EntitySet<TourPrice>(new Action<TourPrice>(this.attach_tourPriceList), new Action<TourPrice>(this.detach_tourPriceList));
			this._tourQuickPlan = default(EntityRef<TourQuickPlan>);
			this._tourSentTaskList = new EntitySet<TourSentTask>(new Action<TourSentTask>(this.attach_tourSentTaskList), new Action<TourSentTask>(this.detach_tourSentTaskList));
			this._tourServiceList = new EntitySet<TourService>(new Action<TourService>(this.attach_tourServiceList), new Action<TourService>(this.detach_tourServiceList));
			this._tourTeamPriceList = new EntitySet<TourTeamPrice>(new Action<TourTeamPrice>(this.attach_tourTeamPriceList), new Action<TourTeamPrice>(this.detach_tourTeamPriceList));
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_templateId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TemplateId
		{
			get
			{
				return this._templateId;
			}
			set
			{
				if ((this._templateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._templateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourType", DbType="tinyint NOT NULL")]
		public byte TourType
		{
			get
			{
				return this._tourType;
			}
			set
			{
				if ((this._tourType != value))
				{
					this.OnTourTypeChanging(value);
					this.SendPropertyChanging();
					this._tourType = value;
					this.SendPropertyChanged("TourType");
					this.OnTourTypeChanged();
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._leaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[Column(Storage="_rDate", DbType="datetime")]
		public System.Nullable<System.DateTime> RDate
		{
			get
			{
				return this._rDate;
			}
			set
			{
				if ((this._rDate != value))
				{
					this.OnRDateChanging(value);
					this.SendPropertyChanging();
					this._rDate = value;
					this.SendPropertyChanged("RDate");
					this.OnRDateChanged();
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="tinyint NOT NULL")]
		public byte Status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_isCostConfirm", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsCostConfirm
		{
			get
			{
				return this._isCostConfirm;
			}
			set
			{
				if ((this._isCostConfirm != value))
				{
					this.OnIsCostConfirmChanging(value);
					this.SendPropertyChanging();
					this._isCostConfirm = value;
					this.SendPropertyChanged("IsCostConfirm");
					this.OnIsCostConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_isReview", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsReview
		{
			get
			{
				return this._isReview;
			}
			set
			{
				if ((this._isReview != value))
				{
					this.OnIsReviewChanging(value);
					this.SendPropertyChanging();
					this._isReview = value;
					this.SendPropertyChanged("IsReview");
					this.OnIsReviewChanged();
				}
			}
		}
		
		[Column(Storage="_ticketStatus", DbType="tinyint NOT NULL")]
		public byte TicketStatus
		{
			get
			{
				return this._ticketStatus;
			}
			set
			{
				if ((this._ticketStatus != value))
				{
					this.OnTicketStatusChanging(value);
					this.SendPropertyChanging();
					this._ticketStatus = value;
					this.SendPropertyChanged("TicketStatus");
					this.OnTicketStatusChanged();
				}
			}
		}
		
		[Column(Storage="_tourCode", DbType="nvarchar(50)")]
		public string TourCode
		{
			get
			{
				return this._tourCode;
			}
			set
			{
				if ((this._tourCode != value))
				{
					this.OnTourCodeChanging(value);
					this.SendPropertyChanging();
					this._tourCode = value;
					this.SendPropertyChanged("TourCode");
					this.OnTourCodeChanged();
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._routeId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(255)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._routeName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[Column(Storage="_tourDays", DbType="int NOT NULL")]
		public int TourDays
		{
			get
			{
				return this._tourDays;
			}
			set
			{
				if ((this._tourDays != value))
				{
					this.OnTourDaysChanging(value);
					this.SendPropertyChanging();
					this._tourDays = value;
					this.SendPropertyChanged("TourDays");
					this.OnTourDaysChanged();
				}
			}
		}
		
		[Column(Storage="_planPeopleNumber", DbType="int NOT NULL")]
		public int PlanPeopleNumber
		{
			get
			{
				return this._planPeopleNumber;
			}
			set
			{
				if ((this._planPeopleNumber != value))
				{
					this.OnPlanPeopleNumberChanging(value);
					this.SendPropertyChanging();
					this._planPeopleNumber = value;
					this.SendPropertyChanged("PlanPeopleNumber");
					this.OnPlanPeopleNumberChanged();
				}
			}
		}
		
		[Column(Storage="_virtualPeopleNumber", DbType="int NOT NULL")]
		public int VirtualPeopleNumber
		{
			get
			{
				return this._virtualPeopleNumber;
			}
			set
			{
				if ((this._virtualPeopleNumber != value))
				{
					this.OnVirtualPeopleNumberChanging(value);
					this.SendPropertyChanging();
					this._virtualPeopleNumber = value;
					this.SendPropertyChanged("VirtualPeopleNumber");
					this.OnVirtualPeopleNumberChanged();
				}
			}
		}
		
		[Column(Storage="_releaseType", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string ReleaseType
		{
			get
			{
				return this._releaseType;
			}
			set
			{
				if ((this._releaseType != value))
				{
					this.OnReleaseTypeChanging(value);
					this.SendPropertyChanging();
					this._releaseType = value;
					this.SendPropertyChanged("ReleaseType");
					this.OnReleaseTypeChanged();
				}
			}
		}
		
		[Column(Storage="_lTraffic", DbType="nvarchar(255)")]
		public string LTraffic
		{
			get
			{
				return this._lTraffic;
			}
			set
			{
				if ((this._lTraffic != value))
				{
					this.OnLTrafficChanging(value);
					this.SendPropertyChanging();
					this._lTraffic = value;
					this.SendPropertyChanged("LTraffic");
					this.OnLTrafficChanged();
				}
			}
		}
		
		[Column(Storage="_rTraffic", DbType="nvarchar(255)")]
		public string RTraffic
		{
			get
			{
				return this._rTraffic;
			}
			set
			{
				if ((this._rTraffic != value))
				{
					this.OnRTrafficChanging(value);
					this.SendPropertyChanging();
					this._rTraffic = value;
					this.SendPropertyChanged("RTraffic");
					this.OnRTrafficChanged();
				}
			}
		}
		
		[Column(Storage="_gather", DbType="nvarchar(255)")]
		public string Gather
		{
			get
			{
				return this._gather;
			}
			set
			{
				if ((this._gather != value))
				{
					this.OnGatherChanging(value);
					this.SendPropertyChanging();
					this._gather = value;
					this.SendPropertyChanged("Gather");
					this.OnGatherChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_sellerId", DbType="int NOT NULL")]
		public int SellerId
		{
			get
			{
				return this._sellerId;
			}
			set
			{
				if ((this._sellerId != value))
				{
					this.OnSellerIdChanging(value);
					this.SendPropertyChanging();
					this._sellerId = value;
					this.SendPropertyChanged("SellerId");
					this.OnSellerIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[Column(Storage="_lastTime", DbType="datetime NOT NULL")]
		public System.DateTime LastTime
		{
			get
			{
				return this._lastTime;
			}
			set
			{
				if ((this._lastTime != value))
				{
					this.OnLastTimeChanging(value);
					this.SendPropertyChanging();
					this._lastTime = value;
					this.SendPropertyChanged("LastTime");
					this.OnLastTimeChanged();
				}
			}
		}
		
		[Column(Storage="_totalIncome", DbType="money NOT NULL")]
		public decimal TotalIncome
		{
			get
			{
				return this._totalIncome;
			}
			set
			{
				if ((this._totalIncome != value))
				{
					this.OnTotalIncomeChanging(value);
					this.SendPropertyChanging();
					this._totalIncome = value;
					this.SendPropertyChanged("TotalIncome");
					this.OnTotalIncomeChanged();
				}
			}
		}
		
		[Column(Storage="_totalExpenses", DbType="money NOT NULL")]
		public decimal TotalExpenses
		{
			get
			{
				return this._totalExpenses;
			}
			set
			{
				if ((this._totalExpenses != value))
				{
					this.OnTotalExpensesChanging(value);
					this.SendPropertyChanging();
					this._totalExpenses = value;
					this.SendPropertyChanged("TotalExpenses");
					this.OnTotalExpensesChanged();
				}
			}
		}
		
		[Column(Storage="_distributionAmount", DbType="money NOT NULL")]
		public decimal DistributionAmount
		{
			get
			{
				return this._distributionAmount;
			}
			set
			{
				if ((this._distributionAmount != value))
				{
					this.OnDistributionAmountChanging(value);
					this.SendPropertyChanging();
					this._distributionAmount = value;
					this.SendPropertyChanged("DistributionAmount");
					this.OnDistributionAmountChanged();
				}
			}
		}
		
		[Column(Storage="_grossProfit", DbType="money NOT NULL")]
		public decimal GrossProfit
		{
			get
			{
				return this._grossProfit;
			}
			set
			{
				if ((this._grossProfit != value))
				{
					this.OnGrossProfitChanging(value);
					this.SendPropertyChanging();
					this._grossProfit = value;
					this.SendPropertyChanged("GrossProfit");
					this.OnGrossProfitChanged();
				}
			}
		}
		
		[Column(Storage="_isSettleInCome", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsSettleInCome
		{
			get
			{
				return this._isSettleInCome;
			}
			set
			{
				if ((this._isSettleInCome != value))
				{
					this.OnIsSettleInComeChanging(value);
					this.SendPropertyChanging();
					this._isSettleInCome = value;
					this.SendPropertyChanged("IsSettleInCome");
					this.OnIsSettleInComeChanged();
				}
			}
		}
		
		[Column(Storage="_isSettleOut", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsSettleOut
		{
			get
			{
				return this._isSettleOut;
			}
			set
			{
				if ((this._isSettleOut != value))
				{
					this.OnIsSettleOutChanging(value);
					this.SendPropertyChanging();
					this._isSettleOut = value;
					this.SendPropertyChanged("IsSettleOut");
					this.OnIsSettleOutChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_endDateTime", DbType="datetime")]
		public System.Nullable<System.DateTime> EndDateTime
		{
			get
			{
				return this._endDateTime;
			}
			set
			{
				if ((this._endDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._endDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_totalOtherIncome", DbType="money NOT NULL")]
		public decimal TotalOtherIncome
		{
			get
			{
				return this._totalOtherIncome;
			}
			set
			{
				if ((this._totalOtherIncome != value))
				{
					this.OnTotalOtherIncomeChanging(value);
					this.SendPropertyChanging();
					this._totalOtherIncome = value;
					this.SendPropertyChanged("TotalOtherIncome");
					this.OnTotalOtherIncomeChanged();
				}
			}
		}
		
		[Column(Storage="_totalOtherExpenses", DbType="money NOT NULL")]
		public decimal TotalOtherExpenses
		{
			get
			{
				return this._totalOtherExpenses;
			}
			set
			{
				if ((this._totalOtherExpenses != value))
				{
					this.OnTotalOtherExpensesChanging(value);
					this.SendPropertyChanging();
					this._totalOtherExpenses = value;
					this.SendPropertyChanged("TotalOtherExpenses");
					this.OnTotalOtherExpensesChanged();
				}
			}
		}
		
		[Column(Storage="_totalOutAmount", DbType="money NOT NULL")]
		public decimal TotalOutAmount
		{
			get
			{
				return this._totalOutAmount;
			}
			set
			{
				if ((this._totalOutAmount != value))
				{
					this.OnTotalOutAmountChanging(value);
					this.SendPropertyChanging();
					this._totalOutAmount = value;
					this.SendPropertyChanged("TotalOutAmount");
					this.OnTotalOutAmountChanged();
				}
			}
		}
		
		[Column(Storage="_isLeave", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsLeave
		{
			get
			{
				return this._isLeave;
			}
			set
			{
				if ((this._isLeave != value))
				{
					this.OnIsLeaveChanging(value);
					this.SendPropertyChanging();
					this._isLeave = value;
					this.SendPropertyChanged("IsLeave");
					this.OnIsLeaveChanged();
				}
			}
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._quoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[Column(Name="PKID", Storage="_pkid", AutoSync=AutoSync.Always, DbType="int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Pkid
		{
			get
			{
				return this._pkid;
			}
			set
			{
				if ((this._pkid != value))
				{
					this.OnPkidChanging(value);
					this.SendPropertyChanging();
					this._pkid = value;
					this.SendPropertyChanged("Pkid");
					this.OnPkidChanged();
				}
			}
		}
		
		[Column(Storage="_gatheringTime", DbType="nvarchar(255)")]
		public string GatheringTime
		{
			get
			{
				return this._gatheringTime;
			}
			set
			{
				if ((this._gatheringTime != value))
				{
					this.OnGatheringTimeChanging(value);
					this.SendPropertyChanging();
					this._gatheringTime = value;
					this.SendPropertyChanged("GatheringTime");
					this.OnGatheringTimeChanged();
				}
			}
		}
		
		[Column(Storage="_gatheringPlace", DbType="nvarchar(255)")]
		public string GatheringPlace
		{
			get
			{
				return this._gatheringPlace;
			}
			set
			{
				if ((this._gatheringPlace != value))
				{
					this.OnGatheringPlaceChanging(value);
					this.SendPropertyChanging();
					this._gatheringPlace = value;
					this.SendPropertyChanged("GatheringPlace");
					this.OnGatheringPlaceChanged();
				}
			}
		}
		
		[Column(Storage="_gatheringSign", DbType="nvarchar(255)")]
		public string GatheringSign
		{
			get
			{
				return this._gatheringSign;
			}
			set
			{
				if ((this._gatheringSign != value))
				{
					this.OnGatheringSignChanging(value);
					this.SendPropertyChanging();
					this._gatheringSign = value;
					this.SendPropertyChanged("GatheringSign");
					this.OnGatheringSignChanged();
				}
			}
		}
		
		[Association(Name="Tour_PlanSingle", Storage="_planSingleList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<PlanSingle> PlanSingleList
		{
			get
			{
				return this._planSingleList;
			}
			set
			{
				this._planSingleList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourAttach", Storage="_tourAttachList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourAttach> TourAttachList
		{
			get
			{
				return this._tourAttachList;
			}
			set
			{
				this._tourAttachList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourCity", Storage="_tourCityList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourCity> TourCityList
		{
			get
			{
				return this._tourCityList;
			}
			set
			{
				this._tourCityList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourCreateRule", Storage="_tourCreateRule", ThisKey="TourId", OtherKey="TourId", IsUnique=true, IsForeignKey=false)]
		public TourCreateRule TourCreateRule
		{
			get
			{
				return this._tourCreateRule.Entity;
			}
			set
			{
				TourCreateRule previousValue = this._tourCreateRule.Entity;
				if (((previousValue != value) 
							|| (this._tourCreateRule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tourCreateRule.Entity = null;
						previousValue.Tour = null;
					}
					this._tourCreateRule.Entity = value;
					if ((value != null))
					{
						value.Tour = this;
					}
					this.SendPropertyChanged("TourCreateRule");
				}
			}
		}
		
		[Association(Name="Tour_TourLocalAgency", Storage="_tourLocalAgencyList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourLocalAgency> TourLocalAgencyList
		{
			get
			{
				return this._tourLocalAgencyList;
			}
			set
			{
				this._tourLocalAgencyList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourOperator", Storage="_tourOperatorList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourOperator> TourOperatorList
		{
			get
			{
				return this._tourOperatorList;
			}
			set
			{
				this._tourOperatorList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourPlan", Storage="_tourPlanList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourPlan> TourPlanList
		{
			get
			{
				return this._tourPlanList;
			}
			set
			{
				this._tourPlanList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourPrice", Storage="_tourPriceList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourPrice> TourPriceList
		{
			get
			{
				return this._tourPriceList;
			}
			set
			{
				this._tourPriceList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourQuickPlan", Storage="_tourQuickPlan", ThisKey="TourId", OtherKey="TourId", IsUnique=true, IsForeignKey=false)]
		public TourQuickPlan TourQuickPlan
		{
			get
			{
				return this._tourQuickPlan.Entity;
			}
			set
			{
				TourQuickPlan previousValue = this._tourQuickPlan.Entity;
				if (((previousValue != value) 
							|| (this._tourQuickPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tourQuickPlan.Entity = null;
						previousValue.Tour = null;
					}
					this._tourQuickPlan.Entity = value;
					if ((value != null))
					{
						value.Tour = this;
					}
					this.SendPropertyChanged("TourQuickPlan");
				}
			}
		}
		
		[Association(Name="Tour_TourSentTask", Storage="_tourSentTaskList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourSentTask> TourSentTaskList
		{
			get
			{
				return this._tourSentTaskList;
			}
			set
			{
				this._tourSentTaskList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourService", Storage="_tourServiceList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourService> TourServiceList
		{
			get
			{
				return this._tourServiceList;
			}
			set
			{
				this._tourServiceList.Assign(value);
			}
		}
		
		[Association(Name="Tour_TourTeamPrice", Storage="_tourTeamPriceList", ThisKey="TourId", OtherKey="TourId")]
		public EntitySet<TourTeamPrice> TourTeamPriceList
		{
			get
			{
				return this._tourTeamPriceList;
			}
			set
			{
				this._tourTeamPriceList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_planSingleList(PlanSingle entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_planSingleList(PlanSingle entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourAttachList(TourAttach entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourAttachList(TourAttach entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourCityList(TourCity entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourCityList(TourCity entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourLocalAgencyList(TourLocalAgency entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourLocalAgencyList(TourLocalAgency entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourOperatorList(TourOperator entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourOperatorList(TourOperator entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourPlanList(TourPlan entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourPlanList(TourPlan entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourPriceList(TourPrice entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourPriceList(TourPrice entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourSentTaskList(TourSentTask entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourSentTaskList(TourSentTask entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourServiceList(TourService entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourServiceList(TourService entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_tourTeamPriceList(TourTeamPrice entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_tourTeamPriceList(TourTeamPrice entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
	}
	
	[Table(Name="dbo.tbl_TourAttach")]
	public partial class TourAttach : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _attachId;
		
		private string _tourId;
		
		private string _filePath;
		
		private string _name;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachIdChanging(int value);
    partial void OnAttachIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TourAttach()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_attachId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttachId
		{
			get
			{
				return this._attachId;
			}
			set
			{
				if ((this._attachId != value))
				{
					this.OnAttachIdChanging(value);
					this.SendPropertyChanging();
					this._attachId = value;
					this.SendPropertyChanged("AttachId");
					this.OnAttachIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36)")]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="nvarchar(255)")]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourAttach", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourAttachList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourAttachList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourCity")]
	public partial class TourCity : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private int _cityId;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    #endregion
		
		public TourCity()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_cityId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int CityId
		{
			get
			{
				return this._cityId;
			}
			set
			{
				if ((this._cityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._cityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourCity", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourCityList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourCityList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourCreateRule")]
	public partial class TourCreateRule : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private byte _ruleType;
		
		private System.Nullable<System.DateTime> _sDate;
		
		private System.Nullable<System.DateTime> _eDate;
		
		private string _cycle;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnRuleTypeChanging(byte value);
    partial void OnRuleTypeChanged();
    partial void OnSDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSDateChanged();
    partial void OnEDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEDateChanged();
    partial void OnCycleChanging(string value);
    partial void OnCycleChanged();
    #endregion
		
		public TourCreateRule()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_ruleType", DbType="tinyint NOT NULL")]
		public byte RuleType
		{
			get
			{
				return this._ruleType;
			}
			set
			{
				if ((this._ruleType != value))
				{
					this.OnRuleTypeChanging(value);
					this.SendPropertyChanging();
					this._ruleType = value;
					this.SendPropertyChanged("RuleType");
					this.OnRuleTypeChanged();
				}
			}
		}
		
		[Column(Storage="_sDate", DbType="datetime")]
		public System.Nullable<System.DateTime> SDate
		{
			get
			{
				return this._sDate;
			}
			set
			{
				if ((this._sDate != value))
				{
					this.OnSDateChanging(value);
					this.SendPropertyChanging();
					this._sDate = value;
					this.SendPropertyChanged("SDate");
					this.OnSDateChanged();
				}
			}
		}
		
		[Column(Storage="_eDate", DbType="datetime")]
		public System.Nullable<System.DateTime> EDate
		{
			get
			{
				return this._eDate;
			}
			set
			{
				if ((this._eDate != value))
				{
					this.OnEDateChanging(value);
					this.SendPropertyChanging();
					this._eDate = value;
					this.SendPropertyChanged("EDate");
					this.OnEDateChanged();
				}
			}
		}
		
		[Column(Storage="_cycle", DbType="nvarchar(255)")]
		public string Cycle
		{
			get
			{
				return this._cycle;
			}
			set
			{
				if ((this._cycle != value))
				{
					this.OnCycleChanging(value);
					this.SendPropertyChanging();
					this._cycle = value;
					this.SendPropertyChanged("Cycle");
					this.OnCycleChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourCreateRule", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourCreateRule = null;
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourCreateRule = this;
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourEveryday")]
	public partial class TourEveryday : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private int _companyId;
		
		private int _areaId;
		
		private string _routeName;
		
		private int _routeId;
		
		private int _tourDays;
		
		private int _handleNumber;
		
		private int _untreatedNumber;
		
		private int _operatorId;
		
		private byte _releaseType;
		
		private System.DateTime _createTime;
		
		private string _isDelete;
		
		private System.DateTime _lastTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnRouteIdChanging(int value);
    partial void OnRouteIdChanged();
    partial void OnTourDaysChanging(int value);
    partial void OnTourDaysChanged();
    partial void OnHandleNumberChanging(int value);
    partial void OnHandleNumberChanged();
    partial void OnUntreatedNumberChanging(int value);
    partial void OnUntreatedNumberChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnReleaseTypeChanging(byte value);
    partial void OnReleaseTypeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnLastTimeChanging(System.DateTime value);
    partial void OnLastTimeChanged();
    #endregion
		
		public TourEveryday()
		{
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(255)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._routeName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._routeId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourDays", DbType="int NOT NULL")]
		public int TourDays
		{
			get
			{
				return this._tourDays;
			}
			set
			{
				if ((this._tourDays != value))
				{
					this.OnTourDaysChanging(value);
					this.SendPropertyChanging();
					this._tourDays = value;
					this.SendPropertyChanged("TourDays");
					this.OnTourDaysChanged();
				}
			}
		}
		
		[Column(Storage="_handleNumber", DbType="int NOT NULL")]
		public int HandleNumber
		{
			get
			{
				return this._handleNumber;
			}
			set
			{
				if ((this._handleNumber != value))
				{
					this.OnHandleNumberChanging(value);
					this.SendPropertyChanging();
					this._handleNumber = value;
					this.SendPropertyChanged("HandleNumber");
					this.OnHandleNumberChanged();
				}
			}
		}
		
		[Column(Storage="_untreatedNumber", DbType="int NOT NULL")]
		public int UntreatedNumber
		{
			get
			{
				return this._untreatedNumber;
			}
			set
			{
				if ((this._untreatedNumber != value))
				{
					this.OnUntreatedNumberChanging(value);
					this.SendPropertyChanging();
					this._untreatedNumber = value;
					this.SendPropertyChanged("UntreatedNumber");
					this.OnUntreatedNumberChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_releaseType", DbType="tinyint NOT NULL")]
		public byte ReleaseType
		{
			get
			{
				return this._releaseType;
			}
			set
			{
				if ((this._releaseType != value))
				{
					this.OnReleaseTypeChanging(value);
					this.SendPropertyChanging();
					this._releaseType = value;
					this.SendPropertyChanged("ReleaseType");
					this.OnReleaseTypeChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_lastTime", DbType="datetime NOT NULL")]
		public System.DateTime LastTime
		{
			get
			{
				return this._lastTime;
			}
			set
			{
				if ((this._lastTime != value))
				{
					this.OnLastTimeChanging(value);
					this.SendPropertyChanging();
					this._lastTime = value;
					this.SendPropertyChanged("LastTime");
					this.OnLastTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourEverydayApply")]
	public partial class TourEverydayApply : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _applyId;
		
		private string _tourId;
		
		private int _applyCompanyId;
		
		private int _companyId;
		
		private System.DateTime _lDate;
		
		private int _adultNumber;
		
		private int _childrenNumber;
		
		private int _standard;
		
		private int _levelId;
		
		private string _specialRequirement;
		
		private byte _customerDisplayType;
		
		private string _customerFilePath;
		
		private int _operatorId;
		
		private System.DateTime _applyTime;
		
		private byte _handleStatus;
		
		private System.Nullable<int> _handleOperatorId;
		
		private System.Nullable<System.DateTime> _handleTime;
		
		private string _buildTourId;
		
		private EntitySet<TourEverydayApplyTraveller> _tourEverydayApplyTravellerList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplyIdChanging(string value);
    partial void OnApplyIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnApplyCompanyIdChanging(int value);
    partial void OnApplyCompanyIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnLDateChanging(System.DateTime value);
    partial void OnLDateChanged();
    partial void OnAdultNumberChanging(int value);
    partial void OnAdultNumberChanged();
    partial void OnChildrenNumberChanging(int value);
    partial void OnChildrenNumberChanged();
    partial void OnStandardChanging(int value);
    partial void OnStandardChanged();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnSpecialRequirementChanging(string value);
    partial void OnSpecialRequirementChanged();
    partial void OnCustomerDisplayTypeChanging(byte value);
    partial void OnCustomerDisplayTypeChanged();
    partial void OnCustomerFilePathChanging(string value);
    partial void OnCustomerFilePathChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnApplyTimeChanging(System.DateTime value);
    partial void OnApplyTimeChanged();
    partial void OnHandleStatusChanging(byte value);
    partial void OnHandleStatusChanged();
    partial void OnHandleOperatorIdChanging(System.Nullable<int> value);
    partial void OnHandleOperatorIdChanged();
    partial void OnHandleTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnHandleTimeChanged();
    partial void OnBuildTourIdChanging(string value);
    partial void OnBuildTourIdChanged();
    #endregion
		
		public TourEverydayApply()
		{
			this._tourEverydayApplyTravellerList = new EntitySet<TourEverydayApplyTraveller>(new Action<TourEverydayApplyTraveller>(this.attach_tourEverydayApplyTravellerList), new Action<TourEverydayApplyTraveller>(this.detach_tourEverydayApplyTravellerList));
			OnCreated();
		}
		
		[Column(Storage="_applyId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplyId
		{
			get
			{
				return this._applyId;
			}
			set
			{
				if ((this._applyId != value))
				{
					this.OnApplyIdChanging(value);
					this.SendPropertyChanging();
					this._applyId = value;
					this.SendPropertyChanged("ApplyId");
					this.OnApplyIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_applyCompanyId", DbType="int NOT NULL")]
		public int ApplyCompanyId
		{
			get
			{
				return this._applyCompanyId;
			}
			set
			{
				if ((this._applyCompanyId != value))
				{
					this.OnApplyCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._applyCompanyId = value;
					this.SendPropertyChanged("ApplyCompanyId");
					this.OnApplyCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_lDate", DbType="datetime NOT NULL")]
		public System.DateTime LDate
		{
			get
			{
				return this._lDate;
			}
			set
			{
				if ((this._lDate != value))
				{
					this.OnLDateChanging(value);
					this.SendPropertyChanging();
					this._lDate = value;
					this.SendPropertyChanged("LDate");
					this.OnLDateChanged();
				}
			}
		}
		
		[Column(Storage="_adultNumber", DbType="int NOT NULL")]
		public int AdultNumber
		{
			get
			{
				return this._adultNumber;
			}
			set
			{
				if ((this._adultNumber != value))
				{
					this.OnAdultNumberChanging(value);
					this.SendPropertyChanging();
					this._adultNumber = value;
					this.SendPropertyChanged("AdultNumber");
					this.OnAdultNumberChanged();
				}
			}
		}
		
		[Column(Storage="_childrenNumber", DbType="int NOT NULL")]
		public int ChildrenNumber
		{
			get
			{
				return this._childrenNumber;
			}
			set
			{
				if ((this._childrenNumber != value))
				{
					this.OnChildrenNumberChanging(value);
					this.SendPropertyChanging();
					this._childrenNumber = value;
					this.SendPropertyChanged("ChildrenNumber");
					this.OnChildrenNumberChanged();
				}
			}
		}
		
		[Column(Storage="_standard", DbType="int NOT NULL")]
		public int Standard
		{
			get
			{
				return this._standard;
			}
			set
			{
				if ((this._standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[Column(Storage="_levelId", DbType="int NOT NULL")]
		public int LevelId
		{
			get
			{
				return this._levelId;
			}
			set
			{
				if ((this._levelId != value))
				{
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._levelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[Column(Storage="_specialRequirement", DbType="nvarchar(MAX)")]
		public string SpecialRequirement
		{
			get
			{
				return this._specialRequirement;
			}
			set
			{
				if ((this._specialRequirement != value))
				{
					this.OnSpecialRequirementChanging(value);
					this.SendPropertyChanging();
					this._specialRequirement = value;
					this.SendPropertyChanged("SpecialRequirement");
					this.OnSpecialRequirementChanged();
				}
			}
		}
		
		[Column(Storage="_customerDisplayType", DbType="tinyint NOT NULL")]
		public byte CustomerDisplayType
		{
			get
			{
				return this._customerDisplayType;
			}
			set
			{
				if ((this._customerDisplayType != value))
				{
					this.OnCustomerDisplayTypeChanging(value);
					this.SendPropertyChanging();
					this._customerDisplayType = value;
					this.SendPropertyChanged("CustomerDisplayType");
					this.OnCustomerDisplayTypeChanged();
				}
			}
		}
		
		[Column(Storage="_customerFilePath", DbType="nvarchar(255)")]
		public string CustomerFilePath
		{
			get
			{
				return this._customerFilePath;
			}
			set
			{
				if ((this._customerFilePath != value))
				{
					this.OnCustomerFilePathChanging(value);
					this.SendPropertyChanging();
					this._customerFilePath = value;
					this.SendPropertyChanged("CustomerFilePath");
					this.OnCustomerFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_applyTime", DbType="datetime NOT NULL")]
		public System.DateTime ApplyTime
		{
			get
			{
				return this._applyTime;
			}
			set
			{
				if ((this._applyTime != value))
				{
					this.OnApplyTimeChanging(value);
					this.SendPropertyChanging();
					this._applyTime = value;
					this.SendPropertyChanged("ApplyTime");
					this.OnApplyTimeChanged();
				}
			}
		}
		
		[Column(Storage="_handleStatus", DbType="tinyint NOT NULL")]
		public byte HandleStatus
		{
			get
			{
				return this._handleStatus;
			}
			set
			{
				if ((this._handleStatus != value))
				{
					this.OnHandleStatusChanging(value);
					this.SendPropertyChanging();
					this._handleStatus = value;
					this.SendPropertyChanged("HandleStatus");
					this.OnHandleStatusChanged();
				}
			}
		}
		
		[Column(Storage="_handleOperatorId", DbType="int")]
		public System.Nullable<int> HandleOperatorId
		{
			get
			{
				return this._handleOperatorId;
			}
			set
			{
				if ((this._handleOperatorId != value))
				{
					this.OnHandleOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._handleOperatorId = value;
					this.SendPropertyChanged("HandleOperatorId");
					this.OnHandleOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_handleTime", DbType="datetime")]
		public System.Nullable<System.DateTime> HandleTime
		{
			get
			{
				return this._handleTime;
			}
			set
			{
				if ((this._handleTime != value))
				{
					this.OnHandleTimeChanging(value);
					this.SendPropertyChanging();
					this._handleTime = value;
					this.SendPropertyChanged("HandleTime");
					this.OnHandleTimeChanged();
				}
			}
		}
		
		[Column(Storage="_buildTourId", DbType="char(36)")]
		public string BuildTourId
		{
			get
			{
				return this._buildTourId;
			}
			set
			{
				if ((this._buildTourId != value))
				{
					this.OnBuildTourIdChanging(value);
					this.SendPropertyChanging();
					this._buildTourId = value;
					this.SendPropertyChanged("BuildTourId");
					this.OnBuildTourIdChanged();
				}
			}
		}
		
		[Association(Name="TourEverydayApply_TourEverydayApplyTraveller", Storage="_tourEverydayApplyTravellerList", ThisKey="ApplyId", OtherKey="ApplyId")]
		public EntitySet<TourEverydayApplyTraveller> TourEverydayApplyTravellerList
		{
			get
			{
				return this._tourEverydayApplyTravellerList;
			}
			set
			{
				this._tourEverydayApplyTravellerList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tourEverydayApplyTravellerList(TourEverydayApplyTraveller entity)
		{
			this.SendPropertyChanging();
			entity.TourEverydayApply = this;
		}
		
		private void detach_tourEverydayApplyTravellerList(TourEverydayApplyTraveller entity)
		{
			this.SendPropertyChanging();
			entity.TourEverydayApply = null;
		}
	}
	
	[Table(Name="dbo.tbl_TourEverydayApplyTraveller")]
	public partial class TourEverydayApplyTraveller : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _travellerId;
		
		private string _applyId;
		
		private string _travellerName;
		
		private System.Nullable<byte> _certificateType;
		
		private string _certificateCode;
		
		private byte _gender;
		
		private byte _travellerType;
		
		private string _telephone;
		
		private System.DateTime _createTime;
		
		private EntityRef<TourEverydayApply> _tourEverydayApply;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTravellerIdChanging(string value);
    partial void OnTravellerIdChanged();
    partial void OnApplyIdChanging(string value);
    partial void OnApplyIdChanged();
    partial void OnTravellerNameChanging(string value);
    partial void OnTravellerNameChanged();
    partial void OnCertificateTypeChanging(System.Nullable<byte> value);
    partial void OnCertificateTypeChanged();
    partial void OnCertificateCodeChanging(string value);
    partial void OnCertificateCodeChanged();
    partial void OnGenderChanging(byte value);
    partial void OnGenderChanged();
    partial void OnTravellerTypeChanging(byte value);
    partial void OnTravellerTypeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public TourEverydayApplyTraveller()
		{
			this._tourEverydayApply = default(EntityRef<TourEverydayApply>);
			OnCreated();
		}
		
		[Column(Storage="_travellerId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TravellerId
		{
			get
			{
				return this._travellerId;
			}
			set
			{
				if ((this._travellerId != value))
				{
					this.OnTravellerIdChanging(value);
					this.SendPropertyChanging();
					this._travellerId = value;
					this.SendPropertyChanged("TravellerId");
					this.OnTravellerIdChanged();
				}
			}
		}
		
		[Column(Storage="_applyId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string ApplyId
		{
			get
			{
				return this._applyId;
			}
			set
			{
				if ((this._applyId != value))
				{
					if (this._tourEverydayApply.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyIdChanging(value);
					this.SendPropertyChanging();
					this._applyId = value;
					this.SendPropertyChanged("ApplyId");
					this.OnApplyIdChanged();
				}
			}
		}
		
		[Column(Storage="_travellerName", DbType="nvarchar(255)")]
		public string TravellerName
		{
			get
			{
				return this._travellerName;
			}
			set
			{
				if ((this._travellerName != value))
				{
					this.OnTravellerNameChanging(value);
					this.SendPropertyChanging();
					this._travellerName = value;
					this.SendPropertyChanged("TravellerName");
					this.OnTravellerNameChanged();
				}
			}
		}
		
		[Column(Storage="_certificateType", DbType="tinyint")]
		public System.Nullable<byte> CertificateType
		{
			get
			{
				return this._certificateType;
			}
			set
			{
				if ((this._certificateType != value))
				{
					this.OnCertificateTypeChanging(value);
					this.SendPropertyChanging();
					this._certificateType = value;
					this.SendPropertyChanged("CertificateType");
					this.OnCertificateTypeChanged();
				}
			}
		}
		
		[Column(Storage="_certificateCode", DbType="nvarchar(255)")]
		public string CertificateCode
		{
			get
			{
				return this._certificateCode;
			}
			set
			{
				if ((this._certificateCode != value))
				{
					this.OnCertificateCodeChanging(value);
					this.SendPropertyChanging();
					this._certificateCode = value;
					this.SendPropertyChanged("CertificateCode");
					this.OnCertificateCodeChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="tinyint NOT NULL")]
		public byte Gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[Column(Storage="_travellerType", DbType="tinyint NOT NULL")]
		public byte TravellerType
		{
			get
			{
				return this._travellerType;
			}
			set
			{
				if ((this._travellerType != value))
				{
					this.OnTravellerTypeChanging(value);
					this.SendPropertyChanging();
					this._travellerType = value;
					this.SendPropertyChanged("TravellerType");
					this.OnTravellerTypeChanged();
				}
			}
		}
		
		[Column(Storage="_telephone", DbType="nvarchar(255)")]
		public string Telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Association(Name="TourEverydayApply_TourEverydayApplyTraveller", Storage="_tourEverydayApply", ThisKey="ApplyId", OtherKey="ApplyId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TourEverydayApply TourEverydayApply
		{
			get
			{
				return this._tourEverydayApply.Entity;
			}
			set
			{
				TourEverydayApply previousValue = this._tourEverydayApply.Entity;
				if (((previousValue != value) 
							|| (this._tourEverydayApply.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tourEverydayApply.Entity = null;
						previousValue.TourEverydayApplyTravellerList.Remove(this);
					}
					this._tourEverydayApply.Entity = value;
					if ((value != null))
					{
						value.TourEverydayApplyTravellerList.Add(this);
						this._applyId = value.ApplyId;
					}
					else
					{
						this._applyId = default(string);
					}
					this.SendPropertyChanged("TourEverydayApply");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourEverydayAttach")]
	public partial class TourEverydayAttach : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _attachId;
		
		private string _tourId;
		
		private string _filePath;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachIdChanging(int value);
    partial void OnAttachIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TourEverydayAttach()
		{
			OnCreated();
		}
		
		[Column(Storage="_attachId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttachId
		{
			get
			{
				return this._attachId;
			}
			set
			{
				if ((this._attachId != value))
				{
					this.OnAttachIdChanging(value);
					this.SendPropertyChanging();
					this._attachId = value;
					this.SendPropertyChanged("AttachId");
					this.OnAttachIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36)")]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="nvarchar(255)")]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourEverydayPlan")]
	public partial class TourEverydayPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _planId;
		
		private string _tourId;
		
		private string _interval;
		
		private string _vehicle;
		
		private string _hotel;
		
		private string _dinner;
		
		private string _plan;
		
		private string _filePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanIdChanging(int value);
    partial void OnPlanIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnIntervalChanging(string value);
    partial void OnIntervalChanged();
    partial void OnVehicleChanging(string value);
    partial void OnVehicleChanged();
    partial void OnHotelChanging(string value);
    partial void OnHotelChanged();
    partial void OnDinnerChanging(string value);
    partial void OnDinnerChanged();
    partial void OnPlanChanging(string value);
    partial void OnPlanChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    #endregion
		
		public TourEverydayPlan()
		{
			OnCreated();
		}
		
		[Column(Storage="_planId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlanId
		{
			get
			{
				return this._planId;
			}
			set
			{
				if ((this._planId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._planId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_interval", DbType="nvarchar(255)")]
		public string Interval
		{
			get
			{
				return this._interval;
			}
			set
			{
				if ((this._interval != value))
				{
					this.OnIntervalChanging(value);
					this.SendPropertyChanging();
					this._interval = value;
					this.SendPropertyChanged("Interval");
					this.OnIntervalChanged();
				}
			}
		}
		
		[Column(Storage="_vehicle", DbType="nvarchar(255)")]
		public string Vehicle
		{
			get
			{
				return this._vehicle;
			}
			set
			{
				if ((this._vehicle != value))
				{
					this.OnVehicleChanging(value);
					this.SendPropertyChanging();
					this._vehicle = value;
					this.SendPropertyChanged("Vehicle");
					this.OnVehicleChanged();
				}
			}
		}
		
		[Column(Storage="_hotel", DbType="nvarchar(255)")]
		public string Hotel
		{
			get
			{
				return this._hotel;
			}
			set
			{
				if ((this._hotel != value))
				{
					this.OnHotelChanging(value);
					this.SendPropertyChanging();
					this._hotel = value;
					this.SendPropertyChanged("Hotel");
					this.OnHotelChanged();
				}
			}
		}
		
		[Column(Storage="_dinner", DbType="nvarchar(255)")]
		public string Dinner
		{
			get
			{
				return this._dinner;
			}
			set
			{
				if ((this._dinner != value))
				{
					this.OnDinnerChanging(value);
					this.SendPropertyChanging();
					this._dinner = value;
					this.SendPropertyChanged("Dinner");
					this.OnDinnerChanged();
				}
			}
		}
		
		[Column(Storage="_plan", DbType="nvarchar(MAX)")]
		public string Plan
		{
			get
			{
				return this._plan;
			}
			set
			{
				if ((this._plan != value))
				{
					this.OnPlanChanging(value);
					this.SendPropertyChanging();
					this._plan = value;
					this.SendPropertyChanged("Plan");
					this.OnPlanChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourEverydayPrice")]
	public partial class TourEverydayPrice : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tourId;
		
		private int _standard;
		
		private int _levelId;
		
		private decimal _adultPrice;
		
		private decimal _childPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnStandardChanging(int value);
    partial void OnStandardChanged();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnAdultPriceChanging(decimal value);
    partial void OnAdultPriceChanged();
    partial void OnChildPriceChanging(decimal value);
    partial void OnChildPriceChanged();
    #endregion
		
		public TourEverydayPrice()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_standard", DbType="int NOT NULL")]
		public int Standard
		{
			get
			{
				return this._standard;
			}
			set
			{
				if ((this._standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[Column(Storage="_levelId", DbType="int NOT NULL")]
		public int LevelId
		{
			get
			{
				return this._levelId;
			}
			set
			{
				if ((this._levelId != value))
				{
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._levelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[Column(Storage="_adultPrice", DbType="money NOT NULL")]
		public decimal AdultPrice
		{
			get
			{
				return this._adultPrice;
			}
			set
			{
				if ((this._adultPrice != value))
				{
					this.OnAdultPriceChanging(value);
					this.SendPropertyChanging();
					this._adultPrice = value;
					this.SendPropertyChanged("AdultPrice");
					this.OnAdultPriceChanged();
				}
			}
		}
		
		[Column(Storage="_childPrice", DbType="money NOT NULL")]
		public decimal ChildPrice
		{
			get
			{
				return this._childPrice;
			}
			set
			{
				if ((this._childPrice != value))
				{
					this.OnChildPriceChanging(value);
					this.SendPropertyChanging();
					this._childPrice = value;
					this.SendPropertyChanged("ChildPrice");
					this.OnChildPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourEverydayQuickPlan")]
	public partial class TourEverydayQuickPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private string _plan;
		
		private string _service;
		
		private string _remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnPlanChanging(string value);
    partial void OnPlanChanged();
    partial void OnServiceChanging(string value);
    partial void OnServiceChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TourEverydayQuickPlan()
		{
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_plan", DbType="nvarchar(MAX)")]
		public string Plan
		{
			get
			{
				return this._plan;
			}
			set
			{
				if ((this._plan != value))
				{
					this.OnPlanChanging(value);
					this.SendPropertyChanging();
					this._plan = value;
					this.SendPropertyChanged("Plan");
					this.OnPlanChanged();
				}
			}
		}
		
		[Column(Storage="_service", DbType="nvarchar(MAX)")]
		public string Service
		{
			get
			{
				return this._service;
			}
			set
			{
				if ((this._service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourEverydayService")]
	public partial class TourEverydayService : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tourId;
		
		private string _key;
		
		private string _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public TourEverydayService()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_key", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[Column(Storage="_value", DbType="nvarchar(MAX)")]
		public string Value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourLocalAgency")]
	public partial class TourLocalAgency : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tourId;
		
		private System.Nullable<int> _agencyId;
		
		private string _name;
		
		private string _licenseNo;
		
		private string _telephone;
		
		private string _contacterName;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnAgencyIdChanging(System.Nullable<int> value);
    partial void OnAgencyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLicenseNoChanging(string value);
    partial void OnLicenseNoChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnContacterNameChanging(string value);
    partial void OnContacterNameChanged();
    #endregion
		
		public TourLocalAgency()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36)")]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_agencyId", DbType="int")]
		public System.Nullable<int> AgencyId
		{
			get
			{
				return this._agencyId;
			}
			set
			{
				if ((this._agencyId != value))
				{
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._agencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="nvarchar(255)")]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_licenseNo", DbType="nvarchar(255)")]
		public string LicenseNo
		{
			get
			{
				return this._licenseNo;
			}
			set
			{
				if ((this._licenseNo != value))
				{
					this.OnLicenseNoChanging(value);
					this.SendPropertyChanging();
					this._licenseNo = value;
					this.SendPropertyChanged("LicenseNo");
					this.OnLicenseNoChanged();
				}
			}
		}
		
		[Column(Storage="_telephone", DbType="nvarchar(255)")]
		public string Telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[Column(Storage="_contacterName", DbType="nvarchar(255)")]
		public string ContacterName
		{
			get
			{
				return this._contacterName;
			}
			set
			{
				if ((this._contacterName != value))
				{
					this.OnContacterNameChanging(value);
					this.SendPropertyChanging();
					this._contacterName = value;
					this.SendPropertyChanged("ContacterName");
					this.OnContacterNameChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourLocalAgency", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourLocalAgencyList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourLocalAgencyList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourOperator")]
	public partial class TourOperator : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private int _operatorId;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    #endregion
		
		public TourOperator()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourOperator", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourOperatorList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourOperatorList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourOrder")]
	public partial class TourOrder : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _orderNo;
		
		private string _tourId;
		
		private int _areaId;
		
		private int _routeId;
		
		private string _routeName;
		
		private string _tourNo;
		
		private byte _tourClassId;
		
		private System.DateTime _leaveDate;
		
		private string _leaveTraffic;
		
		private string _returnTraffic;
		
		private byte _orderType;
		
		private byte _orderState;
		
		private int _buyCompanyID;
		
		private string _buyCompanyName;
		
		private string _contactName;
		
		private string _contactTel;
		
		private string _contactMobile;
		
		private string _contactFax;
		
		private string _salerName;
		
		private int _salerId;
		
		private string _operatorName;
		
		private int _operatorID;
		
		private int _priceStandId;
		
		private decimal _personalPrice;
		
		private decimal _childPrice;
		
		private decimal _marketPrice;
		
		private int _adultNumber;
		
		private int _childNumber;
		
		private int _marketNumber;
		
		private int _peopleNumber;
		
		private decimal _otherPrice;
		
		private System.DateTime _saveSeatDate;
		
		private string _operatorContent;
		
		private string _specialContent;
		
		private decimal _sumPrice;
		
		private string _sellCompanyName;
		
		private int _sellCompanyId;
		
		private System.DateTime _lastDate;
		
		private int _lastOperatorID;
		
		private System.Nullable<System.DateTime> _successTime;
		
		private decimal _financeAddExpense;
		
		private decimal _financeRedExpense;
		
		private decimal _financeSum;
		
		private string _financeRemark;
		
		private decimal _hasCheckMoney;
		
		private decimal _notCheckMoney;
		
		private System.DateTime _issueTime;
		
		private string _isDelete;
		
		private int _viewOperatorId;
		
		private byte _customerDisplayType;
		
		private string _customerFilePath;
		
		private int _leaguePepoleNum;
		
		private int _tourDays;
		
		private int _customerLevId;
		
		private EntitySet<ReceiveRefund> _itemReceiveRefundList;
		
		private EntitySet<TourOrderCustomer> _orderTourOrderCustomerList;
		
		private EntityRef<TourOrderPlus> _orderTourOrderPlus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnRouteIdChanging(int value);
    partial void OnRouteIdChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnTourNoChanging(string value);
    partial void OnTourNoChanged();
    partial void OnTourClassIdChanging(byte value);
    partial void OnTourClassIdChanged();
    partial void OnLeaveDateChanging(System.DateTime value);
    partial void OnLeaveDateChanged();
    partial void OnLeaveTrafficChanging(string value);
    partial void OnLeaveTrafficChanged();
    partial void OnReturnTrafficChanging(string value);
    partial void OnReturnTrafficChanged();
    partial void OnOrderTypeChanging(byte value);
    partial void OnOrderTypeChanged();
    partial void OnOrderStateChanging(byte value);
    partial void OnOrderStateChanged();
    partial void OnBuyCompanyIDChanging(int value);
    partial void OnBuyCompanyIDChanged();
    partial void OnBuyCompanyNameChanging(string value);
    partial void OnBuyCompanyNameChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnContactMobileChanging(string value);
    partial void OnContactMobileChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnSalerNameChanging(string value);
    partial void OnSalerNameChanged();
    partial void OnSalerIdChanging(int value);
    partial void OnSalerIdChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnOperatorIDChanging(int value);
    partial void OnOperatorIDChanged();
    partial void OnPriceStandIdChanging(int value);
    partial void OnPriceStandIdChanged();
    partial void OnPersonalPriceChanging(decimal value);
    partial void OnPersonalPriceChanged();
    partial void OnChildPriceChanging(decimal value);
    partial void OnChildPriceChanged();
    partial void OnMarketPriceChanging(decimal value);
    partial void OnMarketPriceChanged();
    partial void OnAdultNumberChanging(int value);
    partial void OnAdultNumberChanged();
    partial void OnChildNumberChanging(int value);
    partial void OnChildNumberChanged();
    partial void OnMarketNumberChanging(int value);
    partial void OnMarketNumberChanged();
    partial void OnPeopleNumberChanging(int value);
    partial void OnPeopleNumberChanged();
    partial void OnOtherPriceChanging(decimal value);
    partial void OnOtherPriceChanged();
    partial void OnSaveSeatDateChanging(System.DateTime value);
    partial void OnSaveSeatDateChanged();
    partial void OnOperatorContentChanging(string value);
    partial void OnOperatorContentChanged();
    partial void OnSpecialContentChanging(string value);
    partial void OnSpecialContentChanged();
    partial void OnSumPriceChanging(decimal value);
    partial void OnSumPriceChanged();
    partial void OnSellCompanyNameChanging(string value);
    partial void OnSellCompanyNameChanged();
    partial void OnSellCompanyIdChanging(int value);
    partial void OnSellCompanyIdChanged();
    partial void OnLastDateChanging(System.DateTime value);
    partial void OnLastDateChanged();
    partial void OnLastOperatorIDChanging(int value);
    partial void OnLastOperatorIDChanged();
    partial void OnSuccessTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSuccessTimeChanged();
    partial void OnFinanceAddExpenseChanging(decimal value);
    partial void OnFinanceAddExpenseChanged();
    partial void OnFinanceRedExpenseChanging(decimal value);
    partial void OnFinanceRedExpenseChanged();
    partial void OnFinanceSumChanging(decimal value);
    partial void OnFinanceSumChanged();
    partial void OnFinanceRemarkChanging(string value);
    partial void OnFinanceRemarkChanged();
    partial void OnHasCheckMoneyChanging(decimal value);
    partial void OnHasCheckMoneyChanged();
    partial void OnNotCheckMoneyChanging(decimal value);
    partial void OnNotCheckMoneyChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnViewOperatorIdChanging(int value);
    partial void OnViewOperatorIdChanged();
    partial void OnCustomerDisplayTypeChanging(byte value);
    partial void OnCustomerDisplayTypeChanged();
    partial void OnCustomerFilePathChanging(string value);
    partial void OnCustomerFilePathChanged();
    partial void OnLeaguePepoleNumChanging(int value);
    partial void OnLeaguePepoleNumChanged();
    partial void OnTourDaysChanging(int value);
    partial void OnTourDaysChanged();
    partial void OnCustomerLevIdChanging(int value);
    partial void OnCustomerLevIdChanged();
    #endregion
		
		public TourOrder()
		{
			this._itemReceiveRefundList = new EntitySet<ReceiveRefund>(new Action<ReceiveRefund>(this.attach_itemReceiveRefundList), new Action<ReceiveRefund>(this.detach_itemReceiveRefundList));
			this._orderTourOrderCustomerList = new EntitySet<TourOrderCustomer>(new Action<TourOrderCustomer>(this.attach_orderTourOrderCustomerList), new Action<TourOrderCustomer>(this.detach_orderTourOrderCustomerList));
			this._orderTourOrderPlus = default(EntityRef<TourOrderPlus>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_orderNo", DbType="nvarchar(250)")]
		public string OrderNo
		{
			get
			{
				return this._orderNo;
			}
			set
			{
				if ((this._orderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._orderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._routeId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(250)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._routeName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[Column(Storage="_tourNo", DbType="nvarchar(250)")]
		public string TourNo
		{
			get
			{
				return this._tourNo;
			}
			set
			{
				if ((this._tourNo != value))
				{
					this.OnTourNoChanging(value);
					this.SendPropertyChanging();
					this._tourNo = value;
					this.SendPropertyChanged("TourNo");
					this.OnTourNoChanged();
				}
			}
		}
		
		[Column(Storage="_tourClassId", DbType="tinyint NOT NULL")]
		public byte TourClassId
		{
			get
			{
				return this._tourClassId;
			}
			set
			{
				if ((this._tourClassId != value))
				{
					this.OnTourClassIdChanging(value);
					this.SendPropertyChanging();
					this._tourClassId = value;
					this.SendPropertyChanged("TourClassId");
					this.OnTourClassIdChanged();
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime NOT NULL")]
		public System.DateTime LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._leaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[Column(Storage="_leaveTraffic", DbType="nvarchar(250)")]
		public string LeaveTraffic
		{
			get
			{
				return this._leaveTraffic;
			}
			set
			{
				if ((this._leaveTraffic != value))
				{
					this.OnLeaveTrafficChanging(value);
					this.SendPropertyChanging();
					this._leaveTraffic = value;
					this.SendPropertyChanged("LeaveTraffic");
					this.OnLeaveTrafficChanged();
				}
			}
		}
		
		[Column(Storage="_returnTraffic", DbType="nvarchar(250)")]
		public string ReturnTraffic
		{
			get
			{
				return this._returnTraffic;
			}
			set
			{
				if ((this._returnTraffic != value))
				{
					this.OnReturnTrafficChanging(value);
					this.SendPropertyChanging();
					this._returnTraffic = value;
					this.SendPropertyChanged("ReturnTraffic");
					this.OnReturnTrafficChanged();
				}
			}
		}
		
		[Column(Storage="_orderType", DbType="tinyint NOT NULL")]
		public byte OrderType
		{
			get
			{
				return this._orderType;
			}
			set
			{
				if ((this._orderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._orderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[Column(Storage="_orderState", DbType="tinyint NOT NULL")]
		public byte OrderState
		{
			get
			{
				return this._orderState;
			}
			set
			{
				if ((this._orderState != value))
				{
					this.OnOrderStateChanging(value);
					this.SendPropertyChanging();
					this._orderState = value;
					this.SendPropertyChanged("OrderState");
					this.OnOrderStateChanged();
				}
			}
		}
		
		[Column(Storage="_buyCompanyID", DbType="int NOT NULL")]
		public int BuyCompanyID
		{
			get
			{
				return this._buyCompanyID;
			}
			set
			{
				if ((this._buyCompanyID != value))
				{
					this.OnBuyCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._buyCompanyID = value;
					this.SendPropertyChanged("BuyCompanyID");
					this.OnBuyCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_buyCompanyName", DbType="nvarchar(250)")]
		public string BuyCompanyName
		{
			get
			{
				return this._buyCompanyName;
			}
			set
			{
				if ((this._buyCompanyName != value))
				{
					this.OnBuyCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._buyCompanyName = value;
					this.SendPropertyChanged("BuyCompanyName");
					this.OnBuyCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(50)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="nvarchar(50)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this.OnContactMobileChanging(value);
					this.SendPropertyChanging();
					this._contactMobile = value;
					this.SendPropertyChanged("ContactMobile");
					this.OnContactMobileChanged();
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="nvarchar(50)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._contactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[Column(Storage="_salerName", DbType="nvarchar(100)")]
		public string SalerName
		{
			get
			{
				return this._salerName;
			}
			set
			{
				if ((this._salerName != value))
				{
					this.OnSalerNameChanging(value);
					this.SendPropertyChanging();
					this._salerName = value;
					this.SendPropertyChanged("SalerName");
					this.OnSalerNameChanged();
				}
			}
		}
		
		[Column(Storage="_salerId", DbType="int NOT NULL")]
		public int SalerId
		{
			get
			{
				return this._salerId;
			}
			set
			{
				if ((this._salerId != value))
				{
					this.OnSalerIdChanging(value);
					this.SendPropertyChanging();
					this._salerId = value;
					this.SendPropertyChanged("SalerId");
					this.OnSalerIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(50)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._operatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_priceStandId", DbType="int NOT NULL")]
		public int PriceStandId
		{
			get
			{
				return this._priceStandId;
			}
			set
			{
				if ((this._priceStandId != value))
				{
					this.OnPriceStandIdChanging(value);
					this.SendPropertyChanging();
					this._priceStandId = value;
					this.SendPropertyChanged("PriceStandId");
					this.OnPriceStandIdChanged();
				}
			}
		}
		
		[Column(Storage="_personalPrice", DbType="money NOT NULL")]
		public decimal PersonalPrice
		{
			get
			{
				return this._personalPrice;
			}
			set
			{
				if ((this._personalPrice != value))
				{
					this.OnPersonalPriceChanging(value);
					this.SendPropertyChanging();
					this._personalPrice = value;
					this.SendPropertyChanged("PersonalPrice");
					this.OnPersonalPriceChanged();
				}
			}
		}
		
		[Column(Storage="_childPrice", DbType="money NOT NULL")]
		public decimal ChildPrice
		{
			get
			{
				return this._childPrice;
			}
			set
			{
				if ((this._childPrice != value))
				{
					this.OnChildPriceChanging(value);
					this.SendPropertyChanging();
					this._childPrice = value;
					this.SendPropertyChanged("ChildPrice");
					this.OnChildPriceChanged();
				}
			}
		}
		
		[Column(Storage="_marketPrice", DbType="money NOT NULL")]
		public decimal MarketPrice
		{
			get
			{
				return this._marketPrice;
			}
			set
			{
				if ((this._marketPrice != value))
				{
					this.OnMarketPriceChanging(value);
					this.SendPropertyChanging();
					this._marketPrice = value;
					this.SendPropertyChanged("MarketPrice");
					this.OnMarketPriceChanged();
				}
			}
		}
		
		[Column(Storage="_adultNumber", DbType="int NOT NULL")]
		public int AdultNumber
		{
			get
			{
				return this._adultNumber;
			}
			set
			{
				if ((this._adultNumber != value))
				{
					this.OnAdultNumberChanging(value);
					this.SendPropertyChanging();
					this._adultNumber = value;
					this.SendPropertyChanged("AdultNumber");
					this.OnAdultNumberChanged();
				}
			}
		}
		
		[Column(Storage="_childNumber", DbType="int NOT NULL")]
		public int ChildNumber
		{
			get
			{
				return this._childNumber;
			}
			set
			{
				if ((this._childNumber != value))
				{
					this.OnChildNumberChanging(value);
					this.SendPropertyChanging();
					this._childNumber = value;
					this.SendPropertyChanged("ChildNumber");
					this.OnChildNumberChanged();
				}
			}
		}
		
		[Column(Storage="_marketNumber", DbType="int NOT NULL")]
		public int MarketNumber
		{
			get
			{
				return this._marketNumber;
			}
			set
			{
				if ((this._marketNumber != value))
				{
					this.OnMarketNumberChanging(value);
					this.SendPropertyChanging();
					this._marketNumber = value;
					this.SendPropertyChanged("MarketNumber");
					this.OnMarketNumberChanged();
				}
			}
		}
		
		[Column(Storage="_peopleNumber", DbType="int NOT NULL")]
		public int PeopleNumber
		{
			get
			{
				return this._peopleNumber;
			}
			set
			{
				if ((this._peopleNumber != value))
				{
					this.OnPeopleNumberChanging(value);
					this.SendPropertyChanging();
					this._peopleNumber = value;
					this.SendPropertyChanged("PeopleNumber");
					this.OnPeopleNumberChanged();
				}
			}
		}
		
		[Column(Storage="_otherPrice", DbType="money NOT NULL")]
		public decimal OtherPrice
		{
			get
			{
				return this._otherPrice;
			}
			set
			{
				if ((this._otherPrice != value))
				{
					this.OnOtherPriceChanging(value);
					this.SendPropertyChanging();
					this._otherPrice = value;
					this.SendPropertyChanged("OtherPrice");
					this.OnOtherPriceChanged();
				}
			}
		}
		
		[Column(Storage="_saveSeatDate", DbType="datetime NOT NULL")]
		public System.DateTime SaveSeatDate
		{
			get
			{
				return this._saveSeatDate;
			}
			set
			{
				if ((this._saveSeatDate != value))
				{
					this.OnSaveSeatDateChanging(value);
					this.SendPropertyChanging();
					this._saveSeatDate = value;
					this.SendPropertyChanged("SaveSeatDate");
					this.OnSaveSeatDateChanged();
				}
			}
		}
		
		[Column(Storage="_operatorContent", DbType="nvarchar(1000)")]
		public string OperatorContent
		{
			get
			{
				return this._operatorContent;
			}
			set
			{
				if ((this._operatorContent != value))
				{
					this.OnOperatorContentChanging(value);
					this.SendPropertyChanging();
					this._operatorContent = value;
					this.SendPropertyChanged("OperatorContent");
					this.OnOperatorContentChanged();
				}
			}
		}
		
		[Column(Storage="_specialContent", DbType="nvarchar(1000)")]
		public string SpecialContent
		{
			get
			{
				return this._specialContent;
			}
			set
			{
				if ((this._specialContent != value))
				{
					this.OnSpecialContentChanging(value);
					this.SendPropertyChanging();
					this._specialContent = value;
					this.SendPropertyChanged("SpecialContent");
					this.OnSpecialContentChanged();
				}
			}
		}
		
		[Column(Storage="_sumPrice", DbType="money NOT NULL")]
		public decimal SumPrice
		{
			get
			{
				return this._sumPrice;
			}
			set
			{
				if ((this._sumPrice != value))
				{
					this.OnSumPriceChanging(value);
					this.SendPropertyChanging();
					this._sumPrice = value;
					this.SendPropertyChanged("SumPrice");
					this.OnSumPriceChanged();
				}
			}
		}
		
		[Column(Storage="_sellCompanyName", DbType="nvarchar(250)")]
		public string SellCompanyName
		{
			get
			{
				return this._sellCompanyName;
			}
			set
			{
				if ((this._sellCompanyName != value))
				{
					this.OnSellCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._sellCompanyName = value;
					this.SendPropertyChanged("SellCompanyName");
					this.OnSellCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_sellCompanyId", DbType="int NOT NULL")]
		public int SellCompanyId
		{
			get
			{
				return this._sellCompanyId;
			}
			set
			{
				if ((this._sellCompanyId != value))
				{
					this.OnSellCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._sellCompanyId = value;
					this.SendPropertyChanged("SellCompanyId");
					this.OnSellCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_lastDate", DbType="datetime NOT NULL")]
		public System.DateTime LastDate
		{
			get
			{
				return this._lastDate;
			}
			set
			{
				if ((this._lastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._lastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[Column(Storage="_lastOperatorID", DbType="int NOT NULL")]
		public int LastOperatorID
		{
			get
			{
				return this._lastOperatorID;
			}
			set
			{
				if ((this._lastOperatorID != value))
				{
					this.OnLastOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._lastOperatorID = value;
					this.SendPropertyChanged("LastOperatorID");
					this.OnLastOperatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_successTime", DbType="datetime")]
		public System.Nullable<System.DateTime> SuccessTime
		{
			get
			{
				return this._successTime;
			}
			set
			{
				if ((this._successTime != value))
				{
					this.OnSuccessTimeChanging(value);
					this.SendPropertyChanging();
					this._successTime = value;
					this.SendPropertyChanged("SuccessTime");
					this.OnSuccessTimeChanged();
				}
			}
		}
		
		[Column(Storage="_financeAddExpense", DbType="money NOT NULL")]
		public decimal FinanceAddExpense
		{
			get
			{
				return this._financeAddExpense;
			}
			set
			{
				if ((this._financeAddExpense != value))
				{
					this.OnFinanceAddExpenseChanging(value);
					this.SendPropertyChanging();
					this._financeAddExpense = value;
					this.SendPropertyChanged("FinanceAddExpense");
					this.OnFinanceAddExpenseChanged();
				}
			}
		}
		
		[Column(Storage="_financeRedExpense", DbType="money NOT NULL")]
		public decimal FinanceRedExpense
		{
			get
			{
				return this._financeRedExpense;
			}
			set
			{
				if ((this._financeRedExpense != value))
				{
					this.OnFinanceRedExpenseChanging(value);
					this.SendPropertyChanging();
					this._financeRedExpense = value;
					this.SendPropertyChanged("FinanceRedExpense");
					this.OnFinanceRedExpenseChanged();
				}
			}
		}
		
		[Column(Storage="_financeSum", DbType="money NOT NULL")]
		public decimal FinanceSum
		{
			get
			{
				return this._financeSum;
			}
			set
			{
				if ((this._financeSum != value))
				{
					this.OnFinanceSumChanging(value);
					this.SendPropertyChanging();
					this._financeSum = value;
					this.SendPropertyChanged("FinanceSum");
					this.OnFinanceSumChanged();
				}
			}
		}
		
		[Column(Storage="_financeRemark", DbType="nvarchar(500)")]
		public string FinanceRemark
		{
			get
			{
				return this._financeRemark;
			}
			set
			{
				if ((this._financeRemark != value))
				{
					this.OnFinanceRemarkChanging(value);
					this.SendPropertyChanging();
					this._financeRemark = value;
					this.SendPropertyChanged("FinanceRemark");
					this.OnFinanceRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_hasCheckMoney", DbType="money NOT NULL")]
		public decimal HasCheckMoney
		{
			get
			{
				return this._hasCheckMoney;
			}
			set
			{
				if ((this._hasCheckMoney != value))
				{
					this.OnHasCheckMoneyChanging(value);
					this.SendPropertyChanging();
					this._hasCheckMoney = value;
					this.SendPropertyChanged("HasCheckMoney");
					this.OnHasCheckMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_notCheckMoney", DbType="money NOT NULL")]
		public decimal NotCheckMoney
		{
			get
			{
				return this._notCheckMoney;
			}
			set
			{
				if ((this._notCheckMoney != value))
				{
					this.OnNotCheckMoneyChanging(value);
					this.SendPropertyChanging();
					this._notCheckMoney = value;
					this.SendPropertyChanged("NotCheckMoney");
					this.OnNotCheckMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_viewOperatorId", DbType="int NOT NULL")]
		public int ViewOperatorId
		{
			get
			{
				return this._viewOperatorId;
			}
			set
			{
				if ((this._viewOperatorId != value))
				{
					this.OnViewOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._viewOperatorId = value;
					this.SendPropertyChanged("ViewOperatorId");
					this.OnViewOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_customerDisplayType", DbType="tinyint NOT NULL")]
		public byte CustomerDisplayType
		{
			get
			{
				return this._customerDisplayType;
			}
			set
			{
				if ((this._customerDisplayType != value))
				{
					this.OnCustomerDisplayTypeChanging(value);
					this.SendPropertyChanging();
					this._customerDisplayType = value;
					this.SendPropertyChanged("CustomerDisplayType");
					this.OnCustomerDisplayTypeChanged();
				}
			}
		}
		
		[Column(Storage="_customerFilePath", DbType="nvarchar(255)")]
		public string CustomerFilePath
		{
			get
			{
				return this._customerFilePath;
			}
			set
			{
				if ((this._customerFilePath != value))
				{
					this.OnCustomerFilePathChanging(value);
					this.SendPropertyChanging();
					this._customerFilePath = value;
					this.SendPropertyChanged("CustomerFilePath");
					this.OnCustomerFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_leaguePepoleNum", DbType="int NOT NULL")]
		public int LeaguePepoleNum
		{
			get
			{
				return this._leaguePepoleNum;
			}
			set
			{
				if ((this._leaguePepoleNum != value))
				{
					this.OnLeaguePepoleNumChanging(value);
					this.SendPropertyChanging();
					this._leaguePepoleNum = value;
					this.SendPropertyChanged("LeaguePepoleNum");
					this.OnLeaguePepoleNumChanged();
				}
			}
		}
		
		[Column(Storage="_tourDays", DbType="int NOT NULL")]
		public int TourDays
		{
			get
			{
				return this._tourDays;
			}
			set
			{
				if ((this._tourDays != value))
				{
					this.OnTourDaysChanging(value);
					this.SendPropertyChanging();
					this._tourDays = value;
					this.SendPropertyChanged("TourDays");
					this.OnTourDaysChanged();
				}
			}
		}
		
		[Column(Storage="_customerLevId", DbType="int NOT NULL")]
		public int CustomerLevId
		{
			get
			{
				return this._customerLevId;
			}
			set
			{
				if ((this._customerLevId != value))
				{
					this.OnCustomerLevIdChanging(value);
					this.SendPropertyChanging();
					this._customerLevId = value;
					this.SendPropertyChanged("CustomerLevId");
					this.OnCustomerLevIdChanged();
				}
			}
		}
		
		[Association(Name="TourOrder_ReceiveRefund", Storage="_itemReceiveRefundList", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<ReceiveRefund> ItemReceiveRefundList
		{
			get
			{
				return this._itemReceiveRefundList;
			}
			set
			{
				this._itemReceiveRefundList.Assign(value);
			}
		}
		
		[Association(Name="TourOrder_TourOrderCustomer", Storage="_orderTourOrderCustomerList", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<TourOrderCustomer> OrderTourOrderCustomerList
		{
			get
			{
				return this._orderTourOrderCustomerList;
			}
			set
			{
				this._orderTourOrderCustomerList.Assign(value);
			}
		}
		
		[Association(Name="TourOrder_TourOrderPlus", Storage="_orderTourOrderPlus", ThisKey="Id", OtherKey="OrderId", IsUnique=true, IsForeignKey=false)]
		public TourOrderPlus OrderTourOrderPlus
		{
			get
			{
				return this._orderTourOrderPlus.Entity;
			}
			set
			{
				TourOrderPlus previousValue = this._orderTourOrderPlus.Entity;
				if (((previousValue != value) 
							|| (this._orderTourOrderPlus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._orderTourOrderPlus.Entity = null;
						previousValue.OrderTourOrder = null;
					}
					this._orderTourOrderPlus.Entity = value;
					if ((value != null))
					{
						value.OrderTourOrder = this;
					}
					this.SendPropertyChanged("OrderTourOrderPlus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_itemReceiveRefundList(ReceiveRefund entity)
		{
			this.SendPropertyChanging();
			entity.ItemTourOrder = this;
		}
		
		private void detach_itemReceiveRefundList(ReceiveRefund entity)
		{
			this.SendPropertyChanging();
			entity.ItemTourOrder = null;
		}
		
		private void attach_orderTourOrderCustomerList(TourOrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.OrderTourOrder = this;
		}
		
		private void detach_orderTourOrderCustomerList(TourOrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.OrderTourOrder = null;
		}
	}
	
	[Table(Name="dbo.tbl_TourOrderCustomer")]
	public partial class TourOrderCustomer : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _orderId;
		
		private int _companyID;
		
		private string _visitorName;
		
		private System.Nullable<byte> _cradType;
		
		private string _cradNumber;
		
		private byte _sex;
		
		private byte _visitorType;
		
		private string _contactTel;
		
		private System.DateTime _issueTime;
		
		private byte _customerStatus;
		
		private System.Nullable<byte> _ticketStatus;
		
		private EntitySet<CustomerRefund> _custormerCustomerRefundList;
		
		private EntityRef<TourOrder> _orderTourOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(string value);
    partial void OnOrderIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnVisitorNameChanging(string value);
    partial void OnVisitorNameChanged();
    partial void OnCradTypeChanging(System.Nullable<byte> value);
    partial void OnCradTypeChanged();
    partial void OnCradNumberChanging(string value);
    partial void OnCradNumberChanged();
    partial void OnSexChanging(byte value);
    partial void OnSexChanged();
    partial void OnVisitorTypeChanging(byte value);
    partial void OnVisitorTypeChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnIssueTimeChanging(System.DateTime value);
    partial void OnIssueTimeChanged();
    partial void OnCustomerStatusChanging(byte value);
    partial void OnCustomerStatusChanged();
    partial void OnTicketStatusChanging(System.Nullable<byte> value);
    partial void OnTicketStatusChanged();
    #endregion
		
		public TourOrderCustomer()
		{
			this._custormerCustomerRefundList = new EntitySet<CustomerRefund>(new Action<CustomerRefund>(this.attach_custormerCustomerRefundList), new Action<CustomerRefund>(this.detach_custormerCustomerRefundList));
			this._orderTourOrder = default(EntityRef<TourOrder>);
			OnCreated();
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_orderId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string OrderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					if (this._orderTourOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._companyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_visitorName", DbType="nvarchar(100)")]
		public string VisitorName
		{
			get
			{
				return this._visitorName;
			}
			set
			{
				if ((this._visitorName != value))
				{
					this.OnVisitorNameChanging(value);
					this.SendPropertyChanging();
					this._visitorName = value;
					this.SendPropertyChanged("VisitorName");
					this.OnVisitorNameChanged();
				}
			}
		}
		
		[Column(Storage="_cradType", DbType="tinyint")]
		public System.Nullable<byte> CradType
		{
			get
			{
				return this._cradType;
			}
			set
			{
				if ((this._cradType != value))
				{
					this.OnCradTypeChanging(value);
					this.SendPropertyChanging();
					this._cradType = value;
					this.SendPropertyChanged("CradType");
					this.OnCradTypeChanged();
				}
			}
		}
		
		[Column(Storage="_cradNumber", DbType="nvarchar(300)")]
		public string CradNumber
		{
			get
			{
				return this._cradNumber;
			}
			set
			{
				if ((this._cradNumber != value))
				{
					this.OnCradNumberChanging(value);
					this.SendPropertyChanging();
					this._cradNumber = value;
					this.SendPropertyChanged("CradNumber");
					this.OnCradNumberChanged();
				}
			}
		}
		
		[Column(Storage="_sex", DbType="tinyint NOT NULL")]
		public byte Sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[Column(Storage="_visitorType", DbType="tinyint NOT NULL")]
		public byte VisitorType
		{
			get
			{
				return this._visitorType;
			}
			set
			{
				if ((this._visitorType != value))
				{
					this.OnVisitorTypeChanging(value);
					this.SendPropertyChanging();
					this._visitorType = value;
					this.SendPropertyChanged("VisitorType");
					this.OnVisitorTypeChanged();
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(100)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._contactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_customerStatus", DbType="tinyint NOT NULL")]
		public byte CustomerStatus
		{
			get
			{
				return this._customerStatus;
			}
			set
			{
				if ((this._customerStatus != value))
				{
					this.OnCustomerStatusChanging(value);
					this.SendPropertyChanging();
					this._customerStatus = value;
					this.SendPropertyChanged("CustomerStatus");
					this.OnCustomerStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ticketStatus", DbType="tinyint")]
		public System.Nullable<byte> TicketStatus
		{
			get
			{
				return this._ticketStatus;
			}
			set
			{
				if ((this._ticketStatus != value))
				{
					this.OnTicketStatusChanging(value);
					this.SendPropertyChanging();
					this._ticketStatus = value;
					this.SendPropertyChanged("TicketStatus");
					this.OnTicketStatusChanged();
				}
			}
		}
		
		[Association(Name="TourOrderCustomer_CustomerRefund", Storage="_custormerCustomerRefundList", ThisKey="Id", OtherKey="CustormerId")]
		public EntitySet<CustomerRefund> CustormerCustomerRefundList
		{
			get
			{
				return this._custormerCustomerRefundList;
			}
			set
			{
				this._custormerCustomerRefundList.Assign(value);
			}
		}
		
		[Association(Name="TourOrder_TourOrderCustomer", Storage="_orderTourOrder", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public TourOrder OrderTourOrder
		{
			get
			{
				return this._orderTourOrder.Entity;
			}
			set
			{
				TourOrder previousValue = this._orderTourOrder.Entity;
				if (((previousValue != value) 
							|| (this._orderTourOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._orderTourOrder.Entity = null;
						previousValue.OrderTourOrderCustomerList.Remove(this);
					}
					this._orderTourOrder.Entity = value;
					if ((value != null))
					{
						value.OrderTourOrderCustomerList.Add(this);
						this._orderId = value.Id;
					}
					else
					{
						this._orderId = default(string);
					}
					this.SendPropertyChanged("OrderTourOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_custormerCustomerRefundList(CustomerRefund entity)
		{
			this.SendPropertyChanging();
			entity.CustormerTourOrderCustomer = this;
		}
		
		private void detach_custormerCustomerRefundList(CustomerRefund entity)
		{
			this.SendPropertyChanging();
			entity.CustormerTourOrderCustomer = null;
		}
	}
	
	[Table(Name="dbo.tbl_TourOrderPlus")]
	public partial class TourOrderPlus : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _orderId;
		
		private decimal _addAmount;
		
		private decimal _reduceAmount;
		
		private string _remark;
		
		private EntityRef<TourOrder> _orderTourOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(string value);
    partial void OnOrderIdChanged();
    partial void OnAddAmountChanging(decimal value);
    partial void OnAddAmountChanged();
    partial void OnReduceAmountChanging(decimal value);
    partial void OnReduceAmountChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TourOrderPlus()
		{
			this._orderTourOrder = default(EntityRef<TourOrder>);
			OnCreated();
		}
		
		[Column(Storage="_orderId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					if (this._orderTourOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Storage="_addAmount", DbType="money NOT NULL")]
		public decimal AddAmount
		{
			get
			{
				return this._addAmount;
			}
			set
			{
				if ((this._addAmount != value))
				{
					this.OnAddAmountChanging(value);
					this.SendPropertyChanging();
					this._addAmount = value;
					this.SendPropertyChanged("AddAmount");
					this.OnAddAmountChanged();
				}
			}
		}
		
		[Column(Storage="_reduceAmount", DbType="money NOT NULL")]
		public decimal ReduceAmount
		{
			get
			{
				return this._reduceAmount;
			}
			set
			{
				if ((this._reduceAmount != value))
				{
					this.OnReduceAmountChanging(value);
					this.SendPropertyChanging();
					this._reduceAmount = value;
					this.SendPropertyChanged("ReduceAmount");
					this.OnReduceAmountChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="TourOrder_TourOrderPlus", Storage="_orderTourOrder", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public TourOrder OrderTourOrder
		{
			get
			{
				return this._orderTourOrder.Entity;
			}
			set
			{
				TourOrder previousValue = this._orderTourOrder.Entity;
				if (((previousValue != value) 
							|| (this._orderTourOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._orderTourOrder.Entity = null;
						previousValue.OrderTourOrderPlus = null;
					}
					this._orderTourOrder.Entity = value;
					if ((value != null))
					{
						value.OrderTourOrderPlus = this;
						this._orderId = value.Id;
					}
					else
					{
						this._orderId = default(string);
					}
					this.SendPropertyChanged("OrderTourOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourOtherCost")]
	public partial class TourOtherCost : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _companyId;
		
		private string _tourId;
		
		private byte _costType;
		
		private string _custromCName;
		
		private int _custromCId;
		
		private string _proceedItem;
		
		private decimal _proceed;
		
		private decimal _increaseCost;
		
		private decimal _reduceCost;
		
		private decimal _sumCost;
		
		private string _remark;
		
		private int _operatorId;
		
		private System.DateTime _createTime;
		
		private System.DateTime _payTime;
		
		private string _payee;
		
		private byte _payType;
		
		private byte _itemType;
		
		private string _itemId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnCostTypeChanging(byte value);
    partial void OnCostTypeChanged();
    partial void OnCustromCNameChanging(string value);
    partial void OnCustromCNameChanged();
    partial void OnCustromCIdChanging(int value);
    partial void OnCustromCIdChanged();
    partial void OnProceedItemChanging(string value);
    partial void OnProceedItemChanged();
    partial void OnProceedChanging(decimal value);
    partial void OnProceedChanged();
    partial void OnIncreaseCostChanging(decimal value);
    partial void OnIncreaseCostChanged();
    partial void OnReduceCostChanging(decimal value);
    partial void OnReduceCostChanged();
    partial void OnSumCostChanging(decimal value);
    partial void OnSumCostChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnPayTimeChanging(System.DateTime value);
    partial void OnPayTimeChanged();
    partial void OnPayeeChanging(string value);
    partial void OnPayeeChanged();
    partial void OnPayTypeChanging(byte value);
    partial void OnPayTypeChanged();
    partial void OnItemTypeChanging(byte value);
    partial void OnItemTypeChanged();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    #endregion
		
		public TourOtherCost()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36)")]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_costType", DbType="tinyint NOT NULL")]
		public byte CostType
		{
			get
			{
				return this._costType;
			}
			set
			{
				if ((this._costType != value))
				{
					this.OnCostTypeChanging(value);
					this.SendPropertyChanging();
					this._costType = value;
					this.SendPropertyChanged("CostType");
					this.OnCostTypeChanged();
				}
			}
		}
		
		[Column(Storage="_custromCName", DbType="nvarchar(255)")]
		public string CustromCName
		{
			get
			{
				return this._custromCName;
			}
			set
			{
				if ((this._custromCName != value))
				{
					this.OnCustromCNameChanging(value);
					this.SendPropertyChanging();
					this._custromCName = value;
					this.SendPropertyChanged("CustromCName");
					this.OnCustromCNameChanged();
				}
			}
		}
		
		[Column(Storage="_custromCId", DbType="int NOT NULL")]
		public int CustromCId
		{
			get
			{
				return this._custromCId;
			}
			set
			{
				if ((this._custromCId != value))
				{
					this.OnCustromCIdChanging(value);
					this.SendPropertyChanging();
					this._custromCId = value;
					this.SendPropertyChanged("CustromCId");
					this.OnCustromCIdChanged();
				}
			}
		}
		
		[Column(Storage="_proceedItem", DbType="nvarchar(255)")]
		public string ProceedItem
		{
			get
			{
				return this._proceedItem;
			}
			set
			{
				if ((this._proceedItem != value))
				{
					this.OnProceedItemChanging(value);
					this.SendPropertyChanging();
					this._proceedItem = value;
					this.SendPropertyChanged("ProceedItem");
					this.OnProceedItemChanged();
				}
			}
		}
		
		[Column(Storage="_proceed", DbType="money NOT NULL")]
		public decimal Proceed
		{
			get
			{
				return this._proceed;
			}
			set
			{
				if ((this._proceed != value))
				{
					this.OnProceedChanging(value);
					this.SendPropertyChanging();
					this._proceed = value;
					this.SendPropertyChanged("Proceed");
					this.OnProceedChanged();
				}
			}
		}
		
		[Column(Storage="_increaseCost", DbType="money NOT NULL")]
		public decimal IncreaseCost
		{
			get
			{
				return this._increaseCost;
			}
			set
			{
				if ((this._increaseCost != value))
				{
					this.OnIncreaseCostChanging(value);
					this.SendPropertyChanging();
					this._increaseCost = value;
					this.SendPropertyChanged("IncreaseCost");
					this.OnIncreaseCostChanged();
				}
			}
		}
		
		[Column(Storage="_reduceCost", DbType="money NOT NULL")]
		public decimal ReduceCost
		{
			get
			{
				return this._reduceCost;
			}
			set
			{
				if ((this._reduceCost != value))
				{
					this.OnReduceCostChanging(value);
					this.SendPropertyChanging();
					this._reduceCost = value;
					this.SendPropertyChanged("ReduceCost");
					this.OnReduceCostChanged();
				}
			}
		}
		
		[Column(Storage="_sumCost", DbType="money NOT NULL")]
		public decimal SumCost
		{
			get
			{
				return this._sumCost;
			}
			set
			{
				if ((this._sumCost != value))
				{
					this.OnSumCostChanging(value);
					this.SendPropertyChanging();
					this._sumCost = value;
					this.SendPropertyChanged("SumCost");
					this.OnSumCostChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(500)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="datetime NOT NULL")]
		public System.DateTime PayTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnPayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("PayTime");
					this.OnPayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_payee", DbType="nvarchar(255)")]
		public string Payee
		{
			get
			{
				return this._payee;
			}
			set
			{
				if ((this._payee != value))
				{
					this.OnPayeeChanging(value);
					this.SendPropertyChanging();
					this._payee = value;
					this.SendPropertyChanged("Payee");
					this.OnPayeeChanged();
				}
			}
		}
		
		[Column(Storage="_payType", DbType="tinyint NOT NULL")]
		public byte PayType
		{
			get
			{
				return this._payType;
			}
			set
			{
				if ((this._payType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._payType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="tinyint NOT NULL")]
		public byte ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="char(36)")]
		public string ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourPlan")]
	public partial class TourPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _planId;
		
		private string _tourId;
		
		private string _interval;
		
		private string _vehicle;
		
		private string _hotel;
		
		private string _dinner;
		
		private string _plan;
		
		private string _filePath;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanIdChanging(int value);
    partial void OnPlanIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnIntervalChanging(string value);
    partial void OnIntervalChanged();
    partial void OnVehicleChanging(string value);
    partial void OnVehicleChanged();
    partial void OnHotelChanging(string value);
    partial void OnHotelChanged();
    partial void OnDinnerChanging(string value);
    partial void OnDinnerChanged();
    partial void OnPlanChanging(string value);
    partial void OnPlanChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    #endregion
		
		public TourPlan()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_planId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlanId
		{
			get
			{
				return this._planId;
			}
			set
			{
				if ((this._planId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._planId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_interval", DbType="nvarchar(255)")]
		public string Interval
		{
			get
			{
				return this._interval;
			}
			set
			{
				if ((this._interval != value))
				{
					this.OnIntervalChanging(value);
					this.SendPropertyChanging();
					this._interval = value;
					this.SendPropertyChanged("Interval");
					this.OnIntervalChanged();
				}
			}
		}
		
		[Column(Storage="_vehicle", DbType="nvarchar(255)")]
		public string Vehicle
		{
			get
			{
				return this._vehicle;
			}
			set
			{
				if ((this._vehicle != value))
				{
					this.OnVehicleChanging(value);
					this.SendPropertyChanging();
					this._vehicle = value;
					this.SendPropertyChanged("Vehicle");
					this.OnVehicleChanged();
				}
			}
		}
		
		[Column(Storage="_hotel", DbType="nvarchar(255)")]
		public string Hotel
		{
			get
			{
				return this._hotel;
			}
			set
			{
				if ((this._hotel != value))
				{
					this.OnHotelChanging(value);
					this.SendPropertyChanging();
					this._hotel = value;
					this.SendPropertyChanged("Hotel");
					this.OnHotelChanged();
				}
			}
		}
		
		[Column(Storage="_dinner", DbType="nvarchar(255)")]
		public string Dinner
		{
			get
			{
				return this._dinner;
			}
			set
			{
				if ((this._dinner != value))
				{
					this.OnDinnerChanging(value);
					this.SendPropertyChanging();
					this._dinner = value;
					this.SendPropertyChanged("Dinner");
					this.OnDinnerChanged();
				}
			}
		}
		
		[Column(Storage="_plan", DbType="nvarchar(MAX)")]
		public string Plan
		{
			get
			{
				return this._plan;
			}
			set
			{
				if ((this._plan != value))
				{
					this.OnPlanChanging(value);
					this.SendPropertyChanging();
					this._plan = value;
					this.SendPropertyChanged("Plan");
					this.OnPlanChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourPlan", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourPlanList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourPlanList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourPrice")]
	public partial class TourPrice : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tourId;
		
		private int _standard;
		
		private int _levelId;
		
		private decimal _adultPrice;
		
		private decimal _childPrice;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnStandardChanging(int value);
    partial void OnStandardChanged();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnAdultPriceChanging(decimal value);
    partial void OnAdultPriceChanged();
    partial void OnChildPriceChanging(decimal value);
    partial void OnChildPriceChanged();
    #endregion
		
		public TourPrice()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_standard", DbType="int NOT NULL")]
		public int Standard
		{
			get
			{
				return this._standard;
			}
			set
			{
				if ((this._standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[Column(Storage="_levelId", DbType="int NOT NULL")]
		public int LevelId
		{
			get
			{
				return this._levelId;
			}
			set
			{
				if ((this._levelId != value))
				{
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._levelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[Column(Storage="_adultPrice", DbType="money NOT NULL")]
		public decimal AdultPrice
		{
			get
			{
				return this._adultPrice;
			}
			set
			{
				if ((this._adultPrice != value))
				{
					this.OnAdultPriceChanging(value);
					this.SendPropertyChanging();
					this._adultPrice = value;
					this.SendPropertyChanged("AdultPrice");
					this.OnAdultPriceChanged();
				}
			}
		}
		
		[Column(Storage="_childPrice", DbType="money NOT NULL")]
		public decimal ChildPrice
		{
			get
			{
				return this._childPrice;
			}
			set
			{
				if ((this._childPrice != value))
				{
					this.OnChildPriceChanging(value);
					this.SendPropertyChanging();
					this._childPrice = value;
					this.SendPropertyChanged("ChildPrice");
					this.OnChildPriceChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourPrice", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourPriceList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourPriceList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourQuickPlan")]
	public partial class TourQuickPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private string _plan;
		
		private string _service;
		
		private string _remark;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnPlanChanging(string value);
    partial void OnPlanChanged();
    partial void OnServiceChanging(string value);
    partial void OnServiceChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TourQuickPlan()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_plan", DbType="nvarchar(MAX)")]
		public string Plan
		{
			get
			{
				return this._plan;
			}
			set
			{
				if ((this._plan != value))
				{
					this.OnPlanChanging(value);
					this.SendPropertyChanging();
					this._plan = value;
					this.SendPropertyChanged("Plan");
					this.OnPlanChanged();
				}
			}
		}
		
		[Column(Storage="_service", DbType="nvarchar(MAX)")]
		public string Service
		{
			get
			{
				return this._service;
			}
			set
			{
				if ((this._service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourQuickPlan", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourQuickPlan = null;
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourQuickPlan = this;
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourSendGuide")]
	public partial class TourSendGuide : LinqEntityBase
	{
		
		private string _tourId;
		
		private string _guide;
		
		public TourSendGuide()
		{
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this._tourId = value;
				}
			}
		}
		
		[Column(Storage="_guide", DbType="nvarchar(MAX)")]
		public string Guide
		{
			get
			{
				return this._guide;
			}
			set
			{
				if ((this._guide != value))
				{
					this._guide = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourSentTask")]
	public partial class TourSentTask : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tourId;
		
		private int _operatorId;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    #endregion
		
		public TourSentTask()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourSentTask", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourSentTaskList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourSentTaskList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourService")]
	public partial class TourService : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tourId;
		
		private string _key;
		
		private string _value;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public TourService()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_key", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[Column(Storage="_value", DbType="nvarchar(MAX)")]
		public string Value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourService", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourServiceList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourServiceList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourShare")]
	public partial class TourShare : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private System.Nullable<int> _companyId;
		
		private string _tourId;
		
		private string _shareItem;
		
		private decimal _shareCost;
		
		private System.Nullable<int> _departmentId;
		
		private System.Nullable<int> _saleId;
		
		private string _remark;
		
		private System.DateTime _createTime;
		
		private int _operatorId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnShareItemChanging(string value);
    partial void OnShareItemChanged();
    partial void OnShareCostChanging(decimal value);
    partial void OnShareCostChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    partial void OnSaleIdChanging(System.Nullable<int> value);
    partial void OnSaleIdChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    #endregion
		
		public TourShare()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36)")]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_shareItem", DbType="nvarchar(255)")]
		public string ShareItem
		{
			get
			{
				return this._shareItem;
			}
			set
			{
				if ((this._shareItem != value))
				{
					this.OnShareItemChanging(value);
					this.SendPropertyChanging();
					this._shareItem = value;
					this.SendPropertyChanged("ShareItem");
					this.OnShareItemChanged();
				}
			}
		}
		
		[Column(Storage="_shareCost", DbType="money NOT NULL")]
		public decimal ShareCost
		{
			get
			{
				return this._shareCost;
			}
			set
			{
				if ((this._shareCost != value))
				{
					this.OnShareCostChanging(value);
					this.SendPropertyChanging();
					this._shareCost = value;
					this.SendPropertyChanged("ShareCost");
					this.OnShareCostChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_saleId", DbType="int")]
		public System.Nullable<int> SaleId
		{
			get
			{
				return this._saleId;
			}
			set
			{
				if ((this._saleId != value))
				{
					this.OnSaleIdChanging(value);
					this.SendPropertyChanging();
					this._saleId = value;
					this.SendPropertyChanged("SaleId");
					this.OnSaleIdChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(500)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TourTeamPrice")]
	public partial class TourTeamPrice : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tourId;
		
		private byte _itemType;
		
		private string _standard;
		
		private decimal _localPrice;
		
		private decimal _myPrice;
		
		private string _requirement;
		
		private string _remark;
		
		private EntityRef<Tour> _tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTourIdChanging(string value);
    partial void OnTourIdChanged();
    partial void OnItemTypeChanging(byte value);
    partial void OnItemTypeChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnLocalPriceChanging(decimal value);
    partial void OnLocalPriceChanged();
    partial void OnMyPriceChanging(decimal value);
    partial void OnMyPriceChanged();
    partial void OnRequirementChanging(string value);
    partial void OnRequirementChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TourTeamPrice()
		{
			this._tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					if (this._tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._tourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="tinyint NOT NULL")]
		public byte ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[Column(Storage="_standard", DbType="nvarchar(255)")]
		public string Standard
		{
			get
			{
				return this._standard;
			}
			set
			{
				if ((this._standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[Column(Storage="_localPrice", DbType="money NOT NULL")]
		public decimal LocalPrice
		{
			get
			{
				return this._localPrice;
			}
			set
			{
				if ((this._localPrice != value))
				{
					this.OnLocalPriceChanging(value);
					this.SendPropertyChanging();
					this._localPrice = value;
					this.SendPropertyChanged("LocalPrice");
					this.OnLocalPriceChanged();
				}
			}
		}
		
		[Column(Storage="_myPrice", DbType="money NOT NULL")]
		public decimal MyPrice
		{
			get
			{
				return this._myPrice;
			}
			set
			{
				if ((this._myPrice != value))
				{
					this.OnMyPriceChanging(value);
					this.SendPropertyChanging();
					this._myPrice = value;
					this.SendPropertyChanged("MyPrice");
					this.OnMyPriceChanged();
				}
			}
		}
		
		[Column(Storage="_requirement", DbType="nvarchar(MAX)")]
		public string Requirement
		{
			get
			{
				return this._requirement;
			}
			set
			{
				if ((this._requirement != value))
				{
					this.OnRequirementChanging(value);
					this.SendPropertyChanging();
					this._requirement = value;
					this.SendPropertyChanged("Requirement");
					this.OnRequirementChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="Tour_TourTeamPrice", Storage="_tour", ThisKey="TourId", OtherKey="TourId", IsForeignKey=true, DeleteOnNull=true)]
		public Tour Tour
		{
			get
			{
				return this._tour.Entity;
			}
			set
			{
				Tour previousValue = this._tour.Entity;
				if (((previousValue != value) 
							|| (this._tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tour.Entity = null;
						previousValue.TourTeamPriceList.Remove(this);
					}
					this._tour.Entity = value;
					if ((value != null))
					{
						value.TourTeamPriceList.Add(this);
						this._tourId = value.TourId;
					}
					else
					{
						this._tourId = default(string);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TrainPlan")]
	public partial class TrainPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _companyId;
		
		private string _planTitle;
		
		private string _planContent;
		
		private string _trainPlanFile;
		
		private System.Nullable<int> _operatorId;
		
		private string _operatorName;
		
		private System.Nullable<System.DateTime> _issueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnPlanTitleChanging(string value);
    partial void OnPlanTitleChanged();
    partial void OnPlanContentChanging(string value);
    partial void OnPlanContentChanged();
    partial void OnTrainPlanFileChanging(string value);
    partial void OnTrainPlanFileChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnIssueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueTimeChanged();
    #endregion
		
		public TrainPlan()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_planTitle", DbType="nvarchar(255)")]
		public string PlanTitle
		{
			get
			{
				return this._planTitle;
			}
			set
			{
				if ((this._planTitle != value))
				{
					this.OnPlanTitleChanging(value);
					this.SendPropertyChanging();
					this._planTitle = value;
					this.SendPropertyChanged("PlanTitle");
					this.OnPlanTitleChanged();
				}
			}
		}
		
		[Column(Storage="_planContent", DbType="text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PlanContent
		{
			get
			{
				return this._planContent;
			}
			set
			{
				if ((this._planContent != value))
				{
					this.OnPlanContentChanging(value);
					this.SendPropertyChanging();
					this._planContent = value;
					this.SendPropertyChanged("PlanContent");
					this.OnPlanContentChanged();
				}
			}
		}
		
		[Column(Storage="_trainPlanFile", DbType="nvarchar(255)")]
		public string TrainPlanFile
		{
			get
			{
				return this._trainPlanFile;
			}
			set
			{
				if ((this._trainPlanFile != value))
				{
					this.OnTrainPlanFileChanging(value);
					this.SendPropertyChanging();
					this._trainPlanFile = value;
					this.SendPropertyChanged("TrainPlanFile");
					this.OnTrainPlanFileChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(50)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime")]
		public System.Nullable<System.DateTime> IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this.OnIssueTimeChanging(value);
					this.SendPropertyChanging();
					this._issueTime = value;
					this.SendPropertyChanged("IssueTime");
					this.OnIssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_TrainPlanAccepts")]
	public partial class TrainPlanAccepts : LinqEntityBase
	{
		
		private int _trainPlanId;
		
		private byte _acceptType;
		
		private int _acceptId;
		
		public TrainPlanAccepts()
		{
		}
		
		[Column(Storage="_trainPlanId", DbType="int NOT NULL")]
		public int TrainPlanId
		{
			get
			{
				return this._trainPlanId;
			}
			set
			{
				if ((this._trainPlanId != value))
				{
					this._trainPlanId = value;
				}
			}
		}
		
		[Column(Storage="_acceptType", DbType="tinyint NOT NULL")]
		public byte AcceptType
		{
			get
			{
				return this._acceptType;
			}
			set
			{
				if ((this._acceptType != value))
				{
					this._acceptType = value;
				}
			}
		}
		
		[Column(Storage="_acceptId", DbType="int NOT NULL")]
		public int AcceptId
		{
			get
			{
				return this._acceptId;
			}
			set
			{
				if ((this._acceptId != value))
				{
					this._acceptId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tbl_UserArea")]
	public partial class UserArea : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userId;
		
		private int _areaId;
		
		private EntityRef<CompanyUser> _userCompanyUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    #endregion
		
		public UserArea()
		{
			this._userCompanyUser = default(EntityRef<CompanyUser>);
			OnCreated();
		}
		
		[Column(Storage="_userId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._userCompanyUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[Association(Name="CompanyUser_UserArea", Storage="_userCompanyUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public CompanyUser UserCompanyUser
		{
			get
			{
				return this._userCompanyUser.Entity;
			}
			set
			{
				CompanyUser previousValue = this._userCompanyUser.Entity;
				if (((previousValue != value) 
							|| (this._userCompanyUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._userCompanyUser.Entity = null;
						previousValue.UserUserAreaList.Remove(this);
					}
					this._userCompanyUser.Entity = value;
					if ((value != null))
					{
						value.UserUserAreaList.Add(this);
						this._userId = value.Id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("UserCompanyUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_WorkExchange")]
	public partial class WorkExchange : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _exchangeId;
		
		private int _companyId;
		
		private string _title;
		
		private string _description;
		
		private int _operatorId;
		
		private string _operatorName;
		
		private System.DateTime _createTime;
		
		private string _isAnonymous;
		
		private int _clicks;
		
		private int _replys;
		
		private string _isDelete;
		
		private EntitySet<WorkExchangeAccept> _workExchangeAcceptList;
		
		private EntitySet<WorkExchangeReply> _workExchangeReplyList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExchangeIdChanging(int value);
    partial void OnExchangeIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsAnonymousChanging(string value);
    partial void OnIsAnonymousChanged();
    partial void OnClicksChanging(int value);
    partial void OnClicksChanged();
    partial void OnReplysChanging(int value);
    partial void OnReplysChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public WorkExchange()
		{
			this._workExchangeAcceptList = new EntitySet<WorkExchangeAccept>(new Action<WorkExchangeAccept>(this.attach_workExchangeAcceptList), new Action<WorkExchangeAccept>(this.detach_workExchangeAcceptList));
			this._workExchangeReplyList = new EntitySet<WorkExchangeReply>(new Action<WorkExchangeReply>(this.attach_workExchangeReplyList), new Action<WorkExchangeReply>(this.detach_workExchangeReplyList));
			OnCreated();
		}
		
		[Column(Storage="_exchangeId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExchangeId
		{
			get
			{
				return this._exchangeId;
			}
			set
			{
				if ((this._exchangeId != value))
				{
					this.OnExchangeIdChanging(value);
					this.SendPropertyChanging();
					this._exchangeId = value;
					this.SendPropertyChanged("ExchangeId");
					this.OnExchangeIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(255)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="nvarchar(MAX)")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(255)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isAnonymous", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsAnonymous
		{
			get
			{
				return this._isAnonymous;
			}
			set
			{
				if ((this._isAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._isAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[Column(Storage="_clicks", DbType="int NOT NULL")]
		public int Clicks
		{
			get
			{
				return this._clicks;
			}
			set
			{
				if ((this._clicks != value))
				{
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
		[Column(Storage="_replys", DbType="int NOT NULL")]
		public int Replys
		{
			get
			{
				return this._replys;
			}
			set
			{
				if ((this._replys != value))
				{
					this.OnReplysChanging(value);
					this.SendPropertyChanging();
					this._replys = value;
					this.SendPropertyChanged("Replys");
					this.OnReplysChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Association(Name="WorkExchange_WorkExchangeAccept", Storage="_workExchangeAcceptList", ThisKey="ExchangeId", OtherKey="ExchangeId")]
		public EntitySet<WorkExchangeAccept> WorkExchangeAcceptList
		{
			get
			{
				return this._workExchangeAcceptList;
			}
			set
			{
				this._workExchangeAcceptList.Assign(value);
			}
		}
		
		[Association(Name="WorkExchange_WorkExchangeReply", Storage="_workExchangeReplyList", ThisKey="ExchangeId", OtherKey="ExchangeId")]
		public EntitySet<WorkExchangeReply> WorkExchangeReplyList
		{
			get
			{
				return this._workExchangeReplyList;
			}
			set
			{
				this._workExchangeReplyList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_workExchangeAcceptList(WorkExchangeAccept entity)
		{
			this.SendPropertyChanging();
			entity.WorkExchange = this;
		}
		
		private void detach_workExchangeAcceptList(WorkExchangeAccept entity)
		{
			this.SendPropertyChanging();
			entity.WorkExchange = null;
		}
		
		private void attach_workExchangeReplyList(WorkExchangeReply entity)
		{
			this.SendPropertyChanging();
			entity.WorkExchange = this;
		}
		
		private void detach_workExchangeReplyList(WorkExchangeReply entity)
		{
			this.SendPropertyChanging();
			entity.WorkExchange = null;
		}
	}
	
	[Table(Name="dbo.tbl_WorkExchangeAccept")]
	public partial class WorkExchangeAccept : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _exchangeId;
		
		private byte _acceptType;
		
		private int _acceptId;
		
		private EntityRef<WorkExchange> _workExchange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExchangeIdChanging(int value);
    partial void OnExchangeIdChanged();
    partial void OnAcceptTypeChanging(byte value);
    partial void OnAcceptTypeChanged();
    partial void OnAcceptIdChanging(int value);
    partial void OnAcceptIdChanged();
    #endregion
		
		public WorkExchangeAccept()
		{
			this._workExchange = default(EntityRef<WorkExchange>);
			OnCreated();
		}
		
		[Column(Storage="_exchangeId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int ExchangeId
		{
			get
			{
				return this._exchangeId;
			}
			set
			{
				if ((this._exchangeId != value))
				{
					if (this._workExchange.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExchangeIdChanging(value);
					this.SendPropertyChanging();
					this._exchangeId = value;
					this.SendPropertyChanged("ExchangeId");
					this.OnExchangeIdChanged();
				}
			}
		}
		
		[Column(Storage="_acceptType", DbType="tinyint NOT NULL", IsPrimaryKey=true)]
		public byte AcceptType
		{
			get
			{
				return this._acceptType;
			}
			set
			{
				if ((this._acceptType != value))
				{
					this.OnAcceptTypeChanging(value);
					this.SendPropertyChanging();
					this._acceptType = value;
					this.SendPropertyChanged("AcceptType");
					this.OnAcceptTypeChanged();
				}
			}
		}
		
		[Column(Storage="_acceptId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int AcceptId
		{
			get
			{
				return this._acceptId;
			}
			set
			{
				if ((this._acceptId != value))
				{
					this.OnAcceptIdChanging(value);
					this.SendPropertyChanging();
					this._acceptId = value;
					this.SendPropertyChanged("AcceptId");
					this.OnAcceptIdChanged();
				}
			}
		}
		
		[Association(Name="WorkExchange_WorkExchangeAccept", Storage="_workExchange", ThisKey="ExchangeId", OtherKey="ExchangeId", IsForeignKey=true, DeleteOnNull=true)]
		public WorkExchange WorkExchange
		{
			get
			{
				return this._workExchange.Entity;
			}
			set
			{
				WorkExchange previousValue = this._workExchange.Entity;
				if (((previousValue != value) 
							|| (this._workExchange.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._workExchange.Entity = null;
						previousValue.WorkExchangeAcceptList.Remove(this);
					}
					this._workExchange.Entity = value;
					if ((value != null))
					{
						value.WorkExchangeAcceptList.Add(this);
						this._exchangeId = value.ExchangeId;
					}
					else
					{
						this._exchangeId = default(int);
					}
					this.SendPropertyChanged("WorkExchange");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_WorkExchangeReply")]
	public partial class WorkExchangeReply : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _replyId;
		
		private System.Nullable<int> _exchangeId;
		
		private string _description;
		
		private System.Nullable<int> _operatorId;
		
		private string _operatorName;
		
		private System.DateTime _replyTime;
		
		private string _isAnonymous;
		
		private string _isDelete;
		
		private EntityRef<WorkExchange> _workExchange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReplyIdChanging(int value);
    partial void OnReplyIdChanged();
    partial void OnExchangeIdChanging(System.Nullable<int> value);
    partial void OnExchangeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnReplyTimeChanging(System.DateTime value);
    partial void OnReplyTimeChanged();
    partial void OnIsAnonymousChanging(string value);
    partial void OnIsAnonymousChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public WorkExchangeReply()
		{
			this._workExchange = default(EntityRef<WorkExchange>);
			OnCreated();
		}
		
		[Column(Storage="_replyId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReplyId
		{
			get
			{
				return this._replyId;
			}
			set
			{
				if ((this._replyId != value))
				{
					this.OnReplyIdChanging(value);
					this.SendPropertyChanging();
					this._replyId = value;
					this.SendPropertyChanged("ReplyId");
					this.OnReplyIdChanged();
				}
			}
		}
		
		[Column(Storage="_exchangeId", DbType="int")]
		public System.Nullable<int> ExchangeId
		{
			get
			{
				return this._exchangeId;
			}
			set
			{
				if ((this._exchangeId != value))
				{
					if (this._workExchange.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExchangeIdChanging(value);
					this.SendPropertyChanging();
					this._exchangeId = value;
					this.SendPropertyChanged("ExchangeId");
					this.OnExchangeIdChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="nvarchar(MAX)")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(255)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_replyTime", DbType="datetime NOT NULL")]
		public System.DateTime ReplyTime
		{
			get
			{
				return this._replyTime;
			}
			set
			{
				if ((this._replyTime != value))
				{
					this.OnReplyTimeChanging(value);
					this.SendPropertyChanging();
					this._replyTime = value;
					this.SendPropertyChanged("ReplyTime");
					this.OnReplyTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isAnonymous", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsAnonymous
		{
			get
			{
				return this._isAnonymous;
			}
			set
			{
				if ((this._isAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._isAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Association(Name="WorkExchange_WorkExchangeReply", Storage="_workExchange", ThisKey="ExchangeId", OtherKey="ExchangeId", IsForeignKey=true)]
		public WorkExchange WorkExchange
		{
			get
			{
				return this._workExchange.Entity;
			}
			set
			{
				WorkExchange previousValue = this._workExchange.Entity;
				if (((previousValue != value) 
							|| (this._workExchange.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._workExchange.Entity = null;
						previousValue.WorkExchangeReplyList.Remove(this);
					}
					this._workExchange.Entity = value;
					if ((value != null))
					{
						value.WorkExchangeReplyList.Add(this);
						this._exchangeId = value.ExchangeId;
					}
					else
					{
						this._exchangeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkExchange");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_WorkPlan")]
	public partial class WorkPlan : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _planId;
		
		private int _companyId;
		
		private string _title;
		
		private string _description;
		
		private string _filePath;
		
		private string _remark;
		
		private int _operatorId;
		
		private string _operatorName;
		
		private System.Nullable<System.DateTime> _expectedDate;
		
		private System.Nullable<System.DateTime> _actualDate;
		
		private byte _status;
		
		private string _departmentComment;
		
		private string _managerComment;
		
		private System.DateTime _createTime;
		
		private System.Nullable<System.DateTime> _lastTime;
		
		private string _isDelete;
		
		private string _planNO;
		
		private EntitySet<WorkPlanAccept> _workPlanAcceptList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanIdChanging(int value);
    partial void OnPlanIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnExpectedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedDateChanged();
    partial void OnActualDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnDepartmentCommentChanging(string value);
    partial void OnDepartmentCommentChanged();
    partial void OnManagerCommentChanging(string value);
    partial void OnManagerCommentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnLastTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    partial void OnPlanNOChanging(string value);
    partial void OnPlanNOChanged();
    #endregion
		
		public WorkPlan()
		{
			this._workPlanAcceptList = new EntitySet<WorkPlanAccept>(new Action<WorkPlanAccept>(this.attach_workPlanAcceptList), new Action<WorkPlanAccept>(this.detach_workPlanAcceptList));
			OnCreated();
		}
		
		[Column(Storage="_planId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlanId
		{
			get
			{
				return this._planId;
			}
			set
			{
				if ((this._planId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._planId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(255)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="nvarchar(MAX)")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(255)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_expectedDate", DbType="datetime")]
		public System.Nullable<System.DateTime> ExpectedDate
		{
			get
			{
				return this._expectedDate;
			}
			set
			{
				if ((this._expectedDate != value))
				{
					this.OnExpectedDateChanging(value);
					this.SendPropertyChanging();
					this._expectedDate = value;
					this.SendPropertyChanged("ExpectedDate");
					this.OnExpectedDateChanged();
				}
			}
		}
		
		[Column(Storage="_actualDate", DbType="datetime")]
		public System.Nullable<System.DateTime> ActualDate
		{
			get
			{
				return this._actualDate;
			}
			set
			{
				if ((this._actualDate != value))
				{
					this.OnActualDateChanging(value);
					this.SendPropertyChanging();
					this._actualDate = value;
					this.SendPropertyChanged("ActualDate");
					this.OnActualDateChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="tinyint NOT NULL")]
		public byte Status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_departmentComment", DbType="nvarchar(MAX)")]
		public string DepartmentComment
		{
			get
			{
				return this._departmentComment;
			}
			set
			{
				if ((this._departmentComment != value))
				{
					this.OnDepartmentCommentChanging(value);
					this.SendPropertyChanging();
					this._departmentComment = value;
					this.SendPropertyChanged("DepartmentComment");
					this.OnDepartmentCommentChanged();
				}
			}
		}
		
		[Column(Storage="_managerComment", DbType="nvarchar(MAX)")]
		public string ManagerComment
		{
			get
			{
				return this._managerComment;
			}
			set
			{
				if ((this._managerComment != value))
				{
					this.OnManagerCommentChanging(value);
					this.SendPropertyChanging();
					this._managerComment = value;
					this.SendPropertyChanged("ManagerComment");
					this.OnManagerCommentChanged();
				}
			}
		}
		
		[Column(Storage="_createTime", DbType="datetime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_lastTime", DbType="datetime")]
		public System.Nullable<System.DateTime> LastTime
		{
			get
			{
				return this._lastTime;
			}
			set
			{
				if ((this._lastTime != value))
				{
					this.OnLastTimeChanging(value);
					this.SendPropertyChanging();
					this._lastTime = value;
					this.SendPropertyChanged("LastTime");
					this.OnLastTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_planNO", DbType="nvarchar(255)")]
		public string PlanNO
		{
			get
			{
				return this._planNO;
			}
			set
			{
				if ((this._planNO != value))
				{
					this.OnPlanNOChanging(value);
					this.SendPropertyChanging();
					this._planNO = value;
					this.SendPropertyChanged("PlanNO");
					this.OnPlanNOChanged();
				}
			}
		}
		
		[Association(Name="WorkPlan_WorkPlanAccept", Storage="_workPlanAcceptList", ThisKey="PlanId", OtherKey="PlanId")]
		public EntitySet<WorkPlanAccept> WorkPlanAcceptList
		{
			get
			{
				return this._workPlanAcceptList;
			}
			set
			{
				this._workPlanAcceptList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_workPlanAcceptList(WorkPlanAccept entity)
		{
			this.SendPropertyChanging();
			entity.WorkPlan = this;
		}
		
		private void detach_workPlanAcceptList(WorkPlanAccept entity)
		{
			this.SendPropertyChanging();
			entity.WorkPlan = null;
		}
	}
	
	[Table(Name="dbo.tbl_WorkPlanAccept")]
	public partial class WorkPlanAccept : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _planId;
		
		private int _accetpId;
		
		private EntityRef<WorkPlan> _workPlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanIdChanging(int value);
    partial void OnPlanIdChanged();
    partial void OnAccetpIdChanging(int value);
    partial void OnAccetpIdChanged();
    #endregion
		
		public WorkPlanAccept()
		{
			this._workPlan = default(EntityRef<WorkPlan>);
			OnCreated();
		}
		
		[Column(Storage="_planId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int PlanId
		{
			get
			{
				return this._planId;
			}
			set
			{
				if ((this._planId != value))
				{
					if (this._workPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._planId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[Column(Storage="_accetpId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int AccetpId
		{
			get
			{
				return this._accetpId;
			}
			set
			{
				if ((this._accetpId != value))
				{
					this.OnAccetpIdChanging(value);
					this.SendPropertyChanging();
					this._accetpId = value;
					this.SendPropertyChanged("AccetpId");
					this.OnAccetpIdChanged();
				}
			}
		}
		
		[Association(Name="WorkPlan_WorkPlanAccept", Storage="_workPlan", ThisKey="PlanId", OtherKey="PlanId", IsForeignKey=true, DeleteOnNull=true)]
		public WorkPlan WorkPlan
		{
			get
			{
				return this._workPlan.Entity;
			}
			set
			{
				WorkPlan previousValue = this._workPlan.Entity;
				if (((previousValue != value) 
							|| (this._workPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._workPlan.Entity = null;
						previousValue.WorkPlanAcceptList.Remove(this);
					}
					this._workPlan.Entity = value;
					if ((value != null))
					{
						value.WorkPlanAcceptList.Add(this);
						this._planId = value.PlanId;
					}
					else
					{
						this._planId = default(int);
					}
					this.SendPropertyChanged("WorkPlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_WorkReport")]
	public partial class WorkReport : LinqEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reportId;
		
		private int _companyId;
		
		private string _title;
		
		private string _description;
		
		private string _filePath;
		
		private int _departmentId;
		
		private int _operatorId;
		
		private string _operatorName;
		
		private System.DateTime _reportingTime;
		
		private byte _status;
		
		private string _comment;
		
		private System.Nullable<int> _checkerId;
		
		private System.Nullable<System.DateTime> _checkTime;
		
		private string _isDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnOperatorIdChanging(int value);
    partial void OnOperatorIdChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnReportingTimeChanging(System.DateTime value);
    partial void OnReportingTimeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCheckerIdChanging(System.Nullable<int> value);
    partial void OnCheckerIdChanged();
    partial void OnCheckTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckTimeChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public WorkReport()
		{
			OnCreated();
		}
		
		[Column(Storage="_reportId", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportId
		{
			get
			{
				return this._reportId;
			}
			set
			{
				if ((this._reportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._reportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(255)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="nvarchar(MAX)")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(255)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._filePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(255)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("OperatorName");
					this.OnOperatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_reportingTime", DbType="datetime NOT NULL")]
		public System.DateTime ReportingTime
		{
			get
			{
				return this._reportingTime;
			}
			set
			{
				if ((this._reportingTime != value))
				{
					this.OnReportingTimeChanging(value);
					this.SendPropertyChanging();
					this._reportingTime = value;
					this.SendPropertyChanged("ReportingTime");
					this.OnReportingTimeChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="tinyint NOT NULL")]
		public byte Status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_comment", DbType="nvarchar(MAX)")]
		public string Comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_checkerId", DbType="int")]
		public System.Nullable<int> CheckerId
		{
			get
			{
				return this._checkerId;
			}
			set
			{
				if ((this._checkerId != value))
				{
					this.OnCheckerIdChanging(value);
					this.SendPropertyChanging();
					this._checkerId = value;
					this.SendPropertyChanged("CheckerId");
					this.OnCheckerIdChanged();
				}
			}
		}
		
		[Column(Storage="_checkTime", DbType="datetime")]
		public System.Nullable<System.DateTime> CheckTime
		{
			get
			{
				return this._checkTime;
			}
			set
			{
				if ((this._checkTime != value))
				{
					this.OnCheckTimeChanging(value);
					this.SendPropertyChanging();
					this._checkTime = value;
					this.SendPropertyChanged("CheckTime");
					this.OnCheckTimeChanged();
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.View_AceptNews")]
	public partial class ViewAceptNews : LinqEntityBase
	{
		
		private int _id;
		
		private int _companyId;
		
		private string _title;
		
		private System.Nullable<int> _views;
		
		private string _iisuer;
		
		private System.DateTime _iisuerTime;
		
		private int _newId;
		
		private byte _acceptType;
		
		private int _acceptId;
		
		private string _isDelete;
		
		public ViewAceptNews()
		{
		}
		
		[Column(Name="ID", Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_title", DbType="nvarchar(100)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
		
		[Column(Storage="_views", DbType="int")]
		public System.Nullable<int> Views
		{
			get
			{
				return this._views;
			}
			set
			{
				if ((this._views != value))
				{
					this._views = value;
				}
			}
		}
		
		[Column(Storage="_iisuer", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string Iisuer
		{
			get
			{
				return this._iisuer;
			}
			set
			{
				if ((this._iisuer != value))
				{
					this._iisuer = value;
				}
			}
		}
		
		[Column(Storage="_iisuerTime", DbType="datetime NOT NULL")]
		public System.DateTime IisuerTime
		{
			get
			{
				return this._iisuerTime;
			}
			set
			{
				if ((this._iisuerTime != value))
				{
					this._iisuerTime = value;
				}
			}
		}
		
		[Column(Storage="_newId", DbType="int NOT NULL")]
		public int NewId
		{
			get
			{
				return this._newId;
			}
			set
			{
				if ((this._newId != value))
				{
					this._newId = value;
				}
			}
		}
		
		[Column(Storage="_acceptType", DbType="tinyint NOT NULL")]
		public byte AcceptType
		{
			get
			{
				return this._acceptType;
			}
			set
			{
				if ((this._acceptType != value))
				{
					this._acceptType = value;
				}
			}
		}
		
		[Column(Storage="_acceptId", DbType="int NOT NULL")]
		public int AcceptId
		{
			get
			{
				return this._acceptId;
			}
			set
			{
				if ((this._acceptId != value))
				{
					this._acceptId = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_AreaUserInfo")]
	public partial class ViewAreaUserInfo : LinqEntityBase
	{
		
		private int _id;
		
		private string _areaName;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _isDelete;
		
		private int _userId;
		
		private int _areaId;
		
		private string _contactName;
		
		private string _isUserDelete;
		
		private string _isEnable;
		
		private System.Nullable<byte> _userType;
		
		public ViewAreaUserInfo()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_areaName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._areaName;
			}
			set
			{
				if ((this._areaName != value))
				{
					this._areaName = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this._operatorId = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
		
		[Column(Storage="_userId", DbType="int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this._userId = value;
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this._areaId = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_isUserDelete", DbType="char(1)")]
		public string IsUserDelete
		{
			get
			{
				return this._isUserDelete;
			}
			set
			{
				if ((this._isUserDelete != value))
				{
					this._isUserDelete = value;
				}
			}
		}
		
		[Column(Storage="_isEnable", DbType="char(1)")]
		public string IsEnable
		{
			get
			{
				return this._isEnable;
			}
			set
			{
				if ((this._isEnable != value))
				{
					this._isEnable = value;
				}
			}
		}
		
		[Column(Storage="_userType", DbType="tinyint")]
		public System.Nullable<byte> UserType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					this._userType = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_AttendanceInfo")]
	public partial class ViewAttendanceInfo : LinqEntityBase
	{
		
		private int _staffNo;
		
		private int _companyid;
		
		private string _staffName;
		
		private string _departmentXML;
		
		private System.Nullable<int> _punctuality;
		
		private System.Nullable<int> _late;
		
		private System.Nullable<int> _leaveEarly;
		
		private System.Nullable<int> _absenteeism;
		
		private System.Nullable<int> _vacation;
		
		private System.Nullable<int> _out;
		
		private System.Nullable<int> _group;
		
		private System.Nullable<int> _askLeave;
		
		private System.Nullable<decimal> _overTime;
		
		private string _departmentId;
		
		private string _archiveNo;
		
		private System.DateTime _issueTime;
		
		public ViewAttendanceInfo()
		{
		}
		
		[Column(Storage="_staffNo", DbType="int NOT NULL")]
		public int StaffNo
		{
			get
			{
				return this._staffNo;
			}
			set
			{
				if ((this._staffNo != value))
				{
					this._staffNo = value;
				}
			}
		}
		
		[Column(Name="companyid", Storage="_companyid", DbType="int NOT NULL")]
		public int Companyid
		{
			get
			{
				return this._companyid;
			}
			set
			{
				if ((this._companyid != value))
				{
					this._companyid = value;
				}
			}
		}
		
		[Column(Storage="_staffName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._staffName;
			}
			set
			{
				if ((this._staffName != value))
				{
					this._staffName = value;
				}
			}
		}
		
		[Column(Storage="_departmentXML", DbType="nvarchar(MAX)")]
		public string DepartmentXML
		{
			get
			{
				return this._departmentXML;
			}
			set
			{
				if ((this._departmentXML != value))
				{
					this._departmentXML = value;
				}
			}
		}
		
		[Column(Storage="_punctuality", DbType="int")]
		public System.Nullable<int> Punctuality
		{
			get
			{
				return this._punctuality;
			}
			set
			{
				if ((this._punctuality != value))
				{
					this._punctuality = value;
				}
			}
		}
		
		[Column(Storage="_late", DbType="int")]
		public System.Nullable<int> Late
		{
			get
			{
				return this._late;
			}
			set
			{
				if ((this._late != value))
				{
					this._late = value;
				}
			}
		}
		
		[Column(Storage="_leaveEarly", DbType="int")]
		public System.Nullable<int> LeaveEarly
		{
			get
			{
				return this._leaveEarly;
			}
			set
			{
				if ((this._leaveEarly != value))
				{
					this._leaveEarly = value;
				}
			}
		}
		
		[Column(Storage="_absenteeism", DbType="int")]
		public System.Nullable<int> Absenteeism
		{
			get
			{
				return this._absenteeism;
			}
			set
			{
				if ((this._absenteeism != value))
				{
					this._absenteeism = value;
				}
			}
		}
		
		[Column(Storage="_vacation", DbType="int")]
		public System.Nullable<int> Vacation
		{
			get
			{
				return this._vacation;
			}
			set
			{
				if ((this._vacation != value))
				{
					this._vacation = value;
				}
			}
		}
		
		[Column(Storage="_out", DbType="int")]
		public System.Nullable<int> Out
		{
			get
			{
				return this._out;
			}
			set
			{
				if ((this._out != value))
				{
					this._out = value;
				}
			}
		}
		
		[Column(Storage="_group", DbType="int")]
		public System.Nullable<int> Group
		{
			get
			{
				return this._group;
			}
			set
			{
				if ((this._group != value))
				{
					this._group = value;
				}
			}
		}
		
		[Column(Storage="_askLeave", DbType="int")]
		public System.Nullable<int> AskLeave
		{
			get
			{
				return this._askLeave;
			}
			set
			{
				if ((this._askLeave != value))
				{
					this._askLeave = value;
				}
			}
		}
		
		[Column(Storage="_overTime", DbType="decimal(38,4)")]
		public System.Nullable<decimal> OverTime
		{
			get
			{
				return this._overTime;
			}
			set
			{
				if ((this._overTime != value))
				{
					this._overTime = value;
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="varchar(1000)")]
		public string DepartmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this._departmentId = value;
				}
			}
		}
		
		[Column(Storage="_archiveNo", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		public string ArchiveNo
		{
			get
			{
				return this._archiveNo;
			}
			set
			{
				if ((this._archiveNo != value))
				{
					this._archiveNo = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_DeptUser")]
	public partial class ViewDeptUser : LinqEntityBase
	{
		
		private int _id;
		
		private int _companyId;
		
		private string _userName;
		
		private string _password;
		
		private string _mD5Password;
		
		private byte _userType;
		
		private string _contactName;
		
		private string _contactSex;
		
		private string _contactTel;
		
		private string _contactFax;
		
		private string _contactMobile;
		
		private string _contactEmail;
		
		private string _qq;
		
		private string _msn;
		
		private string _jobName;
		
		private string _lastLoginIP;
		
		private System.Nullable<System.DateTime> _lastLoginTime;
		
		private int _roleID;
		
		private string _permissionList;
		
		private string _peopProfile;
		
		private string _remark;
		
		private string _isDelete;
		
		private string _isEnable;
		
		private string _isAdmin;
		
		private System.DateTime _issueTime;
		
		private string _departName;
		
		private int _departId;
		
		private int _superviseDepartId;
		
		private string _superviseDepartName;
		
		private int _departManger;
		
		public ViewDeptUser()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_userName", DbType="nvarchar(100)")]
		public string UserName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this._userName = value;
				}
			}
		}
		
		[Column(Storage="_password", DbType="varchar(50)")]
		public string Password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[Column(Storage="_mD5Password", DbType="varchar(50)")]
		public string MD5Password
		{
			get
			{
				return this._mD5Password;
			}
			set
			{
				if ((this._mD5Password != value))
				{
					this._mD5Password = value;
				}
			}
		}
		
		[Column(Storage="_userType", DbType="tinyint NOT NULL")]
		public byte UserType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					this._userType = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_contactSex", DbType="char(1)")]
		public string ContactSex
		{
			get
			{
				return this._contactSex;
			}
			set
			{
				if ((this._contactSex != value))
				{
					this._contactSex = value;
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(50)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this._contactTel = value;
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="nvarchar(50)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this._contactFax = value;
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="nvarchar(50)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this._contactMobile = value;
				}
			}
		}
		
		[Column(Storage="_contactEmail", DbType="nvarchar(50)")]
		public string ContactEmail
		{
			get
			{
				return this._contactEmail;
			}
			set
			{
				if ((this._contactEmail != value))
				{
					this._contactEmail = value;
				}
			}
		}
		
		[Column(Name="QQ", Storage="_qq", DbType="nvarchar(250)")]
		public string Qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this._qq = value;
				}
			}
		}
		
		[Column(Name="MSN", Storage="_msn", DbType="nvarchar(50)")]
		public string Msn
		{
			get
			{
				return this._msn;
			}
			set
			{
				if ((this._msn != value))
				{
					this._msn = value;
				}
			}
		}
		
		[Column(Storage="_jobName", DbType="nvarchar(250)")]
		public string JobName
		{
			get
			{
				return this._jobName;
			}
			set
			{
				if ((this._jobName != value))
				{
					this._jobName = value;
				}
			}
		}
		
		[Column(Storage="_lastLoginIP", DbType="varchar(16)")]
		public string LastLoginIP
		{
			get
			{
				return this._lastLoginIP;
			}
			set
			{
				if ((this._lastLoginIP != value))
				{
					this._lastLoginIP = value;
				}
			}
		}
		
		[Column(Storage="_lastLoginTime", DbType="datetime")]
		public System.Nullable<System.DateTime> LastLoginTime
		{
			get
			{
				return this._lastLoginTime;
			}
			set
			{
				if ((this._lastLoginTime != value))
				{
					this._lastLoginTime = value;
				}
			}
		}
		
		[Column(Storage="_roleID", DbType="int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._roleID;
			}
			set
			{
				if ((this._roleID != value))
				{
					this._roleID = value;
				}
			}
		}
		
		[Column(Storage="_permissionList", DbType="varchar(MAX)")]
		public string PermissionList
		{
			get
			{
				return this._permissionList;
			}
			set
			{
				if ((this._permissionList != value))
				{
					this._permissionList = value;
				}
			}
		}
		
		[Column(Storage="_peopProfile", DbType="nvarchar(500)")]
		public string PeopProfile
		{
			get
			{
				return this._peopProfile;
			}
			set
			{
				if ((this._peopProfile != value))
				{
					this._peopProfile = value;
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(500)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
		
		[Column(Storage="_isEnable", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsEnable
		{
			get
			{
				return this._isEnable;
			}
			set
			{
				if ((this._isEnable != value))
				{
					this._isEnable = value;
				}
			}
		}
		
		[Column(Storage="_isAdmin", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsAdmin
		{
			get
			{
				return this._isAdmin;
			}
			set
			{
				if ((this._isAdmin != value))
				{
					this._isAdmin = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_departName", DbType="nvarchar(50)")]
		public string DepartName
		{
			get
			{
				return this._departName;
			}
			set
			{
				if ((this._departName != value))
				{
					this._departName = value;
				}
			}
		}
		
		[Column(Storage="_departId", DbType="int NOT NULL")]
		public int DepartId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this._departId = value;
				}
			}
		}
		
		[Column(Storage="_superviseDepartId", DbType="int NOT NULL")]
		public int SuperviseDepartId
		{
			get
			{
				return this._superviseDepartId;
			}
			set
			{
				if ((this._superviseDepartId != value))
				{
					this._superviseDepartId = value;
				}
			}
		}
		
		[Column(Storage="_superviseDepartName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string SuperviseDepartName
		{
			get
			{
				return this._superviseDepartName;
			}
			set
			{
				if ((this._superviseDepartName != value))
				{
					this._superviseDepartName = value;
				}
			}
		}
		
		[Column(Storage="_departManger", DbType="int NOT NULL")]
		public int DepartManger
		{
			get
			{
				return this._departManger;
			}
			set
			{
				if ((this._departManger != value))
				{
					this._departManger = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_EarningsStatistic")]
	public partial class ViewEarningsStatistic : LinqEntityBase
	{
		
		private string _tourId;
		
		private int _areaId;
		
		private decimal _grossProfit;
		
		private decimal _distributionAmount;
		
		private byte _tourType;
		
		private System.Nullable<System.DateTime> _leaveDate;
		
		private string _isDelete;
		
		private System.Nullable<System.DateTime> _endDateTime;
		
		private int _companyId;
		
		private int _operatorId;
		
		private string _releaseType;
		
		private string _tourCode;
		
		private string _routeName;
		
		private System.Nullable<decimal> _totalAllIncome;
		
		private System.Nullable<decimal> _totalAllExpenses;
		
		private string _areaName;
		
		private System.Nullable<int> _departId;
		
		private string _departName;
		
		private string _logistics;
		
		private string _salerInfo;
		
		private System.Nullable<int> _tourPeopleNum;
		
		private decimal _totalOtherIncome;
		
		private string _orders;
		
		private int _pkid;
		
		private string _planTickets;
		
		private string _planAgencys;
		
		private string _planSingles;
		
		private System.Nullable<decimal> _reimburseAmount;
		
		public ViewEarningsStatistic()
		{
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this._tourId = value;
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this._areaId = value;
				}
			}
		}
		
		[Column(Storage="_grossProfit", DbType="money NOT NULL")]
		public decimal GrossProfit
		{
			get
			{
				return this._grossProfit;
			}
			set
			{
				if ((this._grossProfit != value))
				{
					this._grossProfit = value;
				}
			}
		}
		
		[Column(Storage="_distributionAmount", DbType="money NOT NULL")]
		public decimal DistributionAmount
		{
			get
			{
				return this._distributionAmount;
			}
			set
			{
				if ((this._distributionAmount != value))
				{
					this._distributionAmount = value;
				}
			}
		}
		
		[Column(Storage="_tourType", DbType="tinyint NOT NULL")]
		public byte TourType
		{
			get
			{
				return this._tourType;
			}
			set
			{
				if ((this._tourType != value))
				{
					this._tourType = value;
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this._leaveDate = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
		
		[Column(Storage="_endDateTime", DbType="datetime")]
		public System.Nullable<System.DateTime> EndDateTime
		{
			get
			{
				return this._endDateTime;
			}
			set
			{
				if ((this._endDateTime != value))
				{
					this._endDateTime = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this._operatorId = value;
				}
			}
		}
		
		[Column(Storage="_releaseType", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string ReleaseType
		{
			get
			{
				return this._releaseType;
			}
			set
			{
				if ((this._releaseType != value))
				{
					this._releaseType = value;
				}
			}
		}
		
		[Column(Storage="_tourCode", DbType="nvarchar(50)")]
		public string TourCode
		{
			get
			{
				return this._tourCode;
			}
			set
			{
				if ((this._tourCode != value))
				{
					this._tourCode = value;
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(255)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this._routeName = value;
				}
			}
		}
		
		[Column(Storage="_totalAllIncome", DbType="money")]
		public System.Nullable<decimal> TotalAllIncome
		{
			get
			{
				return this._totalAllIncome;
			}
			set
			{
				if ((this._totalAllIncome != value))
				{
					this._totalAllIncome = value;
				}
			}
		}
		
		[Column(Storage="_totalAllExpenses", DbType="money")]
		public System.Nullable<decimal> TotalAllExpenses
		{
			get
			{
				return this._totalAllExpenses;
			}
			set
			{
				if ((this._totalAllExpenses != value))
				{
					this._totalAllExpenses = value;
				}
			}
		}
		
		[Column(Storage="_areaName", DbType="nvarchar(255)")]
		public string AreaName
		{
			get
			{
				return this._areaName;
			}
			set
			{
				if ((this._areaName != value))
				{
					this._areaName = value;
				}
			}
		}
		
		[Column(Storage="_departId", DbType="int")]
		public System.Nullable<int> DepartId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this._departId = value;
				}
			}
		}
		
		[Column(Storage="_departName", DbType="nvarchar(50)")]
		public string DepartName
		{
			get
			{
				return this._departName;
			}
			set
			{
				if ((this._departName != value))
				{
					this._departName = value;
				}
			}
		}
		
		[Column(Storage="_logistics", DbType="nvarchar(MAX)")]
		public string Logistics
		{
			get
			{
				return this._logistics;
			}
			set
			{
				if ((this._logistics != value))
				{
					this._logistics = value;
				}
			}
		}
		
		[Column(Storage="_salerInfo", DbType="nvarchar(MAX)")]
		public string SalerInfo
		{
			get
			{
				return this._salerInfo;
			}
			set
			{
				if ((this._salerInfo != value))
				{
					this._salerInfo = value;
				}
			}
		}
		
		[Column(Storage="_tourPeopleNum", DbType="int")]
		public System.Nullable<int> TourPeopleNum
		{
			get
			{
				return this._tourPeopleNum;
			}
			set
			{
				if ((this._tourPeopleNum != value))
				{
					this._tourPeopleNum = value;
				}
			}
		}
		
		[Column(Storage="_totalOtherIncome", DbType="money NOT NULL")]
		public decimal TotalOtherIncome
		{
			get
			{
				return this._totalOtherIncome;
			}
			set
			{
				if ((this._totalOtherIncome != value))
				{
					this._totalOtherIncome = value;
				}
			}
		}
		
		[Column(Storage="_orders", DbType="nvarchar(MAX)")]
		public string Orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				if ((this._orders != value))
				{
					this._orders = value;
				}
			}
		}
		
		[Column(Name="PKID", Storage="_pkid", DbType="int NOT NULL")]
		public int Pkid
		{
			get
			{
				return this._pkid;
			}
			set
			{
				if ((this._pkid != value))
				{
					this._pkid = value;
				}
			}
		}
		
		[Column(Storage="_planTickets", DbType="nvarchar(MAX)")]
		public string PlanTickets
		{
			get
			{
				return this._planTickets;
			}
			set
			{
				if ((this._planTickets != value))
				{
					this._planTickets = value;
				}
			}
		}
		
		[Column(Storage="_planAgencys", DbType="nvarchar(MAX)")]
		public string PlanAgencys
		{
			get
			{
				return this._planAgencys;
			}
			set
			{
				if ((this._planAgencys != value))
				{
					this._planAgencys = value;
				}
			}
		}
		
		[Column(Storage="_planSingles", DbType="nvarchar(MAX)")]
		public string PlanSingles
		{
			get
			{
				return this._planSingles;
			}
			set
			{
				if ((this._planSingles != value))
				{
					this._planSingles = value;
				}
			}
		}
		
		[Column(Storage="_reimburseAmount", DbType="money")]
		public System.Nullable<decimal> ReimburseAmount
		{
			get
			{
				return this._reimburseAmount;
			}
			set
			{
				if ((this._reimburseAmount != value))
				{
					this._reimburseAmount = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_InayatStatistic")]
	public partial class ViewInayatStatistic : LinqEntityBase
	{
		
		private int _sellCompanyId;
		
		private int _areaId;
		
		private int _salerId;
		
		private string _salerName;
		
		private System.DateTime _issueTime;
		
		private System.Nullable<int> _departId;
		
		private string _departName;
		
		private string _isDelete;
		
		private byte _tourClassId;
		
		private System.Nullable<int> _peopleCount;
		
		private System.Nullable<int> _peopleDays;
		
		private int _viewOperatorId;
		
		private byte _orderState;
		
		public ViewInayatStatistic()
		{
		}
		
		[Column(Storage="_sellCompanyId", DbType="int NOT NULL")]
		public int SellCompanyId
		{
			get
			{
				return this._sellCompanyId;
			}
			set
			{
				if ((this._sellCompanyId != value))
				{
					this._sellCompanyId = value;
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this._areaId = value;
				}
			}
		}
		
		[Column(Storage="_salerId", DbType="int NOT NULL")]
		public int SalerId
		{
			get
			{
				return this._salerId;
			}
			set
			{
				if ((this._salerId != value))
				{
					this._salerId = value;
				}
			}
		}
		
		[Column(Storage="_salerName", DbType="nvarchar(100)")]
		public string SalerName
		{
			get
			{
				return this._salerName;
			}
			set
			{
				if ((this._salerName != value))
				{
					this._salerName = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_departId", DbType="int")]
		public System.Nullable<int> DepartId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this._departId = value;
				}
			}
		}
		
		[Column(Storage="_departName", DbType="nvarchar(50)")]
		public string DepartName
		{
			get
			{
				return this._departName;
			}
			set
			{
				if ((this._departName != value))
				{
					this._departName = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
		
		[Column(Storage="_tourClassId", DbType="tinyint NOT NULL")]
		public byte TourClassId
		{
			get
			{
				return this._tourClassId;
			}
			set
			{
				if ((this._tourClassId != value))
				{
					this._tourClassId = value;
				}
			}
		}
		
		[Column(Storage="_peopleCount", DbType="int")]
		public System.Nullable<int> PeopleCount
		{
			get
			{
				return this._peopleCount;
			}
			set
			{
				if ((this._peopleCount != value))
				{
					this._peopleCount = value;
				}
			}
		}
		
		[Column(Storage="_peopleDays", DbType="int")]
		public System.Nullable<int> PeopleDays
		{
			get
			{
				return this._peopleDays;
			}
			set
			{
				if ((this._peopleDays != value))
				{
					this._peopleDays = value;
				}
			}
		}
		
		[Column(Storage="_viewOperatorId", DbType="int NOT NULL")]
		public int ViewOperatorId
		{
			get
			{
				return this._viewOperatorId;
			}
			set
			{
				if ((this._viewOperatorId != value))
				{
					this._viewOperatorId = value;
				}
			}
		}
		
		[Column(Storage="_orderState", DbType="tinyint NOT NULL")]
		public byte OrderState
		{
			get
			{
				return this._orderState;
			}
			set
			{
				if ((this._orderState != value))
				{
					this._orderState = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PayRemind_GetList")]
	public partial class ViewPayRemindGetList : LinqEntityBase
	{
		
		private int _id;
		
		private string _unitName;
		
		private int _companyId;
		
		private string _contactInfo;
		
		private System.Nullable<decimal> _totalAmount;
		
		private string _operatorInfo;
		
		private byte _supplierType;
		
		public ViewPayRemindGetList()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_unitName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._unitName;
			}
			set
			{
				if ((this._unitName != value))
				{
					this._unitName = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_contactInfo", DbType="nvarchar(MAX)")]
		public string ContactInfo
		{
			get
			{
				return this._contactInfo;
			}
			set
			{
				if ((this._contactInfo != value))
				{
					this._contactInfo = value;
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this._totalAmount = value;
				}
			}
		}
		
		[Column(Storage="_operatorInfo", DbType="nvarchar(MAX)")]
		public string OperatorInfo
		{
			get
			{
				return this._operatorInfo;
			}
			set
			{
				if ((this._operatorInfo != value))
				{
					this._operatorInfo = value;
				}
			}
		}
		
		[Column(Storage="_supplierType", DbType="tinyint NOT NULL")]
		public byte SupplierType
		{
			get
			{
				return this._supplierType;
			}
			set
			{
				if ((this._supplierType != value))
				{
					this._supplierType = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_PlanTicket")]
	public partial class ViewPlanTicket : LinqEntityBase
	{
		
		private int _id;
		
		private string _tourId;
		
		private string _orderId;
		
		private string _refundId;
		
		private byte _ticketType;
		
		private string _routeName;
		
		private byte _state;
		
		private string _fligthSegment;
		
		private string _tourCode;
		
		private System.Nullable<System.DateTime> _leaveDate;
		
		private string _saler;
		
		public ViewPlanTicket()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this._tourId = value;
				}
			}
		}
		
		[Column(Storage="_orderId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string OrderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					this._orderId = value;
				}
			}
		}
		
		[Column(Storage="_refundId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string RefundId
		{
			get
			{
				return this._refundId;
			}
			set
			{
				if ((this._refundId != value))
				{
					this._refundId = value;
				}
			}
		}
		
		[Column(Storage="_ticketType", DbType="tinyint NOT NULL")]
		public byte TicketType
		{
			get
			{
				return this._ticketType;
			}
			set
			{
				if ((this._ticketType != value))
				{
					this._ticketType = value;
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(50)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this._routeName = value;
				}
			}
		}
		
		[Column(Storage="_state", DbType="tinyint NOT NULL")]
		public byte State
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[Column(Storage="_fligthSegment", DbType="nvarchar(50)")]
		public string FligthSegment
		{
			get
			{
				return this._fligthSegment;
			}
			set
			{
				if ((this._fligthSegment != value))
				{
					this._fligthSegment = value;
				}
			}
		}
		
		[Column(Storage="_tourCode", DbType="nvarchar(50)")]
		public string TourCode
		{
			get
			{
				return this._tourCode;
			}
			set
			{
				if ((this._tourCode != value))
				{
					this._tourCode = value;
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this._leaveDate = value;
				}
			}
		}
		
		[Column(Name="saler", Storage="_saler", DbType="nvarchar(100)")]
		public string Saler
		{
			get
			{
				return this._saler;
			}
			set
			{
				if ((this._saler != value))
				{
					this._saler = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_ReceiptRemind_GetList")]
	public partial class ViewReceiptRemindGetList : LinqEntityBase
	{
		
		private int _id;
		
		private string _name;
		
		private string _contactName;
		
		private string _phone;
		
		private int _companyId;
		
		private System.Nullable<decimal> _arrearCash;
		
		private string _salerInfo;
		
		public ViewReceiptRemindGetList()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_name", DbType="nvarchar(250)")]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(255)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_phone", DbType="nvarchar(250)")]
		public string Phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_arrearCash", DbType="money")]
		public System.Nullable<decimal> ArrearCash
		{
			get
			{
				return this._arrearCash;
			}
			set
			{
				if ((this._arrearCash != value))
				{
					this._arrearCash = value;
				}
			}
		}
		
		[Column(Storage="_salerInfo", DbType="nvarchar(MAX)")]
		public string SalerInfo
		{
			get
			{
				return this._salerInfo;
			}
			set
			{
				if ((this._salerInfo != value))
				{
					this._salerInfo = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.view_SMS_AllPayedCompany")]
	public partial class ViewSMSAllPayedCompany : LinqEntityBase
	{
		
		private int _companyID;
		
		private string _companyName;
		
		private string _contactTel;
		
		private string _contactMobile;
		
		private decimal _accountMoney;
		
		private int _accountSMSNumber;
		
		private string _contactName;
		
		private string _contactQQ;
		
		private int _provinceId;
		
		private int _cityId;
		
		public ViewSMSAllPayedCompany()
		{
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this._companyID = value;
				}
			}
		}
		
		[Column(Storage="_companyName", DbType="nvarchar(500) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this._companyName = value;
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="varchar(100)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this._contactTel = value;
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="varchar(100)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this._contactMobile = value;
				}
			}
		}
		
		[Column(Storage="_accountMoney", DbType="money NOT NULL")]
		public decimal AccountMoney
		{
			get
			{
				return this._accountMoney;
			}
			set
			{
				if ((this._accountMoney != value))
				{
					this._accountMoney = value;
				}
			}
		}
		
		[Column(Storage="_accountSMSNumber", DbType="int NOT NULL")]
		public int AccountSMSNumber
		{
			get
			{
				return this._accountSMSNumber;
			}
			set
			{
				if ((this._accountSMSNumber != value))
				{
					this._accountSMSNumber = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_contactQQ", DbType="nvarchar(250)")]
		public string ContactQQ
		{
			get
			{
				return this._contactQQ;
			}
			set
			{
				if ((this._contactQQ != value))
				{
					this._contactQQ = value;
				}
			}
		}
		
		[Column(Storage="_provinceId", DbType="int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._provinceId;
			}
			set
			{
				if ((this._provinceId != value))
				{
					this._provinceId = value;
				}
			}
		}
		
		[Column(Storage="_cityId", DbType="int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._cityId;
			}
			set
			{
				if ((this._cityId != value))
				{
					this._cityId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.view_SMS_Customers")]
	public partial class ViewSMSCustomers : LinqEntityBase
	{
		
		private string _className;
		
		private string _customerCompanyName;
		
		private string _customerContactName;
		
		private int _classID;
		
		private string _reMark;
		
		private string _mobileNumber;
		
		private int _provinceId;
		
		private int _cityId;
		
		private System.DateTime _issueTime;
		
		private int _companyID;
		
		private int _userID;
		
		private string _id;
		
		public ViewSMSCustomers()
		{
		}
		
		[Column(Storage="_className", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._className;
			}
			set
			{
				if ((this._className != value))
				{
					this._className = value;
				}
			}
		}
		
		[Column(Storage="_customerCompanyName", DbType="nvarchar(250)")]
		public string CustomerCompanyName
		{
			get
			{
				return this._customerCompanyName;
			}
			set
			{
				if ((this._customerCompanyName != value))
				{
					this._customerCompanyName = value;
				}
			}
		}
		
		[Column(Storage="_customerContactName", DbType="nvarchar(100)")]
		public string CustomerContactName
		{
			get
			{
				return this._customerContactName;
			}
			set
			{
				if ((this._customerContactName != value))
				{
					this._customerContactName = value;
				}
			}
		}
		
		[Column(Storage="_classID", DbType="int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this._classID = value;
				}
			}
		}
		
		[Column(Storage="_reMark", DbType="nvarchar(300)")]
		public string ReMark
		{
			get
			{
				return this._reMark;
			}
			set
			{
				if ((this._reMark != value))
				{
					this._reMark = value;
				}
			}
		}
		
		[Column(Storage="_mobileNumber", DbType="nvarchar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._mobileNumber;
			}
			set
			{
				if ((this._mobileNumber != value))
				{
					this._mobileNumber = value;
				}
			}
		}
		
		[Column(Storage="_provinceId", DbType="int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._provinceId;
			}
			set
			{
				if ((this._provinceId != value))
				{
					this._provinceId = value;
				}
			}
		}
		
		[Column(Storage="_cityId", DbType="int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._cityId;
			}
			set
			{
				if ((this._cityId != value))
				{
					this._cityId = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this._companyID = value;
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this._userID = value;
				}
			}
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_SMS_Template")]
	public partial class ViewSMSTemplate : LinqEntityBase
	{
		
		private string _id;
		
		private int _companyID;
		
		private int _userID;
		
		private int _classID;
		
		private string _wordContent;
		
		private System.DateTime _issueTime;
		
		private string _className;
		
		public ViewSMSTemplate()
		{
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this._companyID = value;
				}
			}
		}
		
		[Column(Storage="_userID", DbType="int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this._userID = value;
				}
			}
		}
		
		[Column(Storage="_classID", DbType="int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this._classID = value;
				}
			}
		}
		
		[Column(Storage="_wordContent", DbType="nvarchar(300)")]
		public string WordContent
		{
			get
			{
				return this._wordContent;
			}
			set
			{
				if ((this._wordContent != value))
				{
					this._wordContent = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_className", DbType="nvarchar(50)")]
		public string ClassName
		{
			get
			{
				return this._className;
			}
			set
			{
				if ((this._className != value))
				{
					this._className = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.view_StatAllIncomeStatement")]
	public partial class ViewStatAllIncomeStatement : LinqEntityBase
	{
		
		private int _companyId;
		
		private decimal _totalAmount;
		
		private decimal _hasCheckAmount;
		
		private int _salerId;
		
		private int _areaId;
		
		private System.DateTime _leaveDate;
		
		private byte _tourType;
		
		private string _buyCompanyName;
		
		private int _buyCompanyId;
		
		private byte _orderState;
		
		public ViewStatAllIncomeStatement()
		{
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this._totalAmount = value;
				}
			}
		}
		
		[Column(Storage="_hasCheckAmount", DbType="money NOT NULL")]
		public decimal HasCheckAmount
		{
			get
			{
				return this._hasCheckAmount;
			}
			set
			{
				if ((this._hasCheckAmount != value))
				{
					this._hasCheckAmount = value;
				}
			}
		}
		
		[Column(Storage="_salerId", DbType="int NOT NULL")]
		public int SalerId
		{
			get
			{
				return this._salerId;
			}
			set
			{
				if ((this._salerId != value))
				{
					this._salerId = value;
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this._areaId = value;
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime NOT NULL")]
		public System.DateTime LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this._leaveDate = value;
				}
			}
		}
		
		[Column(Storage="_tourType", DbType="tinyint NOT NULL")]
		public byte TourType
		{
			get
			{
				return this._tourType;
			}
			set
			{
				if ((this._tourType != value))
				{
					this._tourType = value;
				}
			}
		}
		
		[Column(Storage="_buyCompanyName", DbType="nvarchar(250)")]
		public string BuyCompanyName
		{
			get
			{
				return this._buyCompanyName;
			}
			set
			{
				if ((this._buyCompanyName != value))
				{
					this._buyCompanyName = value;
				}
			}
		}
		
		[Column(Storage="_buyCompanyId", DbType="int NOT NULL")]
		public int BuyCompanyId
		{
			get
			{
				return this._buyCompanyId;
			}
			set
			{
				if ((this._buyCompanyId != value))
				{
					this._buyCompanyId = value;
				}
			}
		}
		
		[Column(Storage="_orderState", DbType="tinyint NOT NULL")]
		public byte OrderState
		{
			get
			{
				return this._orderState;
			}
			set
			{
				if ((this._orderState != value))
				{
					this._orderState = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_SysHandleLogs")]
	public partial class ViewSysHandleLogs : LinqEntityBase
	{
		
		private string _id;
		
		private int _operatorId;
		
		private int _depatId;
		
		private int _companyId;
		
		private int _moduleId;
		
		private int _eventCode;
		
		private string _eventMessage;
		
		private string _eventTitle;
		
		private System.DateTime _eventTime;
		
		private string _eventIp;
		
		private string _userName;
		
		private string _departName;
		
		public ViewSysHandleLogs()
		{
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this._operatorId = value;
				}
			}
		}
		
		[Column(Storage="_depatId", DbType="int NOT NULL")]
		public int DepatId
		{
			get
			{
				return this._depatId;
			}
			set
			{
				if ((this._depatId != value))
				{
					this._depatId = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_moduleId", DbType="int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._moduleId;
			}
			set
			{
				if ((this._moduleId != value))
				{
					this._moduleId = value;
				}
			}
		}
		
		[Column(Storage="_eventCode", DbType="int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._eventCode;
			}
			set
			{
				if ((this._eventCode != value))
				{
					this._eventCode = value;
				}
			}
		}
		
		[Column(Storage="_eventMessage", DbType="nvarchar(MAX)")]
		public string EventMessage
		{
			get
			{
				return this._eventMessage;
			}
			set
			{
				if ((this._eventMessage != value))
				{
					this._eventMessage = value;
				}
			}
		}
		
		[Column(Storage="_eventTitle", DbType="nvarchar(255)")]
		public string EventTitle
		{
			get
			{
				return this._eventTitle;
			}
			set
			{
				if ((this._eventTitle != value))
				{
					this._eventTitle = value;
				}
			}
		}
		
		[Column(Storage="_eventTime", DbType="datetime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._eventTime;
			}
			set
			{
				if ((this._eventTime != value))
				{
					this._eventTime = value;
				}
			}
		}
		
		[Column(Storage="_eventIp", DbType="nvarchar(20)")]
		public string EventIp
		{
			get
			{
				return this._eventIp;
			}
			set
			{
				if ((this._eventIp != value))
				{
					this._eventIp = value;
				}
			}
		}
		
		[Column(Storage="_userName", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this._userName = value;
				}
			}
		}
		
		[Column(Storage="_departName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string DepartName
		{
			get
			{
				return this._departName;
			}
			set
			{
				if ((this._departName != value))
				{
					this._departName = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TicketKind")]
	public partial class ViewTicketKind : LinqEntityBase
	{
		
		private System.Nullable<int> _peopleCount;
		
		private System.Nullable<decimal> _agencyPrice;
		
		private System.Nullable<decimal> _totalMoney;
		
		private System.Nullable<decimal> _price;
		
		private string _ticketid;
		
		public ViewTicketKind()
		{
		}
		
		[Column(Storage="_peopleCount", DbType="int")]
		public System.Nullable<int> PeopleCount
		{
			get
			{
				return this._peopleCount;
			}
			set
			{
				if ((this._peopleCount != value))
				{
					this._peopleCount = value;
				}
			}
		}
		
		[Column(Storage="_agencyPrice", DbType="money")]
		public System.Nullable<decimal> AgencyPrice
		{
			get
			{
				return this._agencyPrice;
			}
			set
			{
				if ((this._agencyPrice != value))
				{
					this._agencyPrice = value;
				}
			}
		}
		
		[Column(Storage="_totalMoney", DbType="money")]
		public System.Nullable<decimal> TotalMoney
		{
			get
			{
				return this._totalMoney;
			}
			set
			{
				if ((this._totalMoney != value))
				{
					this._totalMoney = value;
				}
			}
		}
		
		[Column(Name="price", Storage="_price", DbType="money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[Column(Name="ticketid", Storage="_ticketid", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string Ticketid
		{
			get
			{
				return this._ticketid;
			}
			set
			{
				if ((this._ticketid != value))
				{
					this._ticketid = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TicketOutStatisticDepart")]
	public partial class ViewTicketOutStatisticDepart : LinqEntityBase
	{
		
		private System.Nullable<int> _departId;
		
		private string _departName;
		
		private System.Nullable<int> _peopleCount;
		
		private string _id;
		
		private decimal _totalAmount;
		
		private decimal _payAmount;
		
		private int _ticketOfficeId;
		
		private int _companyID;
		
		private int _registerOperatorId;
		
		private byte _state;
		
		private string _ticketOffice;
		
		private System.Nullable<System.DateTime> _ticketOutTime;
		
		private string _pnr;
		
		private string _ticketNum;
		
		private string _aireLine;
		
		private string _ticketKind;
		
		public ViewTicketOutStatisticDepart()
		{
		}
		
		[Column(Storage="_departId", DbType="int")]
		public System.Nullable<int> DepartId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this._departId = value;
				}
			}
		}
		
		[Column(Storage="_departName", DbType="nvarchar(255)")]
		public string DepartName
		{
			get
			{
				return this._departName;
			}
			set
			{
				if ((this._departName != value))
				{
					this._departName = value;
				}
			}
		}
		
		[Column(Storage="_peopleCount", DbType="int")]
		public System.Nullable<int> PeopleCount
		{
			get
			{
				return this._peopleCount;
			}
			set
			{
				if ((this._peopleCount != value))
				{
					this._peopleCount = value;
				}
			}
		}
		
		[Column(Name="ID", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this._totalAmount = value;
				}
			}
		}
		
		[Column(Storage="_payAmount", DbType="money NOT NULL")]
		public decimal PayAmount
		{
			get
			{
				return this._payAmount;
			}
			set
			{
				if ((this._payAmount != value))
				{
					this._payAmount = value;
				}
			}
		}
		
		[Column(Storage="_ticketOfficeId", DbType="int NOT NULL")]
		public int TicketOfficeId
		{
			get
			{
				return this._ticketOfficeId;
			}
			set
			{
				if ((this._ticketOfficeId != value))
				{
					this._ticketOfficeId = value;
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this._companyID = value;
				}
			}
		}
		
		[Column(Storage="_registerOperatorId", DbType="int NOT NULL")]
		public int RegisterOperatorId
		{
			get
			{
				return this._registerOperatorId;
			}
			set
			{
				if ((this._registerOperatorId != value))
				{
					this._registerOperatorId = value;
				}
			}
		}
		
		[Column(Storage="_state", DbType="tinyint NOT NULL")]
		public byte State
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[Column(Storage="_ticketOffice", DbType="nvarchar(250)")]
		public string TicketOffice
		{
			get
			{
				return this._ticketOffice;
			}
			set
			{
				if ((this._ticketOffice != value))
				{
					this._ticketOffice = value;
				}
			}
		}
		
		[Column(Storage="_ticketOutTime", DbType="datetime")]
		public System.Nullable<System.DateTime> TicketOutTime
		{
			get
			{
				return this._ticketOutTime;
			}
			set
			{
				if ((this._ticketOutTime != value))
				{
					this._ticketOutTime = value;
				}
			}
		}
		
		[Column(Name="PNR", Storage="_pnr", DbType="nvarchar(MAX)")]
		public string Pnr
		{
			get
			{
				return this._pnr;
			}
			set
			{
				if ((this._pnr != value))
				{
					this._pnr = value;
				}
			}
		}
		
		[Column(Storage="_ticketNum", DbType="nvarchar(50)")]
		public string TicketNum
		{
			get
			{
				return this._ticketNum;
			}
			set
			{
				if ((this._ticketNum != value))
				{
					this._ticketNum = value;
				}
			}
		}
		
		[Column(Storage="_aireLine", DbType="nvarchar(MAX)")]
		public string AireLine
		{
			get
			{
				return this._aireLine;
			}
			set
			{
				if ((this._aireLine != value))
				{
					this._aireLine = value;
				}
			}
		}
		
		[Column(Storage="_ticketKind", DbType="nvarchar(MAX)")]
		public string TicketKind
		{
			get
			{
				return this._ticketKind;
			}
			set
			{
				if ((this._ticketKind != value))
				{
					this._ticketKind = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_TravelAndTicketArrear")]
	public partial class ViewTravelAndTicketArrear : LinqEntityBase
	{
		
		private string _tourId;
		
		private System.Nullable<decimal> _arrear;
		
		private decimal _totalAmount;
		
		private decimal _payAmount;
		
		private string _tourCode;
		
		private string _routeName;
		
		private System.Nullable<System.DateTime> _leaveDate;
		
		private int _serverId;
		
		private int _companyId;
		
		private int _serverType;
		
		private int _operateID;
		
		private string _operator;
		
		private byte _tourType;
		
		private int _areaId;
		
		private string _supplier;
		
		private System.DateTime _regtime;
		
		private int _salerId;
		
		private System.Nullable<int> _peopleCount;
		
		public ViewTravelAndTicketArrear()
		{
		}
		
		[Column(Storage="_tourId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TourId
		{
			get
			{
				return this._tourId;
			}
			set
			{
				if ((this._tourId != value))
				{
					this._tourId = value;
				}
			}
		}
		
		[Column(Storage="_arrear", DbType="money")]
		public System.Nullable<decimal> Arrear
		{
			get
			{
				return this._arrear;
			}
			set
			{
				if ((this._arrear != value))
				{
					this._arrear = value;
				}
			}
		}
		
		[Column(Storage="_totalAmount", DbType="money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this._totalAmount = value;
				}
			}
		}
		
		[Column(Storage="_payAmount", DbType="money NOT NULL")]
		public decimal PayAmount
		{
			get
			{
				return this._payAmount;
			}
			set
			{
				if ((this._payAmount != value))
				{
					this._payAmount = value;
				}
			}
		}
		
		[Column(Storage="_tourCode", DbType="nvarchar(50)")]
		public string TourCode
		{
			get
			{
				return this._tourCode;
			}
			set
			{
				if ((this._tourCode != value))
				{
					this._tourCode = value;
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(255)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this._routeName = value;
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this._leaveDate = value;
				}
			}
		}
		
		[Column(Storage="_serverId", DbType="int NOT NULL")]
		public int ServerId
		{
			get
			{
				return this._serverId;
			}
			set
			{
				if ((this._serverId != value))
				{
					this._serverId = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_serverType", DbType="int NOT NULL")]
		public int ServerType
		{
			get
			{
				return this._serverType;
			}
			set
			{
				if ((this._serverType != value))
				{
					this._serverType = value;
				}
			}
		}
		
		[Column(Storage="_operateID", DbType="int NOT NULL")]
		public int OperateID
		{
			get
			{
				return this._operateID;
			}
			set
			{
				if ((this._operateID != value))
				{
					this._operateID = value;
				}
			}
		}
		
		[Column(Name="operator", Storage="_operator", DbType="nvarchar(100)")]
		public string Operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this._operator = value;
				}
			}
		}
		
		[Column(Storage="_tourType", DbType="tinyint NOT NULL")]
		public byte TourType
		{
			get
			{
				return this._tourType;
			}
			set
			{
				if ((this._tourType != value))
				{
					this._tourType = value;
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this._areaId = value;
				}
			}
		}
		
		[Column(Storage="_supplier", DbType="nvarchar(255)")]
		public string Supplier
		{
			get
			{
				return this._supplier;
			}
			set
			{
				if ((this._supplier != value))
				{
					this._supplier = value;
				}
			}
		}
		
		[Column(Name="regtime", Storage="_regtime", DbType="datetime NOT NULL")]
		public System.DateTime Regtime
		{
			get
			{
				return this._regtime;
			}
			set
			{
				if ((this._regtime != value))
				{
					this._regtime = value;
				}
			}
		}
		
		[Column(Name="salerId", Storage="_salerId", DbType="int NOT NULL")]
		public int SalerId
		{
			get
			{
				return this._salerId;
			}
			set
			{
				if ((this._salerId != value))
				{
					this._salerId = value;
				}
			}
		}
		
		[Column(Name="peopleCount", Storage="_peopleCount", DbType="int")]
		public System.Nullable<int> PeopleCount
		{
			get
			{
				return this._peopleCount;
			}
			set
			{
				if ((this._peopleCount != value))
				{
					this._peopleCount = value;
				}
			}
		}
	}
	
	public partial class TStocPageResult
	{
		
		private System.Nullable<int> _recordCount;
		
		public TStocPageResult()
		{
		}
		
		[Column(Storage="_recordCount", DbType="int")]
		public System.Nullable<int> RecordCount
		{
			get
			{
				return this._recordCount;
			}
			set
			{
				if ((this._recordCount != value))
				{
					this._recordCount = value;
				}
			}
		}
	}
	
	public partial class FnSplitResult
	{
		
		private string _value;
		
		private int _id;
		
		public FnSplitResult()
		{
		}
		
		[Column(Name="value", Storage="_value", DbType="nvarchar(MAX)")]
		public string Value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class ProcCompanyUserGetUserByDepartResult
	{
		
		private int _id;
		
		public ProcCompanyUserGetUserByDepartResult()
		{
		}
		
		[Column(Name="id", Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class ProcCustomerInsertResult
	{
		
		private string _column1;
		
		public ProcCustomerInsertResult()
		{
		}
		
		[Column(Storage="_column1", DbType="varchar(200)")]
		public string Column1
		{
			get
			{
				return this._column1;
			}
			set
			{
				if ((this._column1 != value))
				{
					this._column1 = value;
				}
			}
		}
	}
	
	public partial class ProcCustomerUpdateResult
	{
		
		private string _column1;
		
		public ProcCustomerUpdateResult()
		{
		}
		
		[Column(Storage="_column1", DbType="varchar(200)")]
		public string Column1
		{
			get
			{
				return this._column1;
			}
			set
			{
				if ((this._column1 != value))
				{
					this._column1 = value;
				}
			}
		}
	}
	
	public partial class ProcRouteGetRouteInfoResult1
	{
		
		private int _id;
		
		private int _companyId;
		
		private int _operatorID;
		
		private string _operatorName;
		
		private int _areaId;
		
		private string _routeName;
		
		private string _routeDepict;
		
		private int _routeDays;
		
		private byte _routeIssueTypeId;
		
		private int _tourCount;
		
		private int _visitorCount;
		
		private System.DateTime _issueTime;
		
		public ProcRouteGetRouteInfoResult1()
		{
		}
		
		[Column(Name="ID", Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_operatorID", DbType="int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					this._operatorID = value;
				}
			}
		}
		
		[Column(Storage="_operatorName", DbType="nvarchar(100)")]
		public string OperatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this._operatorName = value;
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this._areaId = value;
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(250)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this._routeName = value;
				}
			}
		}
		
		[Column(Storage="_routeDepict", DbType="nvarchar(250)")]
		public string RouteDepict
		{
			get
			{
				return this._routeDepict;
			}
			set
			{
				if ((this._routeDepict != value))
				{
					this._routeDepict = value;
				}
			}
		}
		
		[Column(Storage="_routeDays", DbType="int NOT NULL")]
		public int RouteDays
		{
			get
			{
				return this._routeDays;
			}
			set
			{
				if ((this._routeDays != value))
				{
					this._routeDays = value;
				}
			}
		}
		
		[Column(Storage="_routeIssueTypeId", DbType="tinyint NOT NULL")]
		public byte RouteIssueTypeId
		{
			get
			{
				return this._routeIssueTypeId;
			}
			set
			{
				if ((this._routeIssueTypeId != value))
				{
					this._routeIssueTypeId = value;
				}
			}
		}
		
		[Column(Storage="_tourCount", DbType="int NOT NULL")]
		public int TourCount
		{
			get
			{
				return this._tourCount;
			}
			set
			{
				if ((this._tourCount != value))
				{
					this._tourCount = value;
				}
			}
		}
		
		[Column(Storage="_visitorCount", DbType="int NOT NULL")]
		public int VisitorCount
		{
			get
			{
				return this._visitorCount;
			}
			set
			{
				if ((this._visitorCount != value))
				{
					this._visitorCount = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
	}
	
	public partial class ProcRouteGetRouteInfoResult2
	{
		
		private int _id;
		
		private int _routeId;
		
		private string _fileName;
		
		private string _filePath;
		
		private string _remark;
		
		public ProcRouteGetRouteInfoResult2()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this._routeId = value;
				}
			}
		}
		
		[Column(Storage="_fileName", DbType="nvarchar(250)")]
		public string FileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this._fileName = value;
				}
			}
		}
		
		[Column(Storage="_filePath", DbType="nvarchar(250)")]
		public string FilePath
		{
			get
			{
				return this._filePath;
			}
			set
			{
				if ((this._filePath != value))
				{
					this._filePath = value;
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(250)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
	}
	
	public partial class ProcRouteGetRouteInfoResult3
	{
		
		private int _id;
		
		private int _routeId;
		
		private string _serviceType;
		
		private string _serviceValue;
		
		public ProcRouteGetRouteInfoResult3()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this._routeId = value;
				}
			}
		}
		
		[Column(Storage="_serviceType", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		public string ServiceType
		{
			get
			{
				return this._serviceType;
			}
			set
			{
				if ((this._serviceType != value))
				{
					this._serviceType = value;
				}
			}
		}
		
		[Column(Storage="_serviceValue", DbType="nvarchar(MAX)")]
		public string ServiceValue
		{
			get
			{
				return this._serviceValue;
			}
			set
			{
				if ((this._serviceValue != value))
				{
					this._serviceValue = value;
				}
			}
		}
	}
	
	public partial class ProcRouteGetRouteInfoResult4
	{
		
		private int _routeID;
		
		private string _planInterval;
		
		private string _vehicle;
		
		private string _trafficNumber;
		
		private string _house;
		
		private string _dinner;
		
		private string _planContent;
		
		private int _planDay;
		
		private string _imgPath;
		
		public ProcRouteGetRouteInfoResult4()
		{
		}
		
		[Column(Storage="_routeID", DbType="int NOT NULL")]
		public int RouteID
		{
			get
			{
				return this._routeID;
			}
			set
			{
				if ((this._routeID != value))
				{
					this._routeID = value;
				}
			}
		}
		
		[Column(Storage="_planInterval", DbType="nvarchar(MAX)")]
		public string PlanInterval
		{
			get
			{
				return this._planInterval;
			}
			set
			{
				if ((this._planInterval != value))
				{
					this._planInterval = value;
				}
			}
		}
		
		[Column(Storage="_vehicle", DbType="nvarchar(MAX)")]
		public string Vehicle
		{
			get
			{
				return this._vehicle;
			}
			set
			{
				if ((this._vehicle != value))
				{
					this._vehicle = value;
				}
			}
		}
		
		[Column(Storage="_trafficNumber", DbType="nvarchar(MAX)")]
		public string TrafficNumber
		{
			get
			{
				return this._trafficNumber;
			}
			set
			{
				if ((this._trafficNumber != value))
				{
					this._trafficNumber = value;
				}
			}
		}
		
		[Column(Storage="_house", DbType="nvarchar(MAX)")]
		public string House
		{
			get
			{
				return this._house;
			}
			set
			{
				if ((this._house != value))
				{
					this._house = value;
				}
			}
		}
		
		[Column(Storage="_dinner", DbType="nvarchar(MAX)")]
		public string Dinner
		{
			get
			{
				return this._dinner;
			}
			set
			{
				if ((this._dinner != value))
				{
					this._dinner = value;
				}
			}
		}
		
		[Column(Storage="_planContent", DbType="nvarchar(MAX)")]
		public string PlanContent
		{
			get
			{
				return this._planContent;
			}
			set
			{
				if ((this._planContent != value))
				{
					this._planContent = value;
				}
			}
		}
		
		[Column(Storage="_planDay", DbType="int NOT NULL")]
		public int PlanDay
		{
			get
			{
				return this._planDay;
			}
			set
			{
				if ((this._planDay != value))
				{
					this._planDay = value;
				}
			}
		}
		
		[Column(Storage="_imgPath", DbType="nvarchar(250)")]
		public string ImgPath
		{
			get
			{
				return this._imgPath;
			}
			set
			{
				if ((this._imgPath != value))
				{
					this._imgPath = value;
				}
			}
		}
	}
	
	public partial class ProcRouteGetRouteInfoResult5
	{
		
		private int _routeId;
		
		private string _routePlan;
		
		private string _serveRule;
		
		private string _remark;
		
		public ProcRouteGetRouteInfoResult5()
		{
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this._routeId = value;
				}
			}
		}
		
		[Column(Storage="_routePlan", DbType="nvarchar(MAX)")]
		public string RoutePlan
		{
			get
			{
				return this._routePlan;
			}
			set
			{
				if ((this._routePlan != value))
				{
					this._routePlan = value;
				}
			}
		}
		
		[Column(Storage="_serveRule", DbType="nvarchar(MAX)")]
		public string ServeRule
		{
			get
			{
				return this._serveRule;
			}
			set
			{
				if ((this._serveRule != value))
				{
					this._serveRule = value;
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
	}
	
	public partial class ProcRouteQuoteSelectQuoteInfoResult1
	{
		
		private int _id;
		
		private int _routeId;
		
		private int _quoteUnitsId;
		
		private string _quoteUnitsName;
		
		private string _contactName;
		
		private string _contactTel;
		
		private System.DateTime _tmpLeaveDate;
		
		private int _adultNum;
		
		private int _childNum;
		
		private int _peopleNum;
		
		private decimal _localQuoteSum;
		
		private decimal _myQuoteSum;
		
		private decimal _ticketAgio;
		
		private string _remark;
		
		private int _operatorId;
		
		private System.DateTime _routeQuote;
		
		private System.DateTime _issueTime;
		
		public ProcRouteQuoteSelectQuoteInfoResult1()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this._routeId = value;
				}
			}
		}
		
		[Column(Storage="_quoteUnitsId", DbType="int NOT NULL")]
		public int QuoteUnitsId
		{
			get
			{
				return this._quoteUnitsId;
			}
			set
			{
				if ((this._quoteUnitsId != value))
				{
					this._quoteUnitsId = value;
				}
			}
		}
		
		[Column(Storage="_quoteUnitsName", DbType="nvarchar(250)")]
		public string QuoteUnitsName
		{
			get
			{
				return this._quoteUnitsName;
			}
			set
			{
				if ((this._quoteUnitsName != value))
				{
					this._quoteUnitsName = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(250)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(250)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this._contactTel = value;
				}
			}
		}
		
		[Column(Storage="_tmpLeaveDate", DbType="datetime NOT NULL")]
		public System.DateTime TmpLeaveDate
		{
			get
			{
				return this._tmpLeaveDate;
			}
			set
			{
				if ((this._tmpLeaveDate != value))
				{
					this._tmpLeaveDate = value;
				}
			}
		}
		
		[Column(Storage="_adultNum", DbType="int NOT NULL")]
		public int AdultNum
		{
			get
			{
				return this._adultNum;
			}
			set
			{
				if ((this._adultNum != value))
				{
					this._adultNum = value;
				}
			}
		}
		
		[Column(Storage="_childNum", DbType="int NOT NULL")]
		public int ChildNum
		{
			get
			{
				return this._childNum;
			}
			set
			{
				if ((this._childNum != value))
				{
					this._childNum = value;
				}
			}
		}
		
		[Column(Storage="_peopleNum", DbType="int NOT NULL")]
		public int PeopleNum
		{
			get
			{
				return this._peopleNum;
			}
			set
			{
				if ((this._peopleNum != value))
				{
					this._peopleNum = value;
				}
			}
		}
		
		[Column(Storage="_localQuoteSum", DbType="money NOT NULL")]
		public decimal LocalQuoteSum
		{
			get
			{
				return this._localQuoteSum;
			}
			set
			{
				if ((this._localQuoteSum != value))
				{
					this._localQuoteSum = value;
				}
			}
		}
		
		[Column(Storage="_myQuoteSum", DbType="money NOT NULL")]
		public decimal MyQuoteSum
		{
			get
			{
				return this._myQuoteSum;
			}
			set
			{
				if ((this._myQuoteSum != value))
				{
					this._myQuoteSum = value;
				}
			}
		}
		
		[Column(Storage="_ticketAgio", DbType="decimal(8,6) NOT NULL")]
		public decimal TicketAgio
		{
			get
			{
				return this._ticketAgio;
			}
			set
			{
				if ((this._ticketAgio != value))
				{
					this._ticketAgio = value;
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this._operatorId = value;
				}
			}
		}
		
		[Column(Name="tbl_RouteQuote", Storage="_routeQuote", DbType="datetime NOT NULL")]
		public System.DateTime RouteQuote
		{
			get
			{
				return this._routeQuote;
			}
			set
			{
				if ((this._routeQuote != value))
				{
					this._routeQuote = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
	}
	
	public partial class ProcRouteQuoteSelectQuoteInfoResult2
	{
		
		private int _quoteId;
		
		private int _itemType;
		
		private string _concreteAsk;
		
		public ProcRouteQuoteSelectQuoteInfoResult2()
		{
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="int NOT NULL")]
		public int ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this._itemType = value;
				}
			}
		}
		
		[Column(Storage="_concreteAsk", DbType="nvarchar(MAX)")]
		public string ConcreteAsk
		{
			get
			{
				return this._concreteAsk;
			}
			set
			{
				if ((this._concreteAsk != value))
				{
					this._concreteAsk = value;
				}
			}
		}
	}
	
	public partial class ProcRouteQuoteSelectQuoteInfoResult3
	{
		
		private int _id;
		
		private System.Nullable<int> _quoteId;
		
		private int _itemId;
		
		private string _reception;
		
		private decimal _localQuote;
		
		private decimal _myQuote;
		
		public ProcRouteQuoteSelectQuoteInfoResult3()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_quoteId", DbType="int")]
		public System.Nullable<int> QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this._itemId = value;
				}
			}
		}
		
		[Column(Storage="_reception", DbType="nvarchar(MAX)")]
		public string Reception
		{
			get
			{
				return this._reception;
			}
			set
			{
				if ((this._reception != value))
				{
					this._reception = value;
				}
			}
		}
		
		[Column(Storage="_localQuote", DbType="money NOT NULL")]
		public decimal LocalQuote
		{
			get
			{
				return this._localQuote;
			}
			set
			{
				if ((this._localQuote != value))
				{
					this._localQuote = value;
				}
			}
		}
		
		[Column(Storage="_myQuote", DbType="money NOT NULL")]
		public decimal MyQuote
		{
			get
			{
				return this._myQuote;
			}
			set
			{
				if ((this._myQuote != value))
				{
					this._myQuote = value;
				}
			}
		}
	}
	
	public partial class ProcTourCreateAutoTourCodesResult
	{
		
		private System.Nullable<System.DateTime> _lDate;
		
		private string _tourCode;
		
		public ProcTourCreateAutoTourCodesResult()
		{
		}
		
		[Column(Storage="_lDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LDate
		{
			get
			{
				return this._lDate;
			}
			set
			{
				if ((this._lDate != value))
				{
					this._lDate = value;
				}
			}
		}
		
		[Column(Storage="_tourCode", DbType="nvarchar(58)")]
		public string TourCode
		{
			get
			{
				return this._tourCode;
			}
			set
			{
				if ((this._tourCode != value))
				{
					this._tourCode = value;
				}
			}
		}
	}
	
	public partial class ProcAreaGetAreaInfoResult1
	{
		
		private int _id;
		
		private string _areaName;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _isDelete;
		
		public ProcAreaGetAreaInfoResult1()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_areaName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._areaName;
			}
			set
			{
				if ((this._areaName != value))
				{
					this._areaName = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this._operatorId = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
	}
	
	public partial class ProcAreaGetAreaInfoResult2
	{
		
		private int _userId;
		
		private int _areaId;
		
		private string _contactName;
		
		public ProcAreaGetAreaInfoResult2()
		{
		}
		
		[Column(Storage="_userId", DbType="int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this._userId = value;
				}
			}
		}
		
		[Column(Storage="_areaId", DbType="int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					this._areaId = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(100)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
	}
	
	public partial class ProcCompanySupplierUpdateResult
	{
		
		private System.Nullable<int> _column1;
		
		public ProcCompanySupplierUpdateResult()
		{
		}
		
		[Column(Storage="_column1", DbType="int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._column1;
			}
			set
			{
				if ((this._column1 != value))
				{
					this._column1 = value;
				}
			}
		}
	}
	
	public partial class ProcCustomerStatusReturnResult
	{
		
		private System.Nullable<int> _column1;
		
		public ProcCustomerStatusReturnResult()
		{
		}
		
		[Column(Storage="_column1", DbType="int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._column1;
			}
			set
			{
				if ((this._column1 != value))
				{
					this._column1 = value;
				}
			}
		}
	}
	
	public partial class ProcFinancialGetExpenseRegisterAmountResult
	{
		
		private System.Nullable<decimal> _expenseAmount;
		
		private System.Nullable<decimal> _registerAmount;
		
		public ProcFinancialGetExpenseRegisterAmountResult()
		{
		}
		
		[Column(Storage="_expenseAmount", DbType="money")]
		public System.Nullable<decimal> ExpenseAmount
		{
			get
			{
				return this._expenseAmount;
			}
			set
			{
				if ((this._expenseAmount != value))
				{
					this._expenseAmount = value;
				}
			}
		}
		
		[Column(Storage="_registerAmount", DbType="money")]
		public System.Nullable<decimal> RegisterAmount
		{
			get
			{
				return this._registerAmount;
			}
			set
			{
				if ((this._registerAmount != value))
				{
					this._registerAmount = value;
				}
			}
		}
	}
	
	public partial class ProcSupplierGetShoppingResult1
	{
		
		private int _id;
		
		private int _provinceId;
		
		private string _provinceName;
		
		private int _cityId;
		
		private string _cityName;
		
		private string _unitName;
		
		private byte _supplierType;
		
		private string _unitAddress;
		
		private decimal _commission;
		
		private string _agreementFile;
		
		private int _tradeNum;
		
		private string _unitPolicy;
		
		private string _remark;
		
		private int _companyId;
		
		private int _operatorId;
		
		private System.DateTime _issueTime;
		
		private string _isDelete;
		
		private string _saleProduct;
		
		private string _guideWord;
		
		public ProcSupplierGetShoppingResult1()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_provinceId", DbType="int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._provinceId;
			}
			set
			{
				if ((this._provinceId != value))
				{
					this._provinceId = value;
				}
			}
		}
		
		[Column(Storage="_provinceName", DbType="nvarchar(255)")]
		public string ProvinceName
		{
			get
			{
				return this._provinceName;
			}
			set
			{
				if ((this._provinceName != value))
				{
					this._provinceName = value;
				}
			}
		}
		
		[Column(Storage="_cityId", DbType="int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._cityId;
			}
			set
			{
				if ((this._cityId != value))
				{
					this._cityId = value;
				}
			}
		}
		
		[Column(Storage="_cityName", DbType="nvarchar(255)")]
		public string CityName
		{
			get
			{
				return this._cityName;
			}
			set
			{
				if ((this._cityName != value))
				{
					this._cityName = value;
				}
			}
		}
		
		[Column(Storage="_unitName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._unitName;
			}
			set
			{
				if ((this._unitName != value))
				{
					this._unitName = value;
				}
			}
		}
		
		[Column(Storage="_supplierType", DbType="tinyint NOT NULL")]
		public byte SupplierType
		{
			get
			{
				return this._supplierType;
			}
			set
			{
				if ((this._supplierType != value))
				{
					this._supplierType = value;
				}
			}
		}
		
		[Column(Storage="_unitAddress", DbType="nvarchar(500)")]
		public string UnitAddress
		{
			get
			{
				return this._unitAddress;
			}
			set
			{
				if ((this._unitAddress != value))
				{
					this._unitAddress = value;
				}
			}
		}
		
		[Column(Storage="_commission", DbType="money NOT NULL")]
		public decimal Commission
		{
			get
			{
				return this._commission;
			}
			set
			{
				if ((this._commission != value))
				{
					this._commission = value;
				}
			}
		}
		
		[Column(Storage="_agreementFile", DbType="nvarchar(255)")]
		public string AgreementFile
		{
			get
			{
				return this._agreementFile;
			}
			set
			{
				if ((this._agreementFile != value))
				{
					this._agreementFile = value;
				}
			}
		}
		
		[Column(Storage="_tradeNum", DbType="int NOT NULL")]
		public int TradeNum
		{
			get
			{
				return this._tradeNum;
			}
			set
			{
				if ((this._tradeNum != value))
				{
					this._tradeNum = value;
				}
			}
		}
		
		[Column(Storage="_unitPolicy", DbType="nvarchar(MAX)")]
		public string UnitPolicy
		{
			get
			{
				return this._unitPolicy;
			}
			set
			{
				if ((this._unitPolicy != value))
				{
					this._unitPolicy = value;
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_operatorId", DbType="int NOT NULL")]
		public int OperatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this._operatorId = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
		
		[Column(Storage="_saleProduct", DbType="nvarchar(255)")]
		public string SaleProduct
		{
			get
			{
				return this._saleProduct;
			}
			set
			{
				if ((this._saleProduct != value))
				{
					this._saleProduct = value;
				}
			}
		}
		
		[Column(Storage="_guideWord", DbType="nvarchar(MAX)")]
		public string GuideWord
		{
			get
			{
				return this._guideWord;
			}
			set
			{
				if ((this._guideWord != value))
				{
					this._guideWord = value;
				}
			}
		}
	}
	
	public partial class ProcSupplierGetShoppingResult2
	{
		
		private int _id;
		
		private int _companyId;
		
		private int _supplierId;
		
		private byte _supplierType;
		
		private string _contactName;
		
		private string _jobTitle;
		
		private string _contactFax;
		
		private string _contactTel;
		
		private string _contactMobile;
		
		private string _qq;
		
		private string _email;
		
		public ProcSupplierGetShoppingResult2()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_supplierId", DbType="int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					this._supplierId = value;
				}
			}
		}
		
		[Column(Storage="_supplierType", DbType="tinyint NOT NULL")]
		public byte SupplierType
		{
			get
			{
				return this._supplierType;
			}
			set
			{
				if ((this._supplierType != value))
				{
					this._supplierType = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(50)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_jobTitle", DbType="nvarchar(255)")]
		public string JobTitle
		{
			get
			{
				return this._jobTitle;
			}
			set
			{
				if ((this._jobTitle != value))
				{
					this._jobTitle = value;
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="nvarchar(100)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this._contactFax = value;
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(100)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this._contactTel = value;
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="nvarchar(100)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this._contactMobile = value;
				}
			}
		}
		
		[Column(Name="QQ", Storage="_qq", DbType="nvarchar(100)")]
		public string Qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this._qq = value;
				}
			}
		}
		
		[Column(Storage="_email", DbType="nvarchar(100)")]
		public string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
	}
	
	public partial class ProcSupplierContactUpdateResult
	{
		
		private System.Nullable<int> _vid;
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _companyId;
		
		private System.Nullable<int> _supplierId;
		
		private System.Nullable<byte> _supplierType;
		
		private string _contactName;
		
		private string _jobTitle;
		
		private string _contactFax;
		
		private string _contactTel;
		
		private string _contactMobile;
		
		private string _qq;
		
		private string _email;
		
		public ProcSupplierContactUpdateResult()
		{
		}
		
		[Column(Storage="_vid", DbType="int")]
		public System.Nullable<int> Vid
		{
			get
			{
				return this._vid;
			}
			set
			{
				if ((this._vid != value))
				{
					this._vid = value;
				}
			}
		}
		
		[Column(Name="id", Storage="_id", DbType="int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_supplierId", DbType="int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					this._supplierId = value;
				}
			}
		}
		
		[Column(Storage="_supplierType", DbType="tinyint")]
		public System.Nullable<byte> SupplierType
		{
			get
			{
				return this._supplierType;
			}
			set
			{
				if ((this._supplierType != value))
				{
					this._supplierType = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(250)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_jobTitle", DbType="nvarchar(250)")]
		public string JobTitle
		{
			get
			{
				return this._jobTitle;
			}
			set
			{
				if ((this._jobTitle != value))
				{
					this._jobTitle = value;
				}
			}
		}
		
		[Column(Storage="_contactFax", DbType="nvarchar(250)")]
		public string ContactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this._contactFax = value;
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(250)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this._contactTel = value;
				}
			}
		}
		
		[Column(Storage="_contactMobile", DbType="nvarchar(250)")]
		public string ContactMobile
		{
			get
			{
				return this._contactMobile;
			}
			set
			{
				if ((this._contactMobile != value))
				{
					this._contactMobile = value;
				}
			}
		}
		
		[Column(Name="QQ", Storage="_qq", DbType="nvarchar(250)")]
		public string Qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this._qq = value;
				}
			}
		}
		
		[Column(Storage="_email", DbType="nvarchar(250)")]
		public string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
	}
	
	public partial class ProcTicketGetModelResult1
	{
		
		private string _ticketOutId;
		
		private string _ticketNum;
		
		private int _companyID;
		
		private string _routeName;
		
		private string _operator;
		
		private byte _state;
		
		private string _tourcode;
		
		public ProcTicketGetModelResult1()
		{
		}
		
		[Column(Storage="_ticketOutId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TicketOutId
		{
			get
			{
				return this._ticketOutId;
			}
			set
			{
				if ((this._ticketOutId != value))
				{
					this._ticketOutId = value;
				}
			}
		}
		
		[Column(Storage="_ticketNum", DbType="nvarchar(50)")]
		public string TicketNum
		{
			get
			{
				return this._ticketNum;
			}
			set
			{
				if ((this._ticketNum != value))
				{
					this._ticketNum = value;
				}
			}
		}
		
		[Column(Storage="_companyID", DbType="int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if ((this._companyID != value))
				{
					this._companyID = value;
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(50)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this._routeName = value;
				}
			}
		}
		
		[Column(Storage="_operator", DbType="nvarchar(50)")]
		public string Operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this._operator = value;
				}
			}
		}
		
		[Column(Storage="_state", DbType="tinyint NOT NULL")]
		public byte State
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[Column(Name="tourcode", Storage="_tourcode", DbType="nvarchar(50)")]
		public string Tourcode
		{
			get
			{
				return this._tourcode;
			}
			set
			{
				if ((this._tourcode != value))
				{
					this._tourcode = value;
				}
			}
		}
	}
	
	public partial class ProcTicketGetModelResult2
	{
		
		private string _ticketOutId;
		
		private string _ticketNum;
		
		private int _companyId;
		
		private string _routeName;
		
		private string _operator;
		
		private byte _state;
		
		private string _tourcode;
		
		public ProcTicketGetModelResult2()
		{
		}
		
		[Column(Storage="_ticketOutId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TicketOutId
		{
			get
			{
				return this._ticketOutId;
			}
			set
			{
				if ((this._ticketOutId != value))
				{
					this._ticketOutId = value;
				}
			}
		}
		
		[Column(Storage="_ticketNum", DbType="nvarchar(50)")]
		public string TicketNum
		{
			get
			{
				return this._ticketNum;
			}
			set
			{
				if ((this._ticketNum != value))
				{
					this._ticketNum = value;
				}
			}
		}
		
		[Column(Name="companyId", Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Name="routeName", Storage="_routeName", DbType="nvarchar(50)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this._routeName = value;
				}
			}
		}
		
		[Column(Name="operator", Storage="_operator", DbType="nvarchar(50)")]
		public string Operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this._operator = value;
				}
			}
		}
		
		[Column(Name="state", Storage="_state", DbType="tinyint NOT NULL")]
		public byte State
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[Column(Name="tourcode", Storage="_tourcode", DbType="nvarchar(50)")]
		public string Tourcode
		{
			get
			{
				return this._tourcode;
			}
			set
			{
				if ((this._tourcode != value))
				{
					this._tourcode = value;
				}
			}
		}
	}
	
	public partial class ProcTicketGetReturnModelResult
	{
		
		private string _id;
		
		public ProcTicketGetReturnModelResult()
		{
		}
		
		[Column(Name="id", Storage="_id", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class ProcTicketGetTicketOutIdResult1
	{
		
		private string _ticketOutId;
		
		public ProcTicketGetTicketOutIdResult1()
		{
		}
		
		[Column(Storage="_ticketOutId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TicketOutId
		{
			get
			{
				return this._ticketOutId;
			}
			set
			{
				if ((this._ticketOutId != value))
				{
					this._ticketOutId = value;
				}
			}
		}
	}
	
	public partial class ProcTicketGetTicketOutIdResult2
	{
		
		private string _ticketOutId;
		
		public ProcTicketGetTicketOutIdResult2()
		{
		}
		
		[Column(Storage="_ticketOutId", DbType="char(36) NOT NULL", CanBeNull=false)]
		public string TicketOutId
		{
			get
			{
				return this._ticketOutId;
			}
			set
			{
				if ((this._ticketOutId != value))
				{
					this._ticketOutId = value;
				}
			}
		}
	}
	
	public partial class ProcTourGetInquireQuoteResult1
	{
		
		private int _id;
		
		private int _companyId;
		
		private int _routeId;
		
		private string _routeName;
		
		private int _customerId;
		
		private string _customerName;
		
		private string _contactName;
		
		private string _contactTel;
		
		private System.Nullable<System.DateTime> _leaveDate;
		
		private int _adultNumber;
		
		private int _childNumber;
		
		private string _specialClaim;
		
		private decimal _ticketAgio;
		
		private string _remark;
		
		private System.DateTime _issueTime;
		
		private byte _quoteState;
		
		private string _buildTourId;
		
		private System.Nullable<System.DateTime> _buildTime;
		
		private int _buileOperatorId;
		
		private string _isDelete;
		
		public ProcTourGetInquireQuoteResult1()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this._routeId = value;
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(255)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this._routeName = value;
				}
			}
		}
		
		[Column(Storage="_customerId", DbType="int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this._customerId = value;
				}
			}
		}
		
		[Column(Storage="_customerName", DbType="nvarchar(255)")]
		public string CustomerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this._customerName = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(255)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(255)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this._contactTel = value;
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this._leaveDate = value;
				}
			}
		}
		
		[Column(Storage="_adultNumber", DbType="int NOT NULL")]
		public int AdultNumber
		{
			get
			{
				return this._adultNumber;
			}
			set
			{
				if ((this._adultNumber != value))
				{
					this._adultNumber = value;
				}
			}
		}
		
		[Column(Storage="_childNumber", DbType="int NOT NULL")]
		public int ChildNumber
		{
			get
			{
				return this._childNumber;
			}
			set
			{
				if ((this._childNumber != value))
				{
					this._childNumber = value;
				}
			}
		}
		
		[Column(Storage="_specialClaim", DbType="nvarchar(MAX)")]
		public string SpecialClaim
		{
			get
			{
				return this._specialClaim;
			}
			set
			{
				if ((this._specialClaim != value))
				{
					this._specialClaim = value;
				}
			}
		}
		
		[Column(Storage="_ticketAgio", DbType="decimal(8,6) NOT NULL")]
		public decimal TicketAgio
		{
			get
			{
				return this._ticketAgio;
			}
			set
			{
				if ((this._ticketAgio != value))
				{
					this._ticketAgio = value;
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_quoteState", DbType="tinyint NOT NULL")]
		public byte QuoteState
		{
			get
			{
				return this._quoteState;
			}
			set
			{
				if ((this._quoteState != value))
				{
					this._quoteState = value;
				}
			}
		}
		
		[Column(Storage="_buildTourId", DbType="char(36)")]
		public string BuildTourId
		{
			get
			{
				return this._buildTourId;
			}
			set
			{
				if ((this._buildTourId != value))
				{
					this._buildTourId = value;
				}
			}
		}
		
		[Column(Storage="_buildTime", DbType="datetime")]
		public System.Nullable<System.DateTime> BuildTime
		{
			get
			{
				return this._buildTime;
			}
			set
			{
				if ((this._buildTime != value))
				{
					this._buildTime = value;
				}
			}
		}
		
		[Column(Storage="_buileOperatorId", DbType="int NOT NULL")]
		public int BuileOperatorId
		{
			get
			{
				return this._buileOperatorId;
			}
			set
			{
				if ((this._buileOperatorId != value))
				{
					this._buileOperatorId = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
	}
	
	public partial class ProcTourGetInquireQuoteResult2
	{
		
		private int _quoteId;
		
		private string _quotePlan;
		
		private string _planAccessoryName;
		
		private string _planAccessory;
		
		public ProcTourGetInquireQuoteResult2()
		{
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_quotePlan", DbType="nvarchar(MAX)")]
		public string QuotePlan
		{
			get
			{
				return this._quotePlan;
			}
			set
			{
				if ((this._quotePlan != value))
				{
					this._quotePlan = value;
				}
			}
		}
		
		[Column(Storage="_planAccessoryName", DbType="nvarchar(255)")]
		public string PlanAccessoryName
		{
			get
			{
				return this._planAccessoryName;
			}
			set
			{
				if ((this._planAccessoryName != value))
				{
					this._planAccessoryName = value;
				}
			}
		}
		
		[Column(Storage="_planAccessory", DbType="nvarchar(255)")]
		public string PlanAccessory
		{
			get
			{
				return this._planAccessory;
			}
			set
			{
				if ((this._planAccessory != value))
				{
					this._planAccessory = value;
				}
			}
		}
	}
	
	public partial class ProcTourGetInquireQuoteResult3
	{
		
		private int _quoteId;
		
		private int _itemType;
		
		private string _concreteAsk;
		
		public ProcTourGetInquireQuoteResult3()
		{
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="int NOT NULL")]
		public int ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this._itemType = value;
				}
			}
		}
		
		[Column(Storage="_concreteAsk", DbType="nvarchar(MAX)")]
		public string ConcreteAsk
		{
			get
			{
				return this._concreteAsk;
			}
			set
			{
				if ((this._concreteAsk != value))
				{
					this._concreteAsk = value;
				}
			}
		}
	}
	
	public partial class ProcTourGetInquireQuoteResult4
	{
		
		private int _id;
		
		private int _quoteId;
		
		private int _itemId;
		
		private string _reception;
		
		private decimal _localQuote;
		
		private decimal _myQuote;
		
		private decimal _sumMoney;
		
		public ProcTourGetInquireQuoteResult4()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this._itemId = value;
				}
			}
		}
		
		[Column(Storage="_reception", DbType="nvarchar(MAX)")]
		public string Reception
		{
			get
			{
				return this._reception;
			}
			set
			{
				if ((this._reception != value))
				{
					this._reception = value;
				}
			}
		}
		
		[Column(Storage="_localQuote", DbType="money NOT NULL")]
		public decimal LocalQuote
		{
			get
			{
				return this._localQuote;
			}
			set
			{
				if ((this._localQuote != value))
				{
					this._localQuote = value;
				}
			}
		}
		
		[Column(Storage="_myQuote", DbType="money NOT NULL")]
		public decimal MyQuote
		{
			get
			{
				return this._myQuote;
			}
			set
			{
				if ((this._myQuote != value))
				{
					this._myQuote = value;
				}
			}
		}
		
		[Column(Storage="_sumMoney", DbType="money NOT NULL")]
		public decimal SumMoney
		{
			get
			{
				return this._sumMoney;
			}
			set
			{
				if ((this._sumMoney != value))
				{
					this._sumMoney = value;
				}
			}
		}
	}
	
	public partial class ProcTourGetInquireQuoteResult5
	{
		
		private int _id;
		
		private int _companyId;
		
		private int _routeId;
		
		private string _routeName;
		
		private int _customerId;
		
		private string _customerName;
		
		private string _contactName;
		
		private string _contactTel;
		
		private System.Nullable<System.DateTime> _leaveDate;
		
		private int _adultNumber;
		
		private int _childNumber;
		
		private string _specialClaim;
		
		private decimal _ticketAgio;
		
		private string _remark;
		
		private System.DateTime _issueTime;
		
		private byte _quoteState;
		
		private string _buildTourId;
		
		private System.Nullable<System.DateTime> _buildTime;
		
		private int _buileOperatorId;
		
		private string _isDelete;
		
		public ProcTourGetInquireQuoteResult5()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_companyId", DbType="int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[Column(Storage="_routeId", DbType="int NOT NULL")]
		public int RouteId
		{
			get
			{
				return this._routeId;
			}
			set
			{
				if ((this._routeId != value))
				{
					this._routeId = value;
				}
			}
		}
		
		[Column(Storage="_routeName", DbType="nvarchar(255)")]
		public string RouteName
		{
			get
			{
				return this._routeName;
			}
			set
			{
				if ((this._routeName != value))
				{
					this._routeName = value;
				}
			}
		}
		
		[Column(Storage="_customerId", DbType="int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this._customerId = value;
				}
			}
		}
		
		[Column(Storage="_customerName", DbType="nvarchar(255)")]
		public string CustomerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this._customerName = value;
				}
			}
		}
		
		[Column(Storage="_contactName", DbType="nvarchar(255)")]
		public string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[Column(Storage="_contactTel", DbType="nvarchar(255)")]
		public string ContactTel
		{
			get
			{
				return this._contactTel;
			}
			set
			{
				if ((this._contactTel != value))
				{
					this._contactTel = value;
				}
			}
		}
		
		[Column(Storage="_leaveDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._leaveDate;
			}
			set
			{
				if ((this._leaveDate != value))
				{
					this._leaveDate = value;
				}
			}
		}
		
		[Column(Storage="_adultNumber", DbType="int NOT NULL")]
		public int AdultNumber
		{
			get
			{
				return this._adultNumber;
			}
			set
			{
				if ((this._adultNumber != value))
				{
					this._adultNumber = value;
				}
			}
		}
		
		[Column(Storage="_childNumber", DbType="int NOT NULL")]
		public int ChildNumber
		{
			get
			{
				return this._childNumber;
			}
			set
			{
				if ((this._childNumber != value))
				{
					this._childNumber = value;
				}
			}
		}
		
		[Column(Storage="_specialClaim", DbType="nvarchar(MAX)")]
		public string SpecialClaim
		{
			get
			{
				return this._specialClaim;
			}
			set
			{
				if ((this._specialClaim != value))
				{
					this._specialClaim = value;
				}
			}
		}
		
		[Column(Storage="_ticketAgio", DbType="decimal(8,6) NOT NULL")]
		public decimal TicketAgio
		{
			get
			{
				return this._ticketAgio;
			}
			set
			{
				if ((this._ticketAgio != value))
				{
					this._ticketAgio = value;
				}
			}
		}
		
		[Column(Storage="_remark", DbType="nvarchar(MAX)")]
		public string Remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
		
		[Column(Storage="_issueTime", DbType="datetime NOT NULL")]
		public System.DateTime IssueTime
		{
			get
			{
				return this._issueTime;
			}
			set
			{
				if ((this._issueTime != value))
				{
					this._issueTime = value;
				}
			}
		}
		
		[Column(Storage="_quoteState", DbType="tinyint NOT NULL")]
		public byte QuoteState
		{
			get
			{
				return this._quoteState;
			}
			set
			{
				if ((this._quoteState != value))
				{
					this._quoteState = value;
				}
			}
		}
		
		[Column(Storage="_buildTourId", DbType="char(36)")]
		public string BuildTourId
		{
			get
			{
				return this._buildTourId;
			}
			set
			{
				if ((this._buildTourId != value))
				{
					this._buildTourId = value;
				}
			}
		}
		
		[Column(Storage="_buildTime", DbType="datetime")]
		public System.Nullable<System.DateTime> BuildTime
		{
			get
			{
				return this._buildTime;
			}
			set
			{
				if ((this._buildTime != value))
				{
					this._buildTime = value;
				}
			}
		}
		
		[Column(Storage="_buileOperatorId", DbType="int NOT NULL")]
		public int BuileOperatorId
		{
			get
			{
				return this._buileOperatorId;
			}
			set
			{
				if ((this._buileOperatorId != value))
				{
					this._buileOperatorId = value;
				}
			}
		}
		
		[Column(Storage="_isDelete", DbType="char(1) NOT NULL", CanBeNull=false)]
		public string IsDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this._isDelete = value;
				}
			}
		}
	}
	
	public partial class ProcTourGetInquireQuoteResult6
	{
		
		private int _quoteId;
		
		private string _quotePlan;
		
		private string _planAccessoryName;
		
		private string _planAccessory;
		
		public ProcTourGetInquireQuoteResult6()
		{
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_quotePlan", DbType="nvarchar(MAX)")]
		public string QuotePlan
		{
			get
			{
				return this._quotePlan;
			}
			set
			{
				if ((this._quotePlan != value))
				{
					this._quotePlan = value;
				}
			}
		}
		
		[Column(Storage="_planAccessoryName", DbType="nvarchar(255)")]
		public string PlanAccessoryName
		{
			get
			{
				return this._planAccessoryName;
			}
			set
			{
				if ((this._planAccessoryName != value))
				{
					this._planAccessoryName = value;
				}
			}
		}
		
		[Column(Storage="_planAccessory", DbType="nvarchar(255)")]
		public string PlanAccessory
		{
			get
			{
				return this._planAccessory;
			}
			set
			{
				if ((this._planAccessory != value))
				{
					this._planAccessory = value;
				}
			}
		}
	}
	
	public partial class ProcTourGetInquireQuoteResult7
	{
		
		private int _quoteId;
		
		private int _itemType;
		
		private string _concreteAsk;
		
		public ProcTourGetInquireQuoteResult7()
		{
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_itemType", DbType="int NOT NULL")]
		public int ItemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this._itemType = value;
				}
			}
		}
		
		[Column(Storage="_concreteAsk", DbType="nvarchar(MAX)")]
		public string ConcreteAsk
		{
			get
			{
				return this._concreteAsk;
			}
			set
			{
				if ((this._concreteAsk != value))
				{
					this._concreteAsk = value;
				}
			}
		}
	}
	
	public partial class ProcTourGetInquireQuoteResult8
	{
		
		private int _id;
		
		private int _quoteId;
		
		private int _itemId;
		
		private string _reception;
		
		private decimal _localQuote;
		
		private decimal _myQuote;
		
		private decimal _sumMoney;
		
		public ProcTourGetInquireQuoteResult8()
		{
		}
		
		[Column(Storage="_id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_quoteId", DbType="int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._quoteId;
			}
			set
			{
				if ((this._quoteId != value))
				{
					this._quoteId = value;
				}
			}
		}
		
		[Column(Storage="_itemId", DbType="int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this._itemId = value;
				}
			}
		}
		
		[Column(Storage="_reception", DbType="nvarchar(MAX)")]
		public string Reception
		{
			get
			{
				return this._reception;
			}
			set
			{
				if ((this._reception != value))
				{
					this._reception = value;
				}
			}
		}
		
		[Column(Storage="_localQuote", DbType="money NOT NULL")]
		public decimal LocalQuote
		{
			get
			{
				return this._localQuote;
			}
			set
			{
				if ((this._localQuote != value))
				{
					this._localQuote = value;
				}
			}
		}
		
		[Column(Storage="_myQuote", DbType="money NOT NULL")]
		public decimal MyQuote
		{
			get
			{
				return this._myQuote;
			}
			set
			{
				if ((this._myQuote != value))
				{
					this._myQuote = value;
				}
			}
		}
		
		[Column(Storage="_sumMoney", DbType="money NOT NULL")]
		public decimal SumMoney
		{
			get
			{
				return this._sumMoney;
			}
			set
			{
				if ((this._sumMoney != value))
				{
					this._sumMoney = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
